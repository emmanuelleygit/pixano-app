(window.webpackJsonp=window.webpackJsonp||[]).push([[13,20],Array(72).concat([function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return Xt})),n.d(e,"AdagradOptimizer",(function(){return Jt})),n.d(e,"AdamOptimizer",(function(){return te})),n.d(e,"AdamaxOptimizer",(function(){return re})),n.d(e,"MomentumOptimizer",(function(){return se})),n.d(e,"Optimizer",(function(){return Kt})),n.d(e,"RMSPropOptimizer",(function(){return ie})),n.d(e,"SGDOptimizer",(function(){return ae})),n.d(e,"Tensor",(function(){return K.a})),n.d(e,"TensorBuffer",(function(){return K.b})),n.d(e,"Variable",(function(){return K.c})),n.d(e,"Rank",(function(){return oe.a})),n.d(e,"sumOutType",(function(){return oe.b})),n.d(e,"upcastType",(function(){return oe.c})),n.d(e,"abs",(function(){return ue.b})),n.d(e,"acos",(function(){return ue.c})),n.d(e,"acosh",(function(){return ue.d})),n.d(e,"add",(function(){return ue.e})),n.d(e,"addN",(function(){return ue.f})),n.d(e,"all",(function(){return ue.g})),n.d(e,"any",(function(){return ue.h})),n.d(e,"argMax",(function(){return ue.i})),n.d(e,"argMin",(function(){return ue.j})),n.d(e,"asin",(function(){return ue.k})),n.d(e,"asinh",(function(){return ue.l})),n.d(e,"atan",(function(){return ue.m})),n.d(e,"atan2",(function(){return ue.n})),n.d(e,"atanh",(function(){return ue.o})),n.d(e,"avgPool",(function(){return ue.p})),n.d(e,"avgPool3d",(function(){return ue.q})),n.d(e,"basicLSTMCell",(function(){return ue.r})),n.d(e,"batchToSpaceND",(function(){return ue.w})),n.d(e,"batchNorm",(function(){return ue.s})),n.d(e,"batchNorm2d",(function(){return ue.t})),n.d(e,"batchNorm3d",(function(){return ue.u})),n.d(e,"batchNorm4d",(function(){return ue.v})),n.d(e,"bincount",(function(){return ue.x})),n.d(e,"broadcastTo",(function(){return ue.z})),n.d(e,"buffer",(function(){return ue.A})),n.d(e,"cast",(function(){return ue.B})),n.d(e,"ceil",(function(){return ue.C})),n.d(e,"clipByValue",(function(){return ue.D})),n.d(e,"clone",(function(){return ue.E})),n.d(e,"complex",(function(){return ue.F})),n.d(e,"concat",(function(){return ue.G})),n.d(e,"concat1d",(function(){return ue.H})),n.d(e,"concat2d",(function(){return ue.I})),n.d(e,"concat3d",(function(){return ue.J})),n.d(e,"concat4d",(function(){return ue.K})),n.d(e,"conv1d",(function(){return ue.L})),n.d(e,"conv2d",(function(){return ue.M})),n.d(e,"conv2dTranspose",(function(){return ue.N})),n.d(e,"conv3d",(function(){return ue.O})),n.d(e,"conv3dTranspose",(function(){return ue.P})),n.d(e,"cos",(function(){return ue.Q})),n.d(e,"cosh",(function(){return ue.R})),n.d(e,"cumsum",(function(){return ue.T})),n.d(e,"denseBincount",(function(){return ue.U})),n.d(e,"depthToSpace",(function(){return ue.V})),n.d(e,"depthwiseConv2d",(function(){return ue.W})),n.d(e,"diag",(function(){return ue.X})),n.d(e,"dilation2d",(function(){return ue.Y})),n.d(e,"div",(function(){return ue.Z})),n.d(e,"divNoNan",(function(){return ue.ab})),n.d(e,"dot",(function(){return ue.bb})),n.d(e,"elu",(function(){return ue.db})),n.d(e,"equal",(function(){return ue.fb})),n.d(e,"erf",(function(){return ue.gb})),n.d(e,"exp",(function(){return ue.hb})),n.d(e,"expandDims",(function(){return ue.ib})),n.d(e,"expm1",(function(){return ue.jb})),n.d(e,"eye",(function(){return ue.kb})),n.d(e,"fill",(function(){return ue.mb})),n.d(e,"floor",(function(){return ue.nb})),n.d(e,"floorDiv",(function(){return ue.ob})),n.d(e,"gather",(function(){return ue.qb})),n.d(e,"greater",(function(){return ue.sb})),n.d(e,"greaterEqual",(function(){return ue.tb})),n.d(e,"imag",(function(){return ue.vb})),n.d(e,"isFinite",(function(){return ue.zb})),n.d(e,"isInf",(function(){return ue.Ab})),n.d(e,"isNaN",(function(){return ue.Bb})),n.d(e,"leakyRelu",(function(){return ue.Cb})),n.d(e,"less",(function(){return ue.Db})),n.d(e,"lessEqual",(function(){return ue.Eb})),n.d(e,"linspace",(function(){return ue.Gb})),n.d(e,"localResponseNormalization",(function(){return ue.Hb})),n.d(e,"log",(function(){return ue.Ib})),n.d(e,"log1p",(function(){return ue.Jb})),n.d(e,"logSigmoid",(function(){return ue.Kb})),n.d(e,"logSoftmax",(function(){return ue.Lb})),n.d(e,"logSumExp",(function(){return ue.Mb})),n.d(e,"logicalAnd",(function(){return ue.Nb})),n.d(e,"logicalNot",(function(){return ue.Ob})),n.d(e,"logicalOr",(function(){return ue.Pb})),n.d(e,"logicalXor",(function(){return ue.Qb})),n.d(e,"matMul",(function(){return ue.Sb})),n.d(e,"max",(function(){return ue.Tb})),n.d(e,"maxPool",(function(){return ue.Ub})),n.d(e,"maxPool3d",(function(){return ue.Vb})),n.d(e,"maxPoolWithArgmax",(function(){return ue.Wb})),n.d(e,"maximum",(function(){return ue.Xb})),n.d(e,"mean",(function(){return ue.Yb})),n.d(e,"min",(function(){return ue.Zb})),n.d(e,"minimum",(function(){return ue.ac})),n.d(e,"mirrorPad",(function(){return ue.bc})),n.d(e,"mod",(function(){return ue.cc})),n.d(e,"moments",(function(){return ue.dc})),n.d(e,"mul",(function(){return ue.fc})),n.d(e,"multiRNNCell",(function(){return ue.gc})),n.d(e,"multinomial",(function(){return ue.hc})),n.d(e,"neg",(function(){return ue.ic})),n.d(e,"notEqual",(function(){return ue.kc})),n.d(e,"oneHot",(function(){return ue.lc})),n.d(e,"ones",(function(){return ue.mc})),n.d(e,"onesLike",(function(){return ue.nc})),n.d(e,"outerProduct",(function(){return ue.pc})),n.d(e,"pad",(function(){return ue.qc})),n.d(e,"pad1d",(function(){return ue.rc})),n.d(e,"pad2d",(function(){return ue.sc})),n.d(e,"pad3d",(function(){return ue.tc})),n.d(e,"pad4d",(function(){return ue.uc})),n.d(e,"pool",(function(){return ue.vc})),n.d(e,"pow",(function(){return ue.wc})),n.d(e,"prelu",(function(){return ue.xc})),n.d(e,"print",(function(){return ue.yc})),n.d(e,"prod",(function(){return ue.zc})),n.d(e,"rand",(function(){return ue.Ac})),n.d(e,"randomGamma",(function(){return ue.Bc})),n.d(e,"randomNormal",(function(){return ue.Cc})),n.d(e,"randomUniform",(function(){return ue.Dc})),n.d(e,"range",(function(){return ue.Ec})),n.d(e,"real",(function(){return ue.Fc})),n.d(e,"reciprocal",(function(){return ue.Gc})),n.d(e,"relu",(function(){return ue.Hc})),n.d(e,"relu6",(function(){return ue.Ic})),n.d(e,"reshape",(function(){return ue.Jc})),n.d(e,"reverse",(function(){return ue.Kc})),n.d(e,"reverse1d",(function(){return ue.Lc})),n.d(e,"reverse2d",(function(){return ue.Mc})),n.d(e,"reverse3d",(function(){return ue.Nc})),n.d(e,"reverse4d",(function(){return ue.Oc})),n.d(e,"round",(function(){return ue.Qc})),n.d(e,"rsqrt",(function(){return ue.Rc})),n.d(e,"scalar",(function(){return ue.Sc})),n.d(e,"selu",(function(){return ue.Uc})),n.d(e,"separableConv2d",(function(){return ue.Vc})),n.d(e,"setdiff1dAsync",(function(){return ue.Wc})),n.d(e,"sigmoid",(function(){return ue.Xc})),n.d(e,"sign",(function(){return ue.Yc})),n.d(e,"sin",(function(){return ue.ad})),n.d(e,"sinh",(function(){return ue.bd})),n.d(e,"slice",(function(){return ue.cd})),n.d(e,"slice1d",(function(){return ue.dd})),n.d(e,"slice2d",(function(){return ue.ed})),n.d(e,"slice3d",(function(){return ue.fd})),n.d(e,"slice4d",(function(){return ue.gd})),n.d(e,"softmax",(function(){return ue.hd})),n.d(e,"softplus",(function(){return ue.id})),n.d(e,"spaceToBatchND",(function(){return ue.jd})),n.d(e,"fft",(function(){return ue.lb})),n.d(e,"ifft",(function(){return ue.ub})),n.d(e,"irfft",(function(){return ue.yb})),n.d(e,"rfft",(function(){return ue.Pc})),n.d(e,"split",(function(){return ue.md})),n.d(e,"sqrt",(function(){return ue.nd})),n.d(e,"square",(function(){return ue.od})),n.d(e,"squaredDifference",(function(){return ue.pd})),n.d(e,"squeeze",(function(){return ue.qd})),n.d(e,"stack",(function(){return ue.rd})),n.d(e,"step",(function(){return ue.sd})),n.d(e,"stridedSlice",(function(){return ue.td})),n.d(e,"sub",(function(){return ue.ud})),n.d(e,"sum",(function(){return ue.vd})),n.d(e,"tan",(function(){return ue.wd})),n.d(e,"tanh",(function(){return ue.xd})),n.d(e,"tensor",(function(){return ue.yd})),n.d(e,"tensor1d",(function(){return ue.zd})),n.d(e,"tensor2d",(function(){return ue.Ad})),n.d(e,"tensor3d",(function(){return ue.Bd})),n.d(e,"tensor4d",(function(){return ue.Cd})),n.d(e,"tensor5d",(function(){return ue.Dd})),n.d(e,"tensor6d",(function(){return ue.Ed})),n.d(e,"tile",(function(){return ue.Fd})),n.d(e,"topk",(function(){return ue.Gd})),n.d(e,"truncatedNormal",(function(){return ue.Id})),n.d(e,"unique",(function(){return ue.Jd})),n.d(e,"unsortedSegmentSum",(function(){return ue.Kd})),n.d(e,"unstack",(function(){return ue.Ld})),n.d(e,"variable",(function(){return ue.Md})),n.d(e,"where",(function(){return ue.Nd})),n.d(e,"whereAsync",(function(){return ue.Od})),n.d(e,"zeros",(function(){return ue.Pd})),n.d(e,"zerosLike",(function(){return ue.Qd})),n.d(e,"booleanMaskAsync",(function(){return ue.y})),n.d(e,"transpose",(function(){return ue.Hd})),n.d(e,"norm",(function(){return ue.jc})),n.d(e,"movingAverage",(function(){return ue.ec})),n.d(e,"scatterND",(function(){return ue.Tc})),n.d(e,"sparseToDense",(function(){return ue.kd})),n.d(e,"gatherND",(function(){return ue.rb})),n.d(e,"dropout",(function(){return ue.cb})),n.d(e,"enclosingPowerOfTwo",(function(){return ue.eb})),n.d(e,"cosineWindow",(function(){return ue.S})),n.d(e,"inTopKAsync",(function(){return ue.xb})),n.d(e,"op",(function(){return ue.oc})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return ue.a})),n.d(e,"image",(function(){return ue.wb})),n.d(e,"linalg",(function(){return ue.Fb})),n.d(e,"losses",(function(){return ue.Rb})),n.d(e,"spectral",(function(){return ue.ld})),n.d(e,"fused",(function(){return ue.pb})),n.d(e,"signal",(function(){return ue.Zc})),n.d(e,"Reduction",(function(){return ce.a})),n.d(e,"train",(function(){return de})),n.d(e,"enableProdMode",(function(){return zt.g})),n.d(e,"enableDebugMode",(function(){return zt.f})),n.d(e,"disableDeprecationWarnings",(function(){return zt.c})),n.d(e,"deprecationWarn",(function(){return zt.b})),n.d(e,"disposeVariables",(function(){return zt.e})),n.d(e,"engine",(function(){return zt.h})),n.d(e,"memory",(function(){return zt.m})),n.d(e,"profile",(function(){return zt.n})),n.d(e,"tidy",(function(){return zt.t})),n.d(e,"dispose",(function(){return zt.d})),n.d(e,"keep",(function(){return zt.l})),n.d(e,"time",(function(){return zt.u})),n.d(e,"setBackend",(function(){return zt.r})),n.d(e,"ready",(function(){return zt.o})),n.d(e,"getBackend",(function(){return zt.k})),n.d(e,"removeBackend",(function(){return zt.q})),n.d(e,"findBackend",(function(){return zt.i})),n.d(e,"findBackendFactory",(function(){return zt.j})),n.d(e,"registerBackend",(function(){return zt.p})),n.d(e,"backend",(function(){return zt.a})),n.d(e,"setPlatform",(function(){return zt.s})),n.d(e,"getKernel",(function(){return Ot.c})),n.d(e,"getGradient",(function(){return Ot.b})),n.d(e,"getKernelsForBackend",(function(){return Ot.d})),n.d(e,"registerKernel",(function(){return Ot.f})),n.d(e,"registerGradient",(function(){return Ot.e})),n.d(e,"unregisterKernel",(function(){return Ot.h})),n.d(e,"unregisterGradient",(function(){return Ot.g})),n.d(e,"copyRegisteredKernels",(function(){return Ot.a})),n.d(e,"customGrad",(function(){return Ht.a})),n.d(e,"grad",(function(){return Ht.b})),n.d(e,"grads",(function(){return Ht.c})),n.d(e,"valueAndGrad",(function(){return Ht.d})),n.d(e,"valueAndGrads",(function(){return Ht.e})),n.d(e,"variableGrads",(function(){return Ht.f})),n.d(e,"Environment",(function(){return h.b})),n.d(e,"env",(function(){return h.c})),n.d(e,"ENV",(function(){return h.a})),n.d(e,"version_core",(function(){return Lt})),n.d(e,"nextFrame",(function(){return he.a})),n.d(e,"browser",(function(){return s})),n.d(e,"io",(function(){return r})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return o})),n.d(e,"test_util",(function(){return Ft})),n.d(e,"util",(function(){return Mt})),n.d(e,"backend_util",(function(){return c})),n.d(e,"tensor_util",(function(){return Dt})),n.d(e,"slice_util",(function(){return At})),n.d(e,"gather_util",(function(){return i})),n.d(e,"scatter_util",(function(){return Et})),n.d(e,"device_util",(function(){return Ye})),n.d(e,"kernel_impls",(function(){return l})),n.d(e,"KernelBackend",(function(){return Qe.b})),n.d(e,"DataStorage",(function(){return Qe.a})),n.d(e,"Abs",(function(){return vt.a})),n.d(e,"Acos",(function(){return vt.b})),n.d(e,"Acosh",(function(){return vt.c})),n.d(e,"Add",(function(){return vt.d})),n.d(e,"AddN",(function(){return vt.e})),n.d(e,"All",(function(){return vt.f})),n.d(e,"Any",(function(){return vt.g})),n.d(e,"ArgMax",(function(){return vt.h})),n.d(e,"ArgMin",(function(){return vt.i})),n.d(e,"Asin",(function(){return vt.j})),n.d(e,"Asinh",(function(){return vt.k})),n.d(e,"Atan",(function(){return vt.l})),n.d(e,"Atanh",(function(){return vt.n})),n.d(e,"Atan2",(function(){return vt.m})),n.d(e,"AvgPool",(function(){return vt.o})),n.d(e,"AvgPoolGrad",(function(){return vt.r})),n.d(e,"AvgPool3D",(function(){return vt.p})),n.d(e,"AvgPool3DGrad",(function(){return vt.q})),n.d(e,"BatchMatMul",(function(){return vt.s})),n.d(e,"BatchToSpaceND",(function(){return vt.t})),n.d(e,"Bincount",(function(){return vt.u})),n.d(e,"BroadcastTo",(function(){return vt.v})),n.d(e,"Cast",(function(){return vt.w})),n.d(e,"Ceil",(function(){return vt.x})),n.d(e,"ClipByValue",(function(){return vt.y})),n.d(e,"Complex",(function(){return vt.z})),n.d(e,"ComplexAbs",(function(){return vt.A})),n.d(e,"Concat",(function(){return vt.B})),n.d(e,"Conv2D",(function(){return vt.C})),n.d(e,"Conv2DBackpropFilter",(function(){return vt.D})),n.d(e,"Conv2DBackpropInput",(function(){return vt.E})),n.d(e,"Conv3D",(function(){return vt.F})),n.d(e,"Conv3DBackpropFilterV2",(function(){return vt.G})),n.d(e,"Conv3DBackpropInputV2",(function(){return vt.H})),n.d(e,"Cos",(function(){return vt.I})),n.d(e,"Cosh",(function(){return vt.J})),n.d(e,"Cumsum",(function(){return vt.L})),n.d(e,"CropAndResize",(function(){return vt.K})),n.d(e,"DenseBincount",(function(){return vt.M})),n.d(e,"DepthToSpace",(function(){return vt.N})),n.d(e,"DepthwiseConv2dNative",(function(){return vt.O})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return vt.P})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return vt.Q})),n.d(e,"Diag",(function(){return vt.R})),n.d(e,"Dilation2D",(function(){return vt.S})),n.d(e,"Dilation2DBackpropInput",(function(){return vt.U})),n.d(e,"Dilation2DBackpropFilter",(function(){return vt.T})),n.d(e,"RealDiv",(function(){return vt.kc})),n.d(e,"Elu",(function(){return vt.V})),n.d(e,"EluGrad",(function(){return vt.W})),n.d(e,"Erf",(function(){return vt.Y})),n.d(e,"Equal",(function(){return vt.X})),n.d(e,"Exp",(function(){return vt.Z})),n.d(e,"ExpandDims",(function(){return vt.ab})),n.d(e,"Expm1",(function(){return vt.bb})),n.d(e,"FFT",(function(){return vt.cb})),n.d(e,"Fill",(function(){return vt.db})),n.d(e,"FlipLeftRight",(function(){return vt.eb})),n.d(e,"Floor",(function(){return vt.fb})),n.d(e,"FloorDiv",(function(){return vt.gb})),n.d(e,"FusedBatchNorm",(function(){return vt.ib})),n.d(e,"GatherV2",(function(){return vt.mb})),n.d(e,"GatherNd",(function(){return vt.lb})),n.d(e,"Greater",(function(){return vt.nb})),n.d(e,"GreaterEqual",(function(){return vt.ob})),n.d(e,"Identity",(function(){return vt.qb})),n.d(e,"IFFT",(function(){return vt.pb})),n.d(e,"Imag",(function(){return vt.rb})),n.d(e,"IsFinite",(function(){return vt.sb})),n.d(e,"IsInf",(function(){return vt.tb})),n.d(e,"IsNan",(function(){return vt.ub})),n.d(e,"LeakyRelu",(function(){return vt.xb})),n.d(e,"Less",(function(){return vt.yb})),n.d(e,"LessEqual",(function(){return vt.zb})),n.d(e,"LinSpace",(function(){return vt.Ab})),n.d(e,"Log",(function(){return vt.Bb})),n.d(e,"Log1p",(function(){return vt.Cb})),n.d(e,"LogicalAnd",(function(){return vt.Eb})),n.d(e,"LogicalNot",(function(){return vt.Fb})),n.d(e,"LogicalOr",(function(){return vt.Gb})),n.d(e,"LogSoftmax",(function(){return vt.Db})),n.d(e,"LRN",(function(){return vt.vb})),n.d(e,"LRNGrad",(function(){return vt.wb})),n.d(e,"Max",(function(){return vt.Hb})),n.d(e,"Maximum",(function(){return vt.Nb})),n.d(e,"MaxPool",(function(){return vt.Ib})),n.d(e,"MaxPoolGrad",(function(){return vt.Lb})),n.d(e,"MaxPool3D",(function(){return vt.Jb})),n.d(e,"MaxPool3DGrad",(function(){return vt.Kb})),n.d(e,"MaxPoolWithArgmax",(function(){return vt.Mb})),n.d(e,"Mean",(function(){return vt.Ob})),n.d(e,"Min",(function(){return vt.Pb})),n.d(e,"Minimum",(function(){return vt.Qb})),n.d(e,"MirrorPad",(function(){return vt.Rb})),n.d(e,"Mod",(function(){return vt.Sb})),n.d(e,"Multinomial",(function(){return vt.Tb})),n.d(e,"Multiply",(function(){return vt.Ub})),n.d(e,"Neg",(function(){return vt.Vb})),n.d(e,"NotEqual",(function(){return vt.Zb})),n.d(e,"NonMaxSuppressionV3",(function(){return vt.Wb})),n.d(e,"NonMaxSuppressionV4",(function(){return vt.Xb})),n.d(e,"NonMaxSuppressionV5",(function(){return vt.Yb})),n.d(e,"OnesLike",(function(){return vt.bc})),n.d(e,"OneHot",(function(){return vt.ac})),n.d(e,"Pack",(function(){return vt.cc})),n.d(e,"PadV2",(function(){return vt.dc})),n.d(e,"Pool",(function(){return vt.ec})),n.d(e,"Pow",(function(){return vt.fc})),n.d(e,"Prelu",(function(){return vt.gc})),n.d(e,"Prod",(function(){return vt.hc})),n.d(e,"Range",(function(){return vt.ic})),n.d(e,"Real",(function(){return vt.jc})),n.d(e,"Reciprocal",(function(){return vt.lc})),n.d(e,"Relu",(function(){return vt.mc})),n.d(e,"Reshape",(function(){return vt.oc})),n.d(e,"ResizeNearestNeighbor",(function(){return vt.rc})),n.d(e,"ResizeNearestNeighborGrad",(function(){return vt.sc})),n.d(e,"ResizeBilinear",(function(){return vt.pc})),n.d(e,"ResizeBilinearGrad",(function(){return vt.qc})),n.d(e,"Relu6",(function(){return vt.nc})),n.d(e,"Reverse",(function(){return vt.tc})),n.d(e,"Round",(function(){return vt.vc})),n.d(e,"Rsqrt",(function(){return vt.wc})),n.d(e,"ScatterNd",(function(){return vt.xc})),n.d(e,"Select",(function(){return vt.yc})),n.d(e,"Selu",(function(){return vt.zc})),n.d(e,"Slice",(function(){return vt.Ec})),n.d(e,"Sin",(function(){return vt.Cc})),n.d(e,"Sinh",(function(){return vt.Dc})),n.d(e,"Sign",(function(){return vt.Bc})),n.d(e,"Sigmoid",(function(){return vt.Ac})),n.d(e,"Softplus",(function(){return vt.Gc})),n.d(e,"Sqrt",(function(){return vt.Kc})),n.d(e,"Sum",(function(){return vt.Qc})),n.d(e,"SpaceToBatchND",(function(){return vt.Hc})),n.d(e,"SplitV",(function(){return vt.Jc})),n.d(e,"Softmax",(function(){return vt.Fc})),n.d(e,"SquaredDifference",(function(){return vt.Mc})),n.d(e,"Square",(function(){return vt.Lc})),n.d(e,"Sub",(function(){return vt.Pc})),n.d(e,"SparseToDense",(function(){return vt.Ic})),n.d(e,"StridedSlice",(function(){return vt.Oc})),n.d(e,"Tan",(function(){return vt.Rc})),n.d(e,"Tanh",(function(){return vt.Sc})),n.d(e,"Tile",(function(){return vt.Tc})),n.d(e,"TopK",(function(){return vt.Uc})),n.d(e,"Transform",(function(){return vt.Vc})),n.d(e,"Transpose",(function(){return vt.Wc})),n.d(e,"Unique",(function(){return vt.Xc})),n.d(e,"Unpack",(function(){return vt.Yc})),n.d(e,"UnsortedSegmentSum",(function(){return vt.Zc})),n.d(e,"ZerosLike",(function(){return vt.ad})),n.d(e,"Step",(function(){return vt.Nc})),n.d(e,"FromPixels",(function(){return vt.hb})),n.d(e,"RotateWithOffset",(function(){return vt.uc})),n.d(e,"_FusedMatMul",(function(){return vt.bd})),n.d(e,"FusedConv2D",(function(){return vt.jb})),n.d(e,"FusedDepthwiseConv2D",(function(){return vt.kb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return B})),n.d(r,"listModels",(function(){return z})),n.d(r,"moveModel",(function(){return W})),n.d(r,"removeModel",(function(){return P})),n.d(r,"browserFiles",(function(){return Q})),n.d(r,"browserHTTPRequest",(function(){return ct})),n.d(r,"concatenateArrayBuffers",(function(){return p.d})),n.d(r,"decodeWeights",(function(){return p.e})),n.d(r,"encodeWeights",(function(){return p.f})),n.d(r,"fromMemory",(function(){return ht})),n.d(r,"getLoadHandlers",(function(){return y})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return p.g})),n.d(r,"getSaveHandlers",(function(){return g})),n.d(r,"http",(function(){return ut})),n.d(r,"isHTTPScheme",(function(){return it})),n.d(r,"loadWeights",(function(){return rt})),n.d(r,"registerLoadRouter",(function(){return b})),n.d(r,"registerSaveRouter",(function(){return m})),n.d(r,"weightsLoaderFactory",(function(){return at})),n.d(r,"withSaveHandler",(function(){return pt}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return xt}));var s={};n.r(s),n.d(s,"fromPixelsAsync",(function(){return jt})),n.d(s,"toPixels",(function(){return St})),n.d(s,"fromPixels",(function(){return Ct}));var i={};n.r(i),n.d(i,"prepareAndValidate",(function(){return Tt}));var o={};n.r(o),n.d(o,"Serializable",(function(){return $t})),n.d(o,"SerializationMap",(function(){return Rt})),n.d(o,"registerClass",(function(){return _t}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return Ge})),n.d(u,"computeOutShape",(function(){return He})),n.d(u,"collectGatherOpShapeInfo",(function(){return qe}));var c={};n.r(c),n.d(c,"axesAreInnerMostDims",(function(){return pe.b})),n.d(c,"combineLocations",(function(){return pe.c})),n.d(c,"computeOutAndReduceShapes",(function(){return pe.d})),n.d(c,"expandShapeToKeepDim",(function(){return pe.e})),n.d(c,"assertAxesAreInnerMostDims",(function(){return pe.a})),n.d(c,"getAxesPermutation",(function(){return pe.f})),n.d(c,"getUndoAxesPermutation",(function(){return pe.h})),n.d(c,"getInnerMostAxes",(function(){return pe.g})),n.d(c,"getBroadcastDims",(function(){return fe.b})),n.d(c,"getReductionAxes",(function(){return fe.c})),n.d(c,"assertAndGetBroadcastShape",(function(){return fe.a})),n.d(c,"assertParamsConsistent",(function(){return me})),n.d(c,"computeOutShape",(function(){return be})),n.d(c,"computeDilation2DInfo",(function(){return ge.d})),n.d(c,"computePool2DInfo",(function(){return ge.e})),n.d(c,"computePool3DInfo",(function(){return ge.f})),n.d(c,"computeConv2DInfo",(function(){return ge.a})),n.d(c,"computeConv3DInfo",(function(){return ge.b})),n.d(c,"computeDefaultPad",(function(){return ge.c})),n.d(c,"tupleValuesAreOne",(function(){return ge.i})),n.d(c,"eitherStridesOrDilationsAreOne",(function(){return ge.h})),n.d(c,"convertConv2DDataFormat",(function(){return ge.g})),n.d(c,"getFusedDyActivation",(function(){return ye.c})),n.d(c,"getFusedBiasGradient",(function(){return ye.b})),n.d(c,"applyActivation",(function(){return ye.a})),n.d(c,"shouldFuse",(function(){return ye.d})),n.d(c,"PARALLELIZE_THRESHOLD",(function(){return xe})),n.d(c,"computeOptimalWindowSize",(function(){return ve})),n.d(c,"slice_util",(function(){return At})),n.d(c,"upcastType",(function(){return oe.c})),n.d(c,"getImageCenter",(function(){return Oe})),n.d(c,"getReshaped",(function(){return we})),n.d(c,"getPermuted",(function(){return ke})),n.d(c,"getReshapedPermuted",(function(){return Ie})),n.d(c,"getSliceBeginCoords",(function(){return Ne})),n.d(c,"getSliceSize",(function(){return je})),n.d(c,"prepareAndValidate",(function(){return Tt})),n.d(c,"validateUpdateShape",(function(){return Et.validateUpdateShape})),n.d(c,"validateInput",(function(){return Et.validateInput})),n.d(c,"calculateShapes",(function(){return Et.calculateShapes})),n.d(c,"SELU_SCALEALPHA",(function(){return Se.b})),n.d(c,"SELU_SCALE",(function(){return Se.a})),n.d(c,"ERF_P",(function(){return Ce})),n.d(c,"ERF_A1",(function(){return Te})),n.d(c,"ERF_A2",(function(){return Ee})),n.d(c,"ERF_A3",(function(){return Ae})),n.d(c,"ERF_A4",(function(){return $e})),n.d(c,"ERF_A5",(function(){return Re})),n.d(c,"warn",(function(){return _e})),n.d(c,"log",(function(){return De})),n.d(c,"mergeRealAndImagArrays",(function(){return Fe})),n.d(c,"splitRealAndImagArrays",(function(){return Me})),n.d(c,"complexWithEvenIndex",(function(){return Le})),n.d(c,"complexWithOddIndex",(function(){return ze})),n.d(c,"getComplexWithIndex",(function(){return Pe})),n.d(c,"assignToTypedArray",(function(){return Be})),n.d(c,"exponents",(function(){return We})),n.d(c,"exponent",(function(){return Ve})),n.d(c,"prepareSplitSize",(function(){return Ue})),n.d(c,"segment_util",(function(){return u})),n.d(c,"fromUint8ToStringArray",(function(){return Ke})),n.d(c,"fromStringArrayToUint8",(function(){return Xe}));var l={};n.r(l),n.d(l,"nonMaxSuppressionV3Impl",(function(){return Je.a})),n.d(l,"nonMaxSuppressionV4Impl",(function(){return Je.b})),n.d(l,"nonMaxSuppressionV5Impl",(function(){return Je.c})),n.d(l,"whereImpl",(function(){return Ze.a}));var d=n(76),h=(n(147),n(93)),p=n(107);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class f{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==f.instance&&(f.instance=new f),f.instance}static registerSaveRouter(t){f.getInstance().saveRouters.push(t)}static registerLoadRouter(t){f.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return f.getHandlers(t,"save")}static getLoadHandlers(t,e){return f.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?f.getInstance().loadRouters:f.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const m=t=>f.registerSaveRouter(t),b=t=>f.registerLoadRouter(t),g=t=>f.getSaveHandlers(t),y=(t,e)=>f.getLoadHandlers(t,e)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;function x(){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function v(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class O{constructor(t){if(this.indexedDB=x(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(p.g)(e),s=a.transaction("model_info_store","readwrite");let i=s.objectStore("model_info_store");const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction("models_store","readwrite");const o=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=s.objectStore("model_info_store");const e=i.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(o.error)),e.onerror=t=>(a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}O.URL_SCHEME="indexeddb://";const w=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(O.URL_SCHEME)?(e=t.slice(O.URL_SCHEME.length),new O(e)):null;var e};f.registerSaveRouter(w),f.registerLoadRouter(w);class k{constructor(){this.indexedDB=x()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>v(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),s=a.objectStore("model_info_store").getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(O.URL_SCHEME)?e.slice(O.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>v(r),r.onsuccess=()=>{const a=r.result,s=a.transaction("model_info_store","readwrite"),i=s.objectStore("model_info_store"),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),s=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var I=n(169);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N="tensorflowjs_models",j="info",S="model_topology",C="weight_specs",T="weight_data",E="model_metadata";function A(t){return{info:[N,t,j].join("/"),topology:[N,t,S].join("/"),weightSpecs:[N,t,C].join("/"),weightData:[N,t,T].join("/"),modelMetadata:[N,t,E].join("/")}}function $(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: "+t);return e.slice(1,e.length-1).join("/")}class R{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=A(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=Object(p.g)(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(p.a)(t.weightData));const a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(a.signature=t.signature),null!=t.userDefinedMetadata&&(a.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(a.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(p.b)(s),e}}R.URL_SCHEME="localstorage://";const _=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(R.URL_SCHEME)?(e=t.slice(R.URL_SCHEME.length),new R(e)):null;var e};f.registerSaveRouter(_),f.registerLoadRouter(_);class D{constructor(){Object(I.b)(Object(h.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(I.b)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=N+"/",n="/"+j;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[$(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=A(t=(e=t).startsWith(R.URL_SCHEME)?e.slice(R.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F{constructor(){this.managers={}}static getInstance(){return null==F.instance&&(F.instance=new F),F.instance}static registerManager(t,e){Object(I.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(I.b)(t.length>0,()=>"scheme must not be an empty string.");const n=F.getInstance();Object(I.b)(null==n.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function M(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+F.getSchemes().join(","));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function L(t,e,n=!1){Object(I.b)(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=f.getLoadHandlers(t);Object(I.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),Object(I.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const a=r[0],s=f.getSaveHandlers(e);Object(I.b)(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),Object(I.b)(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=s[0],o=M(t).scheme,u=M(t).path,c=o===M(t).scheme,l=await a.load();n&&c&&await F.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await F.getManager(o).removeModel(u),d.modelArtifactsInfo}async function z(){const t=F.getSchemes(),e={};for(const n of t){const t=await F.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function P(t){const e=M(t);return F.getManager(e.scheme).removeModel(e.path)}async function B(t,e){return L(t,e,!1)}async function W(t,e){return L(t,e,!0)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got "+e);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(h.c)().get("IS_BROWSER")){Object(h.c)().setPlatform("browser",new V);try{F.registerManager(R.URL_SCHEME,new D)}catch(t){}try{F.registerManager(O.URL_SCHEME,new k)}catch(t){}}n(332);var U=n(110),G=n(82),H=n(131),q=n(212),K=n(77);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(d.b)();const X={buffer:U.a,cast:G.a,clone:H.a,print:q.a};Object(K.f)(X);function Y(t){return new Promise(t=>setTimeout(t)).then(t)}class J{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(J.URL_SCHEME)&&(t=t.slice(J.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Y(()=>s.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Y(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(p.g)(t)}}}}J.URL_SCHEME="downloads://";class Z{constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+t);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error("modelTopology field is missing from file "+t.name));0===e.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error("weightManifest field is missing from file "+t.name));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(t){return void r(t)}const c=[],l=[],d=[];o.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),c.push(...t.weights)}),o.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);if(d[a]=r,-1===d.indexOf(null)){const t={modelTopology:i,weightSpecs:c,weightData:Object(p.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(t.signature=s.signature),null!=s.userDefinedMetadata&&(t.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(t.modelInitializer=s.modelInitializer),n(t)}},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])})})},a.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(p.c)(t.name)),a={};for(const s of t)s.paths.forEach(t=>{const s=Object(p.c)(t);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[t]=e[r.indexOf(s)]});if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return a}}function Q(t){return new Z(t)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tt(t,e,n,r){!function(t){Object(I.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(I.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),Object(I.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+e),Object(I.b)(e>=t,()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction `+e)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(s=>(s.then(s=>{const i=n+ ++a/t.length*(r-n);return e(i),s}),s)))}f.registerSaveRouter(t=>Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(J.URL_SCHEME)?function(t="model"){return new J(t)}(t.slice(J.URL_SCHEME.length)):null);var et=n(269);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nt(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(h.c)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await tt(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await tt(a,e.onProgress,.5,1)}async function rt(t,e="",n,r){return at(t=>nt(t,{requestInit:r}))(t,e,n)}function at(t){return async(e,n="",r)=>{const a=e.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,c=et.a[u]*I.O(t.shape),l=()=>{a[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),i[n]=!0)}):l(),o.push(t.name),n+=c})}),!i.every(t=>t)){const t=r.filter((t,e)=>!i[e]);throw new Error("Could not find weights in manifest with names: "+t.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),c=[];u.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;c.push(e)})});const l=await t(c),d={};let h=0;return u.forEach(t=>{const n=e[t].paths.length;let r=0;for(let t=0;t<n;t++)r+=l[h+t].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(l[h+t]);i.set(e,o),o+=e.byteLength}s[t].forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(p.e)(e,[t.manifestEntry]);for(const t in n)d[t]=n[t]}),h+=n}),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class st{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(I.b)("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(h.c)().platform.fetch,Object(I.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(I.b)(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(p.g)(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code `+t.status+". Please verify this URL points to the model JSON of the model to load.");let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,s=e.convertedBy,i=e.format,o=e.signature,u=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const t=await this.loadWeights(r);[c,l]=t}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=e.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,s=[];for(const e of t)s.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(a+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await nt(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(p.d)(u)]}}function it(t){return null!=t.match(st.URL_SCHEME_REGEX)}st.URL_SCHEME_REGEX=/^https?:\/\//;const ot=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>it(t)):it(t),n)return ut(t,e)}return null};function ut(t,e){return new st(t,e)}function ct(t,e){return ut(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */f.registerSaveRouter(ot),f.registerLoadRouter(ot);class lt{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class dt{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function ht(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new lt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new lt({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new lt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function pt(t){return new dt(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ft=n(75),mt=n(108),bt=n(189),gt=n(74),yt=n(118);const xt=Object(gt.b)({confusionMatrix_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const r=Object(ft.a)(t,"labels","confusionMatrix"),a=Object(ft.a)(e,"predictions","confusionMatrix");I.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),I.b(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),I.b(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),I.b(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),I.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const s=Object(bt.a)(Object(G.a)(r,"int32"),n),i=Object(bt.a)(Object(G.a)(a,"int32"),n),o=Object(yt.a)(s),u=Object(mt.a)(o,i);return Object(G.a)(u,"int32")}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vt=n(73),Ot=n(146),wt=n(244);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let kt;function It(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+t.constructor.name);o=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Ot.c)(vt.hb,d.a.backendName)){const n={pixels:t},r={numChannels:e};return d.a.runKernel(vt.hb,n,r)}const[u,c]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,h;if(i?l=t.getContext("2d").getImageData(0,0,u,c).data:r||n?l=t.data:(s||a||o)&&(null==kt&&(kt=document.createElement("canvas").getContext("2d")),kt.canvas.width=u,kt.canvas.height=c,kt.drawImage(t,0,0,u,c),l=kt.getImageData(0,0,u,c).data),4===e)h=new Int32Array(l);else{const t=u*c;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=l[4*n+t]}const p=[c,u,e];return Object(wt.a)(h,p,"int32")}function Nt(t){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}async function jt(t,e=3){let n=null;if(Object(h.c)().getBool("WRAP_TO_IMAGEBITMAP")&&Nt(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(t){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return It(n,e)}async function St(t,e){let n=Object(ft.a)(t,"img","toPixels");if(!(t instanceof K.a)){const t=n;n=Object(G.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let t=0;t<r*a;++t){const e=[0,0,0,255];for(let r=0;r<s;r++){const a=i[t*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(e[0]=a*o,e[1]=a*o,e[2]=a*o):e[r]=a*o}const r=4*t;u[r+0]=Math.round(e[0]),u[r+1]=Math.round(e[1]),u[r+2]=Math.round(e[2]),u[r+3]=Math.round(e[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const Ct=Object(gt.b)({fromPixels_:It});function Tt(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===Object(I.O)(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const a=e.shape,s=a[a.length-1];let i=1;for(let t=0;t<a.length-1;++t)i*=a[t];const o=t.shape,u=a.slice();u.pop();let c=1;for(let t=s;t<n;++t)c*=o[t],u.push(o[t]);const l=[...Object(I.j)(t.shape).map(t=>t/c),1].slice(0,s);return[u,i,c,l]}var Et=n(160),At=n(161);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $t{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Rt{constructor(){this.classNameMap={}}static getMap(){return null==Rt.instance&&(Rt.instance=new Rt),Rt.instance}static register(t){Rt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function _t(t){Object(I.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(I.b)("string"==typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(I.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Rt.register(t)}var Dt=n(88),Ft=n(235),Mt=n(78);
/** @license See the LICENSE file. */
const Lt="3.3.0";var zt=n(103),Pt=n(89),Bt=n(83),Wt=n(80),Vt=n(104),Ut=n(91),Gt=n(87),Ht=n(97),qt=n(85);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Kt extends $t{minimize(t,e=!1,n){const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(zt.d)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(Ht.f)(t,e)}dispose(){null!=this.iterations_&&Object(zt.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(qt.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Kt,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xt extends Kt{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=d.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:e+"/accum_grad",variable:Object(zt.t)(()=>Object(Gt.a)(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:e+"/accum_var",variable:Object(zt.t)(()=>Object(Gt.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(zt.t)(()=>{const t=Object(Pt.a)(Object(Wt.a)(s,this.rho),Object(Wt.a)(Object(Ut.a)(a),1-this.rho)),e=Object(Wt.a)(Object(Bt.a)(Object(Vt.a)(Object(Pt.a)(i,this.epsilon)),Object(Vt.a)(Object(Pt.a)(s,this.epsilon))),a),n=Object(Pt.a)(Object(Wt.a)(i,this.rho),Object(Wt.a)(Object(Ut.a)(e),1-this.rho));s.assign(t),i.assign(n);const o=Object(Pt.a)(Object(Wt.a)(e,-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(zt.d)(this.accumulatedGrads.map(t=>t.variable)),Object(zt.d)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Xt.className="Adadelta",_t(Xt);var Yt=n(173);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jt extends Kt{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=d.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:e+"/accumulator",variable:Object(zt.t)(()=>Object(Yt.a)(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(zt.t)(()=>{const t=Object(Pt.a)(s,Object(Ut.a)(a));s.assign(t);const e=Object(Pt.a)(Object(Wt.a)(Object(Bt.a)(a,Object(Vt.a)(Object(Pt.a)(t,d.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(zt.d)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Jt.className="Adagrad",_t(Jt);var Zt=n(116),Qt=n(84);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class te extends Kt{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(zt.t)(()=>{this.accBeta1=Object(qt.a)(e).variable(),this.accBeta2=Object(qt.a)(n).variable()}),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(zt.t)(()=>{const n=Object(Qt.a)(1,this.accBeta1),r=Object(Qt.a)(1,this.accBeta2);e.forEach((e,a)=>{const s=d.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(zt.t)(()=>Object(Gt.a)(s).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:e+"/v",variable:Object(zt.t)(()=>Object(Gt.a)(s).variable(!1))});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(Pt.a)(Object(Wt.a)(o,this.beta1),Object(Wt.a)(i,1-this.beta1)),l=Object(Pt.a)(Object(Wt.a)(u,this.beta2),Object(Wt.a)(Object(Ut.a)(i),1-this.beta2)),h=Object(Bt.a)(c,n),p=Object(Bt.a)(l,r);o.assign(c),u.assign(l);const f=Object(Pt.a)(Object(Wt.a)(Object(Bt.a)(h,Object(Pt.a)(Object(Vt.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(Object(Wt.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Wt.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(zt.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(zt.d)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(zt.t)(()=>{this.accBeta1.assign(Object(Zt.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(Zt.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}te.className="Adam",_t(te);var ee=n(123),ne=n(148);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class re extends Kt{constructor(t,e,n,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(zt.t)(()=>{this.iteration=Object(qt.a)(0).variable(),this.accBeta1=Object(qt.a)(e).variable()}),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(zt.t)(()=>{const n=Object(Qt.a)(1,this.accBeta1),r=Object(Bt.a)(-this.learningRate,Object(Pt.a)(Object(Wt.a)(this.iteration,this.decay),1));e.forEach((e,a)=>{const s=d.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:e+"/m",variable:Object(Gt.a)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:e+"/v",variable:Object(Gt.a)(s).variable(!1)});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(Pt.a)(Object(Wt.a)(o,this.beta1),Object(Wt.a)(i,1-this.beta1)),l=Object(Wt.a)(u,this.beta2),h=Object(ee.a)(i),p=Object(ne.a)(l,h);o.assign(c),u.assign(p);const f=Object(Pt.a)(Object(Wt.a)(Object(Bt.a)(r,n),Object(Bt.a)(c,Object(Pt.a)(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(Object(Pt.a)(this.iteration,1)),this.accBeta1.assign(Object(Wt.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(zt.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(zt.d)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}re.className="Adamax",_t(re);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ae extends Kt{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=d.a.registeredVariables[e];Object(zt.t)(()=>{const t=Object(Pt.a)(Object(Wt.a)(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(zt.l)(Object(qt.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}ae.className="SGD",_t(ae);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class se extends ae{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(qt.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=d.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:e+"/momentum",variable:Object(zt.t)(()=>Object(Gt.a)(r).variable(t))}}const a=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Object(zt.t)(()=>{let t;const e=Object(Pt.a)(Object(Wt.a)(this.m,a),s);t=this.useNesterov?Object(Pt.a)(Object(Wt.a)(this.c,Object(Pt.a)(s,Object(Wt.a)(e,this.m))),r):Object(Pt.a)(Object(Wt.a)(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(zt.d)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}se.className="Momentum",_t(se);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ie extends Kt{constructor(t,e=.9,n=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=d.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=d.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:e+"/rms",variable:Object(zt.t)(()=>Object(Gt.a)(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:e+"/momentum",variable:Object(zt.t)(()=>Object(Gt.a)(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:e+"/mg",variable:Object(zt.t)(()=>Object(Gt.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Object(zt.t)(()=>{const t=Object(Pt.a)(Object(Wt.a)(s,this.decay),Object(Wt.a)(Object(Ut.a)(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,o=Object(Pt.a)(Object(Wt.a)(e,this.decay),Object(Wt.a)(a,1-this.decay)),u=Object(Bt.a)(Object(Wt.a)(a,this.learningRate),Object(Vt.a)(Object(Qt.a)(t,Object(Pt.a)(Object(Ut.a)(o),this.epsilon)))),c=Object(Pt.a)(Object(Wt.a)(i,this.momentum),u);s.assign(t),e.assign(o),i.assign(c);const l=Object(Qt.a)(r,c);r.assign(l)}else{const t=Object(Pt.a)(Object(Wt.a)(s,this.decay),Object(Wt.a)(Object(Ut.a)(a),1-this.decay)),e=Object(Pt.a)(Object(Wt.a)(i,this.momentum),Object(Bt.a)(Object(Wt.a)(a,this.learningRate),Object(Vt.a)(Object(Pt.a)(t,this.epsilon))));s.assign(t),i.assign(e);const n=Object(Qt.a)(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(zt.d)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(zt.d)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(zt.d)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}ie.className="RMSProp",_t(ie);var oe=n(121),ue=n(81),ce=n(106);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class le{static sgd(t){return new ae(t)}static momentum(t,e,n=!1){return new se(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,a=!1){return new ie(t,e,n,r,a)}static adam(t=.001,e=.9,n=.999,r=null){return new te(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Xt(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,a=0){return new re(t,e,n,r,a)}static adagrad(t,e=.1){return new Jt(t,e)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const de={sgd:le.sgd,momentum:le.momentum,adadelta:le.adadelta,adagrad:le.adagrad,rmsprop:le.rmsprop,adamax:le.adamax,adam:le.adam};var he=n(310),pe=n(105),fe=n(86);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function me(t,e){const n=t[0].length;t.forEach((t,e)=>{I.b(t.length===n,()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`)}),I.b(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((t,a)=>{for(let s=0;s<n;s++)I.b(s===e||t[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function be(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var ge=n(99),ye=n(129);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xe=30;function ve(t){return t<=xe?t:Object(I.G)(t,Math.floor(Math.sqrt(t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(t,e,n,r=!0){let a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function ke(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ie(t,e,n,r=!0){const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?a.push(e[n-1]*t[n]):a.push(t[n]/e[n-1]):a.push(t[n]);return a}function Ne(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function je(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}var Se=n(250);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce=.3275911,Te=.254829592,Ee=-.284496736,Ae=1.421413741,$e=-1.453152027,Re=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _e(...t){Object(h.c)().getBool("IS_TEST")||console.warn(...t)}function De(...t){Object(h.c)().getBool("IS_TEST")||console.log(...t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Me(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Le(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function ze(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Pe(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Be(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function We(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const s=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Ve(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Ue(t,e,n=0){let r=[];if("number"==typeof e)Object(I.b)(t.shape[n]%e==0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(I.b)(a<=1,()=>"There should be only one negative value in split array.");const s=e.indexOf(-1);if(-1!==s){const r=e.reduce((t,e)=>e>0?t+e:t);e[s]=t.shape[n]-r}Object(I.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(t,e){let n,r=!1;for(t<=xe?(n=t,r=!0):n=Object(I.G)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(I.G)(t,n+1);return n}function He(t,e,n){const r=[],a=t.length;for(let s=0;s<a;s++)s!==e?r.push(t[s]):r.push(n);return r}function qe(t,e,n,r){const a=e.shape.length,s=t.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const i=t.shape[n],o=[];let u=1,c=1,l=1;for(let e=0;e<r;++e)o.push(t.shape[e]),u*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),c*=t.shape[e];for(let t=r;t<a;t++)o.push(e.shape[t]);for(let e=n+1;e<s;e++)o.push(t.shape[e]),l*=t.shape[e];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(t){try{return t.map(t=>Object(Mt.decodeString)(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+t)}}function Xe(t){return t.map(t=>Object(Mt.encodeString)(t))}var Ye=n(210),Je=n(130),Ze=n(248),Qe=n(170)},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return h})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return x})),n.d(e,"q",(function(){return v})),n.d(e,"s",(function(){return O})),n.d(e,"t",(function(){return w})),n.d(e,"u",(function(){return k})),n.d(e,"v",(function(){return I})),n.d(e,"w",(function(){return N})),n.d(e,"x",(function(){return j})),n.d(e,"y",(function(){return S})),n.d(e,"z",(function(){return C})),n.d(e,"A",(function(){return T})),n.d(e,"B",(function(){return E})),n.d(e,"C",(function(){return A})),n.d(e,"D",(function(){return $})),n.d(e,"E",(function(){return R})),n.d(e,"F",(function(){return _})),n.d(e,"G",(function(){return D})),n.d(e,"H",(function(){return F})),n.d(e,"I",(function(){return M})),n.d(e,"J",(function(){return L})),n.d(e,"L",(function(){return z})),n.d(e,"K",(function(){return P})),n.d(e,"M",(function(){return B})),n.d(e,"N",(function(){return W})),n.d(e,"O",(function(){return V})),n.d(e,"P",(function(){return U})),n.d(e,"Q",(function(){return G})),n.d(e,"R",(function(){return H})),n.d(e,"S",(function(){return q})),n.d(e,"U",(function(){return K})),n.d(e,"T",(function(){return X})),n.d(e,"kc",(function(){return Y})),n.d(e,"V",(function(){return J})),n.d(e,"W",(function(){return Z})),n.d(e,"Y",(function(){return Q})),n.d(e,"X",(function(){return tt})),n.d(e,"Z",(function(){return et})),n.d(e,"ab",(function(){return nt})),n.d(e,"bb",(function(){return rt})),n.d(e,"cb",(function(){return at})),n.d(e,"db",(function(){return st})),n.d(e,"eb",(function(){return it})),n.d(e,"fb",(function(){return ot})),n.d(e,"gb",(function(){return ut})),n.d(e,"ib",(function(){return ct})),n.d(e,"mb",(function(){return lt})),n.d(e,"lb",(function(){return dt})),n.d(e,"nb",(function(){return ht})),n.d(e,"ob",(function(){return pt})),n.d(e,"qb",(function(){return ft})),n.d(e,"pb",(function(){return mt})),n.d(e,"rb",(function(){return bt})),n.d(e,"sb",(function(){return gt})),n.d(e,"tb",(function(){return yt})),n.d(e,"ub",(function(){return xt})),n.d(e,"xb",(function(){return vt})),n.d(e,"yb",(function(){return Ot})),n.d(e,"zb",(function(){return wt})),n.d(e,"Ab",(function(){return kt})),n.d(e,"Bb",(function(){return It})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Eb",(function(){return jt})),n.d(e,"Fb",(function(){return St})),n.d(e,"Gb",(function(){return Ct})),n.d(e,"Db",(function(){return Tt})),n.d(e,"vb",(function(){return Et})),n.d(e,"wb",(function(){return At})),n.d(e,"Hb",(function(){return $t})),n.d(e,"Nb",(function(){return Rt})),n.d(e,"Ib",(function(){return _t})),n.d(e,"Lb",(function(){return Dt})),n.d(e,"Jb",(function(){return Ft})),n.d(e,"Kb",(function(){return Mt})),n.d(e,"Mb",(function(){return Lt})),n.d(e,"Ob",(function(){return zt})),n.d(e,"Pb",(function(){return Pt})),n.d(e,"Qb",(function(){return Bt})),n.d(e,"Rb",(function(){return Wt})),n.d(e,"Sb",(function(){return Vt})),n.d(e,"Tb",(function(){return Ut})),n.d(e,"Ub",(function(){return Gt})),n.d(e,"Vb",(function(){return Ht})),n.d(e,"Zb",(function(){return qt})),n.d(e,"Wb",(function(){return Kt})),n.d(e,"Xb",(function(){return Xt})),n.d(e,"Yb",(function(){return Yt})),n.d(e,"bc",(function(){return Jt})),n.d(e,"ac",(function(){return Zt})),n.d(e,"cc",(function(){return Qt})),n.d(e,"dc",(function(){return te})),n.d(e,"ec",(function(){return ee})),n.d(e,"fc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ic",(function(){return se})),n.d(e,"jc",(function(){return ie})),n.d(e,"lc",(function(){return oe})),n.d(e,"mc",(function(){return ue})),n.d(e,"oc",(function(){return ce})),n.d(e,"rc",(function(){return le})),n.d(e,"sc",(function(){return de})),n.d(e,"pc",(function(){return he})),n.d(e,"qc",(function(){return pe})),n.d(e,"nc",(function(){return fe})),n.d(e,"tc",(function(){return me})),n.d(e,"vc",(function(){return be})),n.d(e,"wc",(function(){return ge})),n.d(e,"xc",(function(){return ye})),n.d(e,"yc",(function(){return xe})),n.d(e,"zc",(function(){return ve})),n.d(e,"Ec",(function(){return Oe})),n.d(e,"Cc",(function(){return we})),n.d(e,"Dc",(function(){return ke})),n.d(e,"Bc",(function(){return Ie})),n.d(e,"Ac",(function(){return Ne})),n.d(e,"Gc",(function(){return je})),n.d(e,"Kc",(function(){return Se})),n.d(e,"Qc",(function(){return Ce})),n.d(e,"Hc",(function(){return Te})),n.d(e,"Jc",(function(){return Ee})),n.d(e,"Fc",(function(){return Ae})),n.d(e,"Mc",(function(){return $e})),n.d(e,"Lc",(function(){return Re})),n.d(e,"Pc",(function(){return _e})),n.d(e,"Ic",(function(){return De})),n.d(e,"Oc",(function(){return Fe})),n.d(e,"Rc",(function(){return Me})),n.d(e,"Sc",(function(){return Le})),n.d(e,"Tc",(function(){return ze})),n.d(e,"Uc",(function(){return Pe})),n.d(e,"Vc",(function(){return Be})),n.d(e,"Wc",(function(){return We})),n.d(e,"Xc",(function(){return Ve})),n.d(e,"Yc",(function(){return Ue})),n.d(e,"Zc",(function(){return Ge})),n.d(e,"ad",(function(){return He})),n.d(e,"Nc",(function(){return qe})),n.d(e,"hb",(function(){return Ke})),n.d(e,"uc",(function(){return Xe})),n.d(e,"bd",(function(){return Ye})),n.d(e,"jb",(function(){return Je})),n.d(e,"kb",(function(){return Ze}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",O="BatchMatMul",w="BatchToSpaceND",k="Bincount",I="BroadcastTo",N="Cast",j="Ceil",S="ClipByValue",C="Complex",T="ComplexAbs",E="Concat",A="Conv2D",$="Conv2DBackpropFilter",R="Conv2DBackpropInput",_="Conv3D",D="Conv3DBackpropFilterV2",F="Conv3DBackpropInputV2",M="Cos",L="Cosh",z="Cumsum",P="CropAndResize",B="DenseBincount",W="DepthToSpace",V="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",J="Elu",Z="EluGrad",Q="Erf",tt="Equal",et="Exp",nt="ExpandDims",rt="Expm1",at="FFT",st="Fill",it="FlipLeftRight",ot="Floor",ut="FloorDiv",ct="FusedBatchNorm",lt="GatherV2",dt="GatherNd",ht="Greater",pt="GreaterEqual",ft="Identity",mt="IFFT",bt="Imag",gt="IsFinite",yt="IsInf",xt="IsNan",vt="LeakyRelu",Ot="Less",wt="LessEqual",kt="LinSpace",It="Log",Nt="Log1p",jt="LogicalAnd",St="LogicalNot",Ct="LogicalOr",Tt="LogSoftmax",Et="LRN",At="LRNGrad",$t="Max",Rt="Maximum",_t="MaxPool",Dt="MaxPoolGrad",Ft="MaxPool3D",Mt="MaxPool3DGrad",Lt="MaxPoolWithArgmax",zt="Mean",Pt="Min",Bt="Minimum",Wt="MirrorPad",Vt="Mod",Ut="Multinomial",Gt="Multiply",Ht="Neg",qt="NotEqual",Kt="NonMaxSuppressionV3",Xt="NonMaxSuppressionV4",Yt="NonMaxSuppressionV5",Jt="OnesLike",Zt="OneHot",Qt="Pack",te="PadV2",ee="Pool",ne="Pow",re="Prelu",ae="Prod",se="Range",ie="Real",oe="Reciprocal",ue="Relu",ce="Reshape",le="ResizeNearestNeighbor",de="ResizeNearestNeighborGrad",he="ResizeBilinear",pe="ResizeBilinearGrad",fe="Relu6",me="Reverse",be="Round",ge="Rsqrt",ye="ScatterNd",xe="Select",ve="Selu",Oe="Slice",we="Sin",ke="Sinh",Ie="Sign",Ne="Sigmoid",je="Softplus",Se="Sqrt",Ce="Sum",Te="SpaceToBatchND",Ee="SplitV",Ae="Softmax",$e="SquaredDifference",Re="Square",_e="Sub",De="SparseToDense",Fe="StridedSlice",Me="Tan",Le="Tanh",ze="Tile",Pe="TopK",Be="Transform",We="Transpose",Ve="Unique",Ue="Unpack",Ge="UnsortedSegmentSum",He="ZerosLike",qe="Step",Ke="FromPixels",Xe="RotateWithOffset",Ye="_FusedMatMul",Je="FusedConv2D",Ze="FusedDepthwiseConv2D"},function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i}));var r=n(76),a=n(169);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s="__op";function i(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");let n=e[0];const i=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...t)=>{r.a.startScope(n);try{const e=i(...t);return Object(a.x)(e)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},function(t,e,n){"use strict";n.d(e,"c",(function(){return u})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n(76),a=n(93),s=n(77),i=n(169),o=n(78);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(t,e){let n=t;if(Object(i.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(i.A)(e))return void Object(i.b)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(i.b)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Object(i.b)(e.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${e.length} elements`);const a=n.slice(1);for(let n=0;n<e.length;++n)t(e[n],a,r.concat(n))}(t,r,[]),r}function c(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function l(t,e,n,a="numeric"){if(t instanceof s.a)return c(a,t.dtype,e,n),t;let l=Object(i.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,e,n),null==t||!Object(i.A)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(t,l);Object(i.A)(t)||Array.isArray(t)||(t=[t]);const h="string"!==l?Object(o.toTypedArray)(t,l):Object(i.m)(t,[],!0);return r.a.makeTensor(h,d,l)}function d(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((t,a)=>l(t,`${e}[${a}]`,n,r))}},function(t,e,n){"use strict";n.d(e,"b",(function(){return y})),n.d(e,"a",(function(){return x}));var r=n(170),a=n(93),s=n(209),i=n(73),o=n(146),u=n(78),c=n(169);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class l{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new h)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then(e=>{d(e,n.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then(t=>t.kernelMs),extraInfo:i.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:s}=t;n.forEach(t=>{Promise.all([t.data(),r,s]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function d(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(t,e,n,r,a,s){const i="number"==typeof r?c.L(r+"ms",9):r.error,o=c.L(t,25),u=e.rank,l=e.size,d=c.L(e.shape.toString(),14);let h="";for(const t in a){const n=a[t];if(null!=n){const r=n.shape||e.shape,a=r.length;h+=`${t}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var p=n(77),f=n(88);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function m(t){return null!=t.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class g{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(t+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(o.d)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(t+" backend not found in registry");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e),s=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(t){const e=x.runKernel(i.qb,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return x.runKernel(i.w,e,n)}}),[],{}),e}runKernel(t,e,n){if(!(null!=Object(o.c)(t,this.backendName)))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(t)){const{kernelName:e,inputs:a,attrs:s}=t;null==this.backendName&&this.backend;const l=Object(o.c)(e,this.backendName);c.b(null!=l,()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`),i=()=>{const t=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,i);const o=i.map(t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)});if(r){const t=this.getTensorsForGradient(e,a,o);n=this.saveTensorsForBackwardMode(t)}return o}}else{const{forwardFunc:e}=t,a=t=>{r&&(n=t.map(t=>this.keep(this.clone(t))))};i=()=>{const t=this.backend.numDataIds();u=this.tidy(()=>e(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:d,attrs:h}=t,p=m(t)?null:t.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs):e=i()}),r&&this.addTapeNode(l,d,e,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(t=>null!=d[t]?d[t].shape:null),outputShapes:e.map(t=>t.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(o.b)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(e).map(t=>e[t])):s=t.map(t=>e[t]);const i=n.filter((t,e)=>a[e]);return s.concat(i)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&c.z(t[0])&&(a=t.map(t=>u.encodeString(t)));const s=r.write(a,e,n),i=new p.a(e,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const t=this.state.tensorInfo.get(s),e=Object(c.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new p.a(e,n,t,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new p.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*c.g(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof p.c||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*c.g(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},u=Object(o.b)(t);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=c.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,s))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(f.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n,r=!1){if(c.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));c.b(a instanceof p.a,()=>"The result y returned by f() must be a tensor.");const s=function(t,e,n){const r={},a={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const s=t[n],i=s.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){s.outputs.forEach(t=>r[t.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(s[n.outputs[t].id]){for(const t in r)s[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(a[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const a=n.inputs[e];r[a.id]&&(t[e]=a)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,a);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(c.D)(Object(c.O)(t),"float32");return x.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const s=e[a],i=[];if(s.outputs.forEach(e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[e]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[e];if(!c.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=a;else{const e=t[i.id];t[i.id]=r(e,a),e.dispose()}}}}(t,s,t=>this.tidy(t),v);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){return c.b(c.u(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let n;c.b(e.every(t=>t instanceof p.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};e.forEach((t,e)=>{r[e]=t});return this.runKernelFunc({forwardFunc:(r,a)=>(n=t(...e,a),c.b(n.value instanceof p.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c.b(c.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(t,r)=>{const a=n.gradFunc(t,r),s=Array.isArray(a)?a:[a];c.b(s.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c.b(s.every(t=>t instanceof p.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((t,e)=>{i[e]=()=>t}),i},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(u.now)(),n=await this.backend.time(t);return n.wallMs=Object(u.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const t=Object(s.b)();if(null==t._tfengine){const e=new a.b(t);t._tfengine=new g(e)}return Object(a.d)(t._tfengine.ENV),Object(p.g)(()=>t._tfengine),t._tfengine}g.nextTensorId=0,g.nextVariableId=0;const x=y();function v(t,e){const n={a:t,b:e};return x.runKernel(i.d,n)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return l})),n.d(e,"g",(function(){return f})),n.d(e,"f",(function(){return m})),n.d(e,"e",(function(){return b})),n.d(e,"a",(function(){return g})),n.d(e,"d",(function(){return y})),n.d(e,"c",(function(){return x}));var r=n(209),a=n(169);function s(t,e,n,r){const s=Object(a.j)(e),c=function(t,e,n,r){const s=Object(a.O)(e),o=r[r.length-1],c=new Array(o).fill(0),l=e.length,d="complex64"===n?u(t):t;if(l>1)for(let t=0;t<s/o;t++){const e=t*o;for(let t=0;t<o;t++)c[t]=Math.max(c[t],i(d[e+t],0,n).length)}return c}(t,e,n,s),l=e.length,d=function t(e,n,r,a,s,c=!0){const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[i(u(e)[0],0,r)]}return"bool"===r?[o(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(n=u(n),a=u(a)),["["+n.map((t,e)=>i(t,s[e],r)).join(", ")+", ..., "+a.map((t,e)=>i(t,s[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?u(e):Array.from(e)).map((t,e)=>i(t,s[e],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,i=a+m;b.push(...t(e.slice(a,i),p,r,f,s,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,i=a+m;b.push(...t(e.slice(a,i),p,r,f,s,n===d-1))}}else for(let n=0;n<d;n++){const a=n*m,i=a+m;b.push(...t(e.slice(a,i),p,r,f,s,n===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let t=1;t<b.length-1;t++)b[t]=" "+b[t]+g;let y=",\n";for(let t=2;t<h;t++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":y),b}(t,e,n,s,c),h=["Tensor"];return r&&(h.push("  dtype: "+n),h.push("  rank: "+l),h.push(`  shape: [${e}]`),h.push("  values:")),h.push(d.map(t=>"    "+t).join("\n")),h.join("\n")}function i(t,e,n){let r;return r=Array.isArray(t)?parseFloat(t[0].toFixed(7))+" + "+parseFloat(t[1].toFixed(7))+"j":Object(a.z)(t)?`'${t}'`:"bool"===n?o(t):parseFloat(t.toFixed(7)).toString(),Object(a.L)(r,e)}function o(t){return 0===t?"false":"true"}function u(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var c=n(78);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=a.O(t),null!=n){const t=n.length;a.b(t===this.size,()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(e,this.size),this.strides=Object(a.j)(t)}set(t,...e){0===e.length&&(e=[0]),a.b(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=`+this.shape;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,h=null,p=null;function f(t){d=t}function m(t){h=t}function b(t){p=t}class g{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=a.O(t),this.strides=Object(a.j)(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return h.buffer(this.shape,this.dtype,t)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(a.T)(this.shape,t)}arraySync(){return Object(a.T)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=d().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map(t=>c.decodeString(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=d().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>c.decodeString(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await d().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return h.print(this,t)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(t=!1){return s(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),h.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),d().makeVariable(this,t,e,n)}}function y(){return Object(r.a)("Tensor",()=>g)}Object.defineProperty(g,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),y();class x extends g{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=t.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:t=>t instanceof g&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return s})),n.d(e,"toTypedArray",(function(){return i})),n.d(e,"now",(function(){return o})),n.d(e,"fetch",(function(){return u})),n.d(e,"encodeString",(function(){return c})),n.d(e,"decodeString",(function(){return l}));var r=n(93),a=n(169);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e){return"string"===e?c(t):i([t],e)}function i(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.c)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type "+e)}function o(){return Object(r.c)().platform.now()}function u(t,e){return Object(r.c)().platform.fetch(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"shuffleCombo",(function(){return a.N})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.R})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.O})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.S})),n.d(e,"sizeToSquarishShape",(function(){return a.P})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.Q})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.T})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({reshape_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n={x:Object(s.a)(t,"x","reshape","string_or_numeric")},i={shape:e};return r.a.runKernel(a.oc,n,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({mul_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","mul"),o=Object(i.a)(e,"b","mul");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Ub,u)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return a.a})),n.d(e,"c",(function(){return s.a})),n.d(e,"d",(function(){return i.a})),n.d(e,"e",(function(){return o.a})),n.d(e,"f",(function(){return u.a})),n.d(e,"g",(function(){return c.a})),n.d(e,"h",(function(){return l.a})),n.d(e,"i",(function(){return d.a})),n.d(e,"j",(function(){return h.a})),n.d(e,"k",(function(){return p.a})),n.d(e,"l",(function(){return f.a})),n.d(e,"m",(function(){return m.a})),n.d(e,"n",(function(){return b.a})),n.d(e,"o",(function(){return g.a})),n.d(e,"p",(function(){return y.a})),n.d(e,"q",(function(){return x.a})),n.d(e,"r",(function(){return C})),n.d(e,"w",(function(){return T.a})),n.d(e,"s",(function(){return E.a})),n.d(e,"t",(function(){return $})),n.d(e,"u",(function(){return R})),n.d(e,"v",(function(){return _})),n.d(e,"x",(function(){return D.a})),n.d(e,"z",(function(){return F.a})),n.d(e,"A",(function(){return M.a})),n.d(e,"B",(function(){return L.a})),n.d(e,"C",(function(){return z.a})),n.d(e,"D",(function(){return P.a})),n.d(e,"E",(function(){return B.a})),n.d(e,"F",(function(){return W.a})),n.d(e,"G",(function(){return O.a})),n.d(e,"H",(function(){return V})),n.d(e,"I",(function(){return U})),n.d(e,"J",(function(){return G})),n.d(e,"K",(function(){return H})),n.d(e,"L",(function(){return q.a})),n.d(e,"M",(function(){return K.a})),n.d(e,"N",(function(){return X.a})),n.d(e,"O",(function(){return Y.a})),n.d(e,"P",(function(){return Z})),n.d(e,"Q",(function(){return Q.a})),n.d(e,"R",(function(){return tt.a})),n.d(e,"T",(function(){return et.a})),n.d(e,"U",(function(){return nt.a})),n.d(e,"V",(function(){return rt.a})),n.d(e,"W",(function(){return at.a})),n.d(e,"X",(function(){return ot})),n.d(e,"Y",(function(){return ut.a})),n.d(e,"Z",(function(){return ct.a})),n.d(e,"ab",(function(){return lt.a})),n.d(e,"bb",(function(){return dt.a})),n.d(e,"db",(function(){return ht.a})),n.d(e,"fb",(function(){return pt.a})),n.d(e,"gb",(function(){return ft.a})),n.d(e,"hb",(function(){return mt.a})),n.d(e,"ib",(function(){return bt.a})),n.d(e,"jb",(function(){return gt.a})),n.d(e,"kb",(function(){return vt})),n.d(e,"mb",(function(){return Ot.a})),n.d(e,"nb",(function(){return wt.a})),n.d(e,"ob",(function(){return kt.a})),n.d(e,"qb",(function(){return It.a})),n.d(e,"sb",(function(){return Nt.a})),n.d(e,"tb",(function(){return jt.a})),n.d(e,"vb",(function(){return St.a})),n.d(e,"zb",(function(){return Ct.a})),n.d(e,"Ab",(function(){return Tt.a})),n.d(e,"Bb",(function(){return Et.a})),n.d(e,"Cb",(function(){return At.a})),n.d(e,"Db",(function(){return $t.a})),n.d(e,"Eb",(function(){return Rt.a})),n.d(e,"Gb",(function(){return _t.a})),n.d(e,"Hb",(function(){return Dt.a})),n.d(e,"Ib",(function(){return Ft.a})),n.d(e,"Jb",(function(){return Mt.a})),n.d(e,"Kb",(function(){return Lt.a})),n.d(e,"Lb",(function(){return zt.a})),n.d(e,"Mb",(function(){return Pt.a})),n.d(e,"Nb",(function(){return Bt.a})),n.d(e,"Ob",(function(){return Wt.a})),n.d(e,"Pb",(function(){return Vt.a})),n.d(e,"Qb",(function(){return Ut.a})),n.d(e,"Sb",(function(){return w.a})),n.d(e,"Tb",(function(){return Gt.a})),n.d(e,"Ub",(function(){return Ht.a})),n.d(e,"Vb",(function(){return qt.a})),n.d(e,"Wb",(function(){return Kt.a})),n.d(e,"Xb",(function(){return Xt.a})),n.d(e,"Yb",(function(){return Yt.a})),n.d(e,"Zb",(function(){return Jt.a})),n.d(e,"ac",(function(){return Zt.a})),n.d(e,"bc",(function(){return Qt.a})),n.d(e,"cc",(function(){return te.a})),n.d(e,"dc",(function(){return ae})),n.d(e,"fc",(function(){return k.a})),n.d(e,"gc",(function(){return se})),n.d(e,"hc",(function(){return ie.a})),n.d(e,"ic",(function(){return oe.a})),n.d(e,"kc",(function(){return ue.a})),n.d(e,"lc",(function(){return ce.a})),n.d(e,"mc",(function(){return le.a})),n.d(e,"nc",(function(){return de.a})),n.d(e,"pc",(function(){return he})),n.d(e,"qc",(function(){return pe.a})),n.d(e,"rc",(function(){return fe})),n.d(e,"sc",(function(){return me})),n.d(e,"tc",(function(){return be})),n.d(e,"uc",(function(){return ge})),n.d(e,"vc",(function(){return ye.a})),n.d(e,"wc",(function(){return xe.a})),n.d(e,"xc",(function(){return ve.a})),n.d(e,"yc",(function(){return Oe.a})),n.d(e,"zc",(function(){return we.a})),n.d(e,"Ac",(function(){return ke})),n.d(e,"Bc",(function(){return Ne})),n.d(e,"Cc",(function(){return je})),n.d(e,"Dc",(function(){return Se.a})),n.d(e,"Ec",(function(){return Ce.a})),n.d(e,"Fc",(function(){return Te.a})),n.d(e,"Gc",(function(){return Ee.a})),n.d(e,"Hc",(function(){return Ae.a})),n.d(e,"Ic",(function(){return $e.a})),n.d(e,"Jc",(function(){return yt.a})),n.d(e,"Kc",(function(){return Re.a})),n.d(e,"Lc",(function(){return _e})),n.d(e,"Mc",(function(){return De})),n.d(e,"Nc",(function(){return Fe})),n.d(e,"Oc",(function(){return Me})),n.d(e,"Qc",(function(){return Le.a})),n.d(e,"Rc",(function(){return ze.a})),n.d(e,"Sc",(function(){return Pe.a})),n.d(e,"Uc",(function(){return Be.a})),n.d(e,"Vc",(function(){return We.a})),n.d(e,"Wc",(function(){return Ve.a})),n.d(e,"Xc",(function(){return N.a})),n.d(e,"Yc",(function(){return Ue.a})),n.d(e,"ad",(function(){return Ge.a})),n.d(e,"bd",(function(){return He.a})),n.d(e,"cd",(function(){return j.a})),n.d(e,"dd",(function(){return qe})),n.d(e,"ed",(function(){return Ke})),n.d(e,"fd",(function(){return Xe})),n.d(e,"gd",(function(){return Ye})),n.d(e,"hd",(function(){return Je.a})),n.d(e,"id",(function(){return Ze.a})),n.d(e,"jd",(function(){return Qe.a})),n.d(e,"lb",(function(){return tn.a})),n.d(e,"ub",(function(){return en.a})),n.d(e,"yb",(function(){return nn.a})),n.d(e,"Pc",(function(){return rn.a})),n.d(e,"md",(function(){return an.a})),n.d(e,"nd",(function(){return sn.a})),n.d(e,"od",(function(){return ne.a})),n.d(e,"pd",(function(){return on.a})),n.d(e,"qd",(function(){return un.a})),n.d(e,"rd",(function(){return cn.a})),n.d(e,"sd",(function(){return ln.a})),n.d(e,"td",(function(){return dn.a})),n.d(e,"ud",(function(){return re.a})),n.d(e,"vd",(function(){return hn.a})),n.d(e,"wd",(function(){return pn.a})),n.d(e,"xd",(function(){return S.a})),n.d(e,"yd",(function(){return fn.a})),n.d(e,"zd",(function(){return mn.a})),n.d(e,"Ad",(function(){return gn})),n.d(e,"Bd",(function(){return yn.a})),n.d(e,"Cd",(function(){return xn})),n.d(e,"Dd",(function(){return vn})),n.d(e,"Ed",(function(){return On})),n.d(e,"Fd",(function(){return xt.a})),n.d(e,"Gd",(function(){return wn.a})),n.d(e,"Id",(function(){return kn.a})),n.d(e,"Jd",(function(){return In.a})),n.d(e,"Kd",(function(){return Nn.a})),n.d(e,"Ld",(function(){return jn.a})),n.d(e,"Md",(function(){return Sn})),n.d(e,"Nd",(function(){return Cn.a})),n.d(e,"Od",(function(){return Tn.a})),n.d(e,"Pd",(function(){return En.a})),n.d(e,"Qd",(function(){return An.a})),n.d(e,"y",(function(){return $n})),n.d(e,"Hd",(function(){return Rn.a})),n.d(e,"jc",(function(){return _n.a})),n.d(e,"ec",(function(){return Fn})),n.d(e,"Tc",(function(){return Mn.a})),n.d(e,"kd",(function(){return Ln.a})),n.d(e,"rb",(function(){return zn.a})),n.d(e,"cb",(function(){return Bn})),n.d(e,"eb",(function(){return Wn})),n.d(e,"S",(function(){return Vn})),n.d(e,"xb",(function(){return Un})),n.d(e,"oc",(function(){return I.b})),n.d(e,"a",(function(){return I.a})),n.d(e,"wb",(function(){return Mr})),n.d(e,"Fb",(function(){return Lr})),n.d(e,"Rb",(function(){return zr})),n.d(e,"ld",(function(){return Dr})),n.d(e,"pb",(function(){return r})),n.d(e,"Zc",(function(){return Fr}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Jn})),n.d(r,"depthwiseConv2d",(function(){return tr})),n.d(r,"matMul",(function(){return er}));var a=n(123),s=n(270),i=n(271),o=n(89),u=n(272),c=n(213),l=n(214),d=n(215),h=n(216),p=n(273),f=n(274),m=n(275),b=n(217),g=n(276),y=n(174),x=n(277),v=n(75),O=n(98),w=n(108),k=n(80),I=n(74),N=n(149),j=n(96),S=n(218);const C=Object(I.b)({basicLSTMCell_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,a,s){const i=Object(v.a)(t,"forgetBias","basicLSTMCell"),u=Object(v.a)(e,"lstmKernel","basicLSTMCell"),c=Object(v.a)(n,"lstmBias","basicLSTMCell"),l=Object(v.a)(r,"data","basicLSTMCell"),d=Object(v.a)(a,"c","basicLSTMCell"),h=Object(v.a)(s,"h","basicLSTMCell"),p=Object(O.a)([l,h],1),f=Object(w.a)(p,u),m=Object(o.a)(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(j.a)(m,[0,0],y),I=Object(j.a)(m,[0,g],y),C=Object(j.a)(m,[0,2*g],y),T=Object(j.a)(m,[0,3*g],y),E=Object(o.a)(Object(k.a)(Object(N.a)(x),Object(S.a)(I)),Object(k.a)(d,Object(N.a)(Object(o.a)(i,C))));return[E,Object(k.a)(Object(S.a)(E),Object(N.a)(T))]}});var T=n(150),E=n(143),A=n(169);const $=Object(I.b)({batchNorm2d_:function(t,e,n,r,a,s){const i=Object(v.a)(t,"x","batchNorm"),o=Object(v.a)(e,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),A.b(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),A.b(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),A.b(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&A.b(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&A.b(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Object(E.a)(i,o,u,l,c,s)}});const R=Object(I.b)({batchNorm3d_:function(t,e,n,r,a,s){const i=Object(v.a)(t,"x","batchNorm"),o=Object(v.a)(e,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),A.b(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),A.b(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),A.b(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&A.b(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&A.b(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Object(E.a)(i,o,u,l,c,s)}});const _=Object(I.b)({batchNorm4d_:function(t,e,n,r,a,s){const i=Object(v.a)(t,"x","batchNorm"),o=Object(v.a)(e,"mean","batchNorm"),u=Object(v.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(v.a)(a,"scale","batchNorm")),null!=r&&(l=Object(v.a)(r,"offset","batchNorm")),A.b(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),A.b(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),A.b(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&A.b(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&A.b(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Object(E.a)(i,o,u,l,c,s)}});var D=n(278),F=n(175),M=n(110),L=n(82),z=n(279),P=n(280),B=n(131),W=n(122);const V=Object(I.b)({concat1d_:function(t){return Object(O.a)(t,0)}});const U=Object(I.b)({concat2d_:function(t,e){return Object(O.a)(t,e)}});const G=Object(I.b)({concat3d_:function(t,e){return Object(O.a)(t,e)}});const H=Object(I.b)({concat4d_:function(t,e){return Object(O.a)(t,e)}});var q=n(219),K=n(124),X=n(220),Y=n(281),J=n(282);const Z=Object(I.b)({conv3dTranspose_:function(t,e,n,r,a){const s=Object(v.a)(t,"x","conv3dTranspose"),i=Object(v.a)(e,"filter","conv3dTranspose");return Object(J.a)(n,s,i,r,a)}});var Q=n(176),tt=n(222),et=n(177),nt=n(283),rt=n(223),at=n(151),st=n(76),it=n(73);const ot=Object(I.b)({diag_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(v.a)(t,"x","diag")};return st.a.runKernel(it.R,e)}});var ut=n(224),ct=n(83),lt=n(225),dt=n(226),ht=n(178),pt=n(152),ft=n(284),mt=n(109),bt=n(153),gt=n(285),yt=n(79),xt=n(154);const vt=Object(I.b)({eye_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r="float32"){null==e&&(e=t);const a=Object(M.a)([t,e],r),s=t<=e?t:e;for(let t=0;t<s;++t)a.set(1,t,t);const i=Object(yt.a)(a.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Object(xt.a)(Object(bt.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(xt.a)(Object(bt.a)(Object(bt.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(xt.a)(Object(bt.a)(Object(bt.a)(Object(bt.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ot=n(173),wt=n(179),kt=n(172),It=n(155),Nt=n(111),jt=n(125),St=n(180),Ct=n(286),Tt=n(287),Et=n(288),At=n(181),$t=n(182),Rt=n(126),_t=n(289),Dt=n(227),Ft=n(132),Mt=n(228),Lt=n(290),zt=n(291),Pt=n(183),Bt=n(127),Wt=n(156),Vt=n(184),Ut=n(230),Gt=n(133),Ht=n(185),qt=n(292),Kt=n(293),Xt=n(148),Yt=n(157),Jt=n(186),Zt=n(187),Qt=n(231),te=n(232),ee=n(105),ne=n(91),re=n(84);const ae=Object(I.b)({moments_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){t=Object(v.a)(t,"x","moments");const r=Object(A.I)(e,t.shape),a=Object(Yt.a)(t,r,n);let s=a.shape;n||(s=Object(ee.e)(a.shape,r));const i=Object(ne.a)(Object(re.a)(Object(L.a)(t,"float32"),Object(yt.a)(a,s)));return{mean:a,variance:Object(Yt.a)(i,r,n)}}});const se=Object(I.b)({multiRNNCell_:function(t,e,n,r){const a=Object(v.a)(e,"data","multiRNNCell"),s=Object(v.b)(n,"c","multiRNNCell"),i=Object(v.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let e=0;e<t.length;e++){const n=t[e](o,s[e],i[e]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let t=0;t<u.length;t+=2)c.push(u[t]),l.push(u[t+1]);return[c,l]}});var ie=n(294),oe=n(94),ue=n(188),ce=n(189),le=n(134),de=n(295);const he=Object(I.b)({outerProduct_:function(t,e){const n=Object(v.a)(t,"v1","outerProduct"),r=Object(v.a)(e,"v2","outerProduct");A.b(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=Object(yt.a)(n,[-1,1]),s=Object(yt.a)(r,[1,-1]);return Object(w.a)(a,s)}});var pe=n(117);const fe=Object(I.b)({pad1d_:function(t,e,n=0){return Object(A.b)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Object(pe.a)(t,[e],n)}});const me=Object(I.b)({pad2d_:function(t,e,n=0){return Object(A.b)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(pe.a)(t,e,n)}});const be=Object(I.b)({pad3d_:function(t,e,n=0){return Object(A.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(pe.a)(t,e,n)}});const ge=Object(I.b)({pad4d_:function(t,e,n=0){return Object(A.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(pe.a)(t,e,n)}});var ye=n(233),xe=n(116),ve=n(190),Oe=n(212),we=n(234);const ke=Object(I.b)({rand_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const r=Object(A.O)(t);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let t=0;t<r;t++)a[t]=e();return st.a.makeTensor(a,t,n)}});var Ie=n(191);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ne=Object(I.b)({randomGamma_:function(t,e,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new Ie.b(e,n,r,a),i=Object(M.a)(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=s.nextValue();return i.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je=Object(I.b)({randomNormal_:function(t,e=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new Ie.a(e,n,r,!1,a),i=Object(M.a)(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=s.nextValue();return i.toTensor()}});var Se=n(236),Ce=n(237),Te=n(193),Ee=n(296),Ae=n(137),$e=n(194),Re=n(112);const _e=Object(I.b)({reverse1d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(v.a)(t,"x","reverse");return A.b(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Object(Re.a)(e,0)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const De=Object(I.b)({reverse2d_:function(t,e){const n=Object(v.a)(t,"x","reverse");return A.b(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Object(Re.a)(n,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe=Object(I.b)({reverse3d_:function(t,e){const n=Object(v.a)(t,"x","reverse");return A.b(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Object(Re.a)(n,e)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Me=Object(I.b)({reverse4d_:function(t,e){const n=Object(v.a)(t,"x","reverse");return A.b(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Object(Re.a)(n,e)}});var Le=n(297),ze=n(238),Pe=n(85),Be=n(239),We=n(240),Ve=n(298),Ue=n(299),Ge=n(241),He=n(242);const qe=Object(I.b)({slice1d_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const r=Object(v.a)(t,"x","slice1d");return A.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,[e],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ke=Object(I.b)({slice2d_:function(t,e,n){const r=Object(v.a)(t,"x","slice2d");return A.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,e,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xe=Object(I.b)({slice3d_:function(t,e,n){const r=Object(v.a)(t,"x","slice3d");return A.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,e,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ye=Object(I.b)({slice4d_:function(t,e,n){const r=Object(v.a)(t,"x","slice4d");return A.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Object(j.a)(r,e,n)}});var Je=n(300),Ze=n(229),Qe=n(158),tn=n(195),en=n(196),nn=n(243),rn=n(197),an=n(138),sn=n(104),on=n(198),un=n(159),cn=n(128),ln=n(139),dn=n(301),hn=n(90),pn=n(302),fn=n(171),mn=n(140),bn=n(115);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gn(t,e,n){if(Object(A.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(v.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(bn.a)(t,e,r,n)}var yn=n(244);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(t,e,n){if(Object(A.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(v.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(t,e,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vn(t,e,n){if(Object(A.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(v.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(t,e,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(t,e,n){if(Object(A.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(v.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(bn.a)(t,e,r,n)}var wn=n(245),kn=n(303),In=n(246),Nn=n(199),jn=n(141);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sn(t,e=!0,n,r){return st.a.makeVariable(t,e,n,r)}var Cn=n(101),Tn=n(247),En=n(135),An=n(87);const $n=
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function(t,e,n){const r=Object(v.a)(t,"tensor","boolMask"),a=Object(v.a)(e,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;A.b(i>0,()=>"mask cannot be scalar"),A.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let t=s;t<s+i;t++)u*=o[t];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(yt.a)(r,c),d=Object(yt.a)(a,[-1]),h=await Object(Tn.a)(d),p=Object(un.a)(h,[1]),f=Object(It.a)(l,p,s);return t!==r&&r.dispose(),e!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Rn=n(118),_n=n(200),Dn=n(88);const Fn=Object(I.b)({movingAverage_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,a=!0){const s=Object(v.a)(t,"v","movingAverage"),i=Object(v.a)(e,"x","movingAverage"),u=Object(v.a)(n,"decay","movingAverage");Object(Dn.assertTypesMatch)(s,i),A.b(A.a(s.shape,i.shape),()=>"Shape mismatch in v and x");const c=Object(Pe.a)(1),l=Object(re.a)(c,u);let d=Object(k.a)(Object(re.a)(i,s),l);if(a){A.b(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(v.a)(r,"step","movingAverage");d=Object(ct.a)(d,Object(re.a)(c,Object(xe.a)(u,t)))}return Object(o.a)(s,d)}});var Mn=n(304),Ln=n(312),zn=n(305),Pn=n(77);const Bn=Object(I.b)({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r){const a=Object(v.a)(t,"x","dropout");if(A.b("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),A.b(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return t instanceof Pn.a?a.clone():a;const s=
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){if(null==e)return t.shape.slice();if(A.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),i=1-e,u=Object(ct.a)(Object(wt.a)(Object(o.a)(Object(Se.a)(s,0,1,"float32",r),i)),i);return Object(k.a)(a,u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Vn(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let s=0;s<t;++s){const i=2*Math.PI*s/(t+r-1);a[s]=e-n*Math.cos(i)}return Object(mn.a)(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Un=async function(t,e,n=1){const r=Object(v.a)(t,"predictions","inTopK"),a=Object(v.a)(e,"targets","inTopK");Object(A.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(A.b)(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(A.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(A.b)(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(A.o)("bool",u);for(let t=0;t<u;t++){const e=t*c,r=i.subarray(e,e+c),a=[];for(let t=0;t<r.length;t++)a.push({value:r[t],index:t});a.sort((t,e)=>e.value-t.value),l[t]=0;for(let e=0;e<n;e++)if(a[e].index===o[t]){l[t]=1;break}}return t!==r&&r.dispose(),e!==a&&a.dispose(),Object(fn.a)(l,a.shape,"bool")};var Gn=n(97),Hn=n(86),qn=n(249),Kn=n(221),Xn=n(99),Yn=n(129);const Jn=Object(I.b)({fusedConv2d_:
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object(Yn.d)(st.a.state.gradientDepth,c)){let h=Object(K.a)(t,e,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Yn.a)(h,c,l,d)}const h=Object(v.a)(t,"x","conv2d"),p=Object(v.a)(e,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(yt.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A.b(4===f.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+f.rank+"."),A.b(4===p.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+p.rank+"."),null!=i&&A.b(A.v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),A.b(f.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`),A.b(Xn.h(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),A.b("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const b=Xn.a(f.shape,p.shape,n,s,r,i);let g,y;null!=u&&(g=Object(v.a)(u,"bias","fused conv2d"),[g]=Object(Dn.makeTypesMatch)(g,h),Hn.a(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[a,i,o,u]=e,l=Object(Yn.c)(t,o,c);A.b(Xn.i(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[Object(Kn.a)(i.shape,l,a,n,r),Object(qn.a)(i,l,a.shape,n,r)];if(null!=u){const t=Object(Yn.b)(u,l);d.push(t)}return d},O={x:f,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Gn.a)((t,e,n)=>{let r=st.a.runKernel(it.jb,O,w);return n([e,t,r]),m&&(r=Object(yt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,p)}return Object(Gn.a)((t,e,n,r)=>{let a=st.a.runKernel(it.jb,O,w);return r([e,t,a,n]),m&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,p,g)}});var Zn=n(309),Qn=n(308);const tr=Object(I.b)({fusedDepthwiseConv2d_:
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(Yn.d)(st.a.state.gradientDepth,c)){let h=Object(at.a)(t,e,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Yn.a)(h,c,l,d)}const h=Object(v.a)(t,"x","depthwiseConv2d"),p=Object(v.a)(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(yt.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A.b(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A.b(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),A.b(f.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==s&&(s=[1,1]),A.b(Xn.h(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&A.b(A.v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const b=Xn.a(f.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(v.a)(u,"bias","fused conv2d"),[g]=Object(Dn.makeTypesMatch)(g,h),Hn.a(b.outShape,g.shape)),null!=l&&(y=Object(v.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{A.b(Xn.i(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,u,l]=e,d=Object(Yn.c)(t,u,c),h=Object(Qn.a)(o.shape,d,a,n,r,s,i),p=Object(Zn.a)(o,d,a.shape,n,r,s,i);if(null!=l){return[h,p,Object(Yn.b)(g,d)]}return[h,p]},O={x:f,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Gn.a)((t,e,n)=>{let r=st.a.runKernel(it.kb,O,w);return n([e,t,r]),m&&(r=Object(yt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,p)}return Object(Gn.a)((t,e,n,r)=>{let a=st.a.runKernel(it.kb,O,w);return r([e,t,a,n]),m&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,p,g)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er=Object(I.b)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object(Yn.d)(st.a.state.gradientDepth,s)){let c=Object(w.a)(t,e,n,r);return null!=a&&(c=Object(o.a)(c,a)),Object(Yn.a)(c,s,i,u)}let c=Object(v.a)(t,"a","fused matMul"),l=Object(v.a)(e,"b","fused matMul");[c,l]=Object(Dn.makeTypesMatch)(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=A.O(m),y=A.O(b);A.b(c.rank>=2&&l.rank>=2&&c.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`),A.b(A.a(m,b),()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${c.shape} and `+l.shape+" must match."),A.b(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=c.shape.slice(0,-2).concat([p,f]),O=n?Object(yt.a)(c,[g,d,p]):Object(yt.a)(c,[g,p,d]),k=r?Object(yt.a)(l,[y,f,h]):Object(yt.a)(l,[y,h,f]);let I,N;null!=a&&(I=Object(v.a)(a,"bias","fused matMul"),[I]=Object(Dn.makeTypesMatch)(I,c),Hn.a(x,I.shape)),null!=i&&(N=Object(v.a)(i,"prelu weights","fused matMul"));const j=(t,e)=>{const[i,o,u,c]=e,l=Object(Yn.c)(Object(yt.a)(t,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(w.a)(l,o,!1,!1),h=Object(w.a)(l,i,!0,!1)):n&&!r?(d=Object(w.a)(o,l,!1,!0),h=Object(w.a)(i,l,!1,!1)):(d=Object(w.a)(o,l,!0,!0),h=Object(w.a)(l,i,!0,!0)):(d=Object(w.a)(l,o,!1,!0),h=Object(w.a)(i,l,!0,!1)),null!=a){return[d,h,Object(Yn.b)(c,l)]}return[d,h]},S={a:O,b:k,bias:I,preluActivationWeights:N},C={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:u};if(null==a){return Object(Gn.a)((t,e,n)=>{const r=st.a.runKernel(it.bd,S,C);return n([t,e,r]),{value:Object(yt.a)(r,x),gradFunc:j}})(O,k)}return Object(Gn.a)((t,e,n,r)=>{const a=st.a.runKernel(it.bd,S,C);return r([t,e,a,n]),{value:Object(yt.a)(a,x),gradFunc:j}})(O,k,I)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr=Object(I.b)({hammingWindow_:function(t){return Vn(t,.54,.46)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rr=Object(I.b)({hannWindow_:function(t){return Vn(t,.5,.5)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ar=Object(I.b)({frame_:function(t,e,n,r=!1,a=0){let s=0;const i=[];for(;s+e<=t.size;)i.push(Object(j.a)(t,s,e)),s+=n;if(r)for(;s<t.size;){const r=s+e-t.size,o=Object(O.a)([Object(j.a)(t,s,e-r),Object(Ot.a)([r],a)]);i.push(o),s+=n}return 0===i.length?gn([],[0,e]):Object(yt.a)(Object(O.a)(i),[i.length,e])}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr=Object(I.b)({stft_:function(t,e,n,r,a=rr){null==r&&(r=Wn(e));const s=ar(t,e,n),i=Object(k.a)(s,a(e)),o=[];for(let t=0;t<s.shape[0];t++)o.push(Object(rn.a)(Object(j.a)(i,[t,0],[1,e]),r));return Object(O.a)(o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir=Object(I.b)({cropAndResize_:function(t,e,n,r,a="bilinear",s=0){const i=Object(v.a)(t,"image","cropAndResize"),o=Object(v.a)(e,"boxes","cropAndResize","float32"),u=Object(v.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];A.b(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),A.b(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),A.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),A.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),A.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return st.a.runKernel(it.K,l,d)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or=Object(I.b)({flipLeftRight_:function(t){const e=Object(v.a)(t,"image","flipLeftRight","float32");A.b(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return st.a.runKernel(it.eb,n,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur=Object(I.b)({rotateWithOffset_:function(t,e,n=0,r=.5){const a=Object(v.a)(t,"image","rotateWithOffset","float32");A.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},i={radians:e,fillValue:n,center:r};return st.a.runKernel(it.uc,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(t,e,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=t.shape[0];return n=Math.min(n,i),A.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A.b(2===t.rank,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),A.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+t.shape[1]),A.b(1===e.rank,()=>"scores must be a 1D tensor"),A.b(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+e.shape[0]),A.b(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=Object(I.b)({nonMaxSuppression_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v.a)(t,"boxes","nonMaxSuppression"),i=Object(v.a)(e,"scores","nonMaxSuppression"),o=cr(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return st.a.runKernel(it.Wb,{boxes:s,scores:i},u)}});var dr=n(130);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(v.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(v.a)(e,"scores","nonMaxSuppressionAsync"),o=cr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(dr.a)(c,l,n,r,a);return s!==t&&s.dispose(),i!==e&&i.dispose(),Object(mn.a)(d,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pr=Object(I.b)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v.a)(t,"boxes","nonMaxSuppression"),o=Object(v.a)(e,"scores","nonMaxSuppression"),u=cr(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=st.a.runKernel(it.Yb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(v.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(e,"scores","nonMaxSuppressionAsync"),u=cr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(dr.c)(l,d,n,r,a,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Object(mn.a)(h,"int32"),selectedScores:Object(mn.a)(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mr=Object(I.b)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v.a)(t,"boxes","nonMaxSuppression"),o=Object(v.a)(e,"scores","nonMaxSuppression"),u=cr(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=st.a.runKernel(it.Xb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const br=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(v.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(v.a)(e,"scores","nonMaxSuppressionAsync"),u=cr(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(dr.b)(h,p,c,l,d,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Object(mn.a)(f,"int32"),validOutputs:Object(Pe.a)(m,"int32")}};var gr=n(307),yr=n(306);const xr=Object(I.b)({transform_:
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n="nearest",r="constant",a=0,s){const i=Object(v.a)(t,"image","transform","float32"),o=Object(v.a)(e,"transforms","transform","float32");A.b(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),A.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A.b(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const u={image:i,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return st.a.runKernel(it.Vc,u,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=Object(I.b)({bandPart_:function(t,e,n){Object(A.b)(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),Object(A.b)(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(v.a)(t,"a","bandPart");Object(A.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),n<0&&(n=i);const o=Object(yt.a)(Object(Ce.a)(0,s,1,"int32"),[-1,1]),u=Object(Ce.a)(0,i,1,"int32"),c=Object(re.a)(o,u),l=Object(Bt.a)(Object(Rt.a)(c,Object(Pe.a)(+e,"int32")),Object(jt.a)(c,Object(Pe.a)(-n,"int32"))),d=Object(En.a)([s,i],r.dtype);return Object(yt.a)(Object(cn.a)(Object(jn.a)(Object(yt.a)(r,[-1,s,i])).map(t=>Object(Cn.a)(l,t,d))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Object(I.b)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(A.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(A.b)(t[e].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`)}else e=!0,t=Object(an.a)(t,t.shape[0],0).map(t=>Object(un.a)(t,[0]));Object(A.b)(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let e=0;e<t.length;++e)n.push(st.a.tidy(()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=Object(k.a)(Object(hn.a)(Object(k.a)(n[r],t)),n[r]);t=Object(re.a)(t,e)}return Object(ct.a)(t,Object(_n.a)(t,"euclidean"))}));return e?Object(cn.a)(n,0):n}});var wr=n(103);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kr(t,e=!1){return st.a.tidy(()=>{Object(A.b)(2===t.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let a=vt(n),s=Object(B.a)(t);const i=gn([[1]],[1,1]);let o=Object(B.a)(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=s,u=o,c=a;[o,s,a]=st.a.tidy(()=>{const e=Object(j.a)(s,[t,t],[n-t,1]),u=Object(_n.a)(e),c=Object(j.a)(s,[t,t],[1,1]),l=Object(Cn.a)(Object(Nt.a)(c,0),gn([[-1]]),gn([[1]])),d=Object(re.a)(c,Object(k.a)(l,u)),h=Object(ct.a)(e,d);o=1===h.shape[0]?Object(B.a)(i):Object(O.a)([i,Object(j.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(oe.a)(Object(ct.a)(Object(w.a)(l,d),u)),f=Object(j.a)(s,[t,0],[n-t,r]),m=Object(k.a)(p,o),b=Object(Rn.a)(o);if(0===t)s=Object(re.a)(f,Object(w.a)(m,Object(w.a)(b,f)));else{const e=Object(re.a)(f,Object(w.a)(m,Object(w.a)(b,f)));s=Object(O.a)([Object(j.a)(s,[0,0],[t,r]),e],0)}const g=Object(Rn.a)(m),y=Object(j.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(re.a)(y,Object(w.a)(Object(w.a)(y,o),g));else{const e=Object(re.a)(y,Object(w.a)(Object(w.a)(y,o),g));a=Object(O.a)([Object(j.a)(a,[0,0],[n,t]),e],1)}return[o,s,a]}),Object(wr.d)([e,u,c])}return!e&&n>r&&(a=Object(j.a)(a,[0,0],[n,r]),s=Object(j.a)(s,[0,0],[r,r])),[a,s]})}const Ir=Object(I.b)({qr_:function(t,e=!1){if(Object(A.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+t.rank),2===t.rank)return kr(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object(jn.a)(Object(yt.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],s=[];r.forEach(t=>{const[n,r]=kr(t,e);a.push(n),s.push(r)});return[Object(yt.a)(Object(cn.a)(a,0),t.shape),Object(yt.a)(Object(cn.a)(s,0),t.shape)]}}});var Nr=n(106);const jr=Object(I.b)({computeWeightedLoss_:function(t,e,n=Nr.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(v.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(v.a)(e,"weights","computeWeightedLoss"));const s=null==a?r:Object(k.a)(r,a);if(n===Nr.a.NONE)return s;if(n===Nr.a.SUM)return Object(hn.a)(s);if(n===Nr.a.MEAN){if(null==a)return Object(Yt.a)(s);{const t=r.size/a.size,e=Object(ct.a)(Object(hn.a)(s),Object(hn.a)(a));return t>1?Object(ct.a)(e,Object(Pe.a)(t)):e}}if(n===Nr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ct.a)(Object(hn.a)(s),Object(Pe.a)(r.size));{const t=Object(k.a)(a,Object(le.a)(r.shape)),e=Object(L.a)(Object(hn.a)(Object(ue.a)(t,Object(Pe.a)(0))),"float32");return Object(ct.a)(Object(hn.a)(s),e)}}throw Error("Unknown reduction: "+n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=Object(I.b)({absoluteDifference_:function(t,e,n,r=Nr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(t,"labels","absoluteDifference"),i=Object(v.a)(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(v.a)(n,"weights","absoluteDifference")),Object(A.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(re.a)(s,i));return jr(u,o,r)}});const Cr=Object(I.b)({cosineDistance_:function(t,e,n,r,a=Nr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(t,"labels","cosineDistance"),i=Object(v.a)(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(v.a)(r,"weights","cosineDistance")),Object(A.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(Pe.a)(1),c=Object(re.a)(u,Object(hn.a)(Object(k.a)(s,i),n,!0));return jr(c,o,a)}});const Tr=Object(I.b)({hingeLoss_:function(t,e,n,r=Nr.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(v.a)(t,"labels","hingeLoss");const s=Object(v.a)(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(v.a)(n,"weights","hingeLoss")),Object(A.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(Pe.a)(1);a=Object(re.a)(Object(k.a)(Object(Pe.a)(2),a),o);const u=Object(Ae.a)(Object(re.a)(o,Object(k.a)(a,s)));return jr(u,i,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Object(I.b)({huberLoss_:function(t,e,n,r=1,s=Nr.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(v.a)(t,"labels","huberLoss"),u=Object(v.a)(e,"predictions","huberLoss");let c=null;null!=n&&(c=Object(v.a)(n,"weights","huberLoss")),Object(A.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(Pe.a)(r),d=Object(a.a)(Object(re.a)(u,i)),h=Object(Zt.a)(d,l),p=Object(re.a)(d,h),f=Object(o.a)(Object(k.a)(Object(Pe.a)(.5),Object(ne.a)(h)),Object(k.a)(l,p));return jr(f,c,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar=Object(I.b)({logLoss_:function(t,e,n,r=1e-7,a=Nr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(v.a)(t,"labels","logLoss"),i=Object(v.a)(e,"predictions","logLoss");let u=null;null!=n&&(u=Object(v.a)(n,"weights","logLoss")),Object(A.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(Pe.a)(1),l=Object(Pe.a)(r),d=Object(oe.a)(Object(k.a)(s,Object(Ft.a)(Object(o.a)(i,l)))),h=Object(k.a)(Object(re.a)(c,s),Object(Ft.a)(Object(o.a)(Object(re.a)(c,i),l))),p=Object(re.a)(d,h);return jr(p,u,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r=Object(I.b)({meanSquaredError_:function(t,e,n,r=Nr.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(v.a)(t,"labels","meanSquaredError"),s=Object(v.a)(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(v.a)(n,"weights","meanSquaredError")),Object(A.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(on.a)(a,s);return jr(o,i,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Object(I.b)({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Nr.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(v.a)(t,"multiClassLabels","sigmoidCrossEntropy");const u=Object(v.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(v.a)(n,"weights","sigmoidCrossEntropy")),Object(A.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(Pe.a)(r),e=Object(Pe.a)(1),n=Object(Pe.a)(.5);i=Object(o.a)(Object(k.a)(i,Object(re.a)(e,t)),Object(k.a)(n,t))}const l=function(t,e){const n=Object(v.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(v.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(A.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(Ae.a)(r),i=Object(k.a)(r,n),u=Object(Mt.a)(Object(mt.a)(Object(oe.a)(Object(a.a)(r))));return Object(o.a)(Object(re.a)(s,i),u)}(i,u);return jr(l,c,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r=Object(I.b)({softmaxCrossEntropy_:function(t,e,n,r=0,a=Nr.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(v.a)(t,"onehotLabels","softmaxCrossEntropy");const i=Object(v.a)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(v.a)(n,"weights","softmaxCrossEntropy")),Object(A.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(Pe.a)(r),e=Object(Pe.a)(1),n=Object(Pe.a)(s.shape[1]);s=Object(o.a)(Object(k.a)(s,Object(re.a)(e,t)),Object(ct.a)(t,n))}const c=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was `+n);return Object(Gn.a)((t,e,r)=>{const a=Object(Pt.a)(e,[n],!0),s=Object(re.a)(Object(L.a)(e,"float32"),a);r([t,s]);const i=Object(oe.a)(Object(k.a)(s,t));return{value:Object(hn.a)(i,[n]),gradFunc:(t,e)=>{const[r,a]=e,s=Object(ee.e)(t.shape,[n]);return[Object(k.a)(Object(yt.a)(t,s),Object(re.a)(Object(L.a)(r,"float32"),Object(mt.a)(a))),Object(k.a)(Object(yt.a)(t,s),Object(re.a)(Object(mt.a)(a),Object(L.a)(r,"float32")))]}}})(t,e)}(s,i);return jr(c,u,a)}}),Dr={fft:tn.a,ifft:en.a,rfft:rn.a,irfft:nn.a},Fr={hammingWindow:nr,hannWindow:rr,frame:ar,stft:sr},Mr={flipLeftRight:or,resizeNearestNeighbor:yr.a,resizeBilinear:gr.a,rotateWithOffset:ur,cropAndResize:ir,nonMaxSuppression:lr,nonMaxSuppressionAsync:hr,nonMaxSuppressionWithScore:pr,nonMaxSuppressionWithScoreAsync:fr,nonMaxSuppressionPadded:mr,nonMaxSuppressionPaddedAsync:br,transform:xr},Lr={bandPart:vr,gramSchmidt:Or,qr:Ir},zr={absoluteDifference:Sr,computeWeightedLoss:jr,cosineDistance:Cr,hingeLoss:Tr,huberLoss:Er,logLoss:Ar,meanSquaredError:$r,sigmoidCrossEntropy:Rr,softmaxCrossEntropy:_r};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({cast_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(t,"x","cast");if(!i.B(e))throw new Error("Failed to cast to unknown dtype "+e);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:e};return r.a.runKernel(a.w,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(172),u=n(74);const c=Object(u.b)({div_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","div"),u=Object(i.a)(e,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o.a)(n,u);const c={a:n,b:u};return r.a.runKernel(a.kc,c,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({sub_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","sub"),o=Object(i.a)(e,"b","sub");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Pc,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(169),a=n(115);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=t[s]||1;(e[e.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],s=e.length-r-1,i=e[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let s=e[e.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return s}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({zerosLike_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","zerosLike")};return r.a.runKernel(a.ad,e)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return c}));var r=n(77),a=n(121),s=n(169);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(s.b)(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function u(t,e){return e.some(e=>e.id===t.id)}function c(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const i=e;for(const e in i){const r=i[e];a.has(r)||(a.add(r),t(r,n,a))}}(t,e,new Set),e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({add_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","add"),o=Object(i.a)(e,"b","add");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.d,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(82),o=n(74);const u=Object(o.b)({sum_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){let o=Object(s.a)(t,"x","sum");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:e,keepDims:n};return r.a.runKernel(a.Qc,u,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(76),a=n(75),s=n(74);const i=Object(s.b)({square_:
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(a.a)(t,"x","square");return r.a.runKernel("Square",{x:e},{})}})},function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"g",(function(){return c})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n(72);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e,n,a,i){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return s(e.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){return e.inputNames.slice(t,u).map(t=>s(t,n,a,i))}const c=s(e.inputNames.slice(t)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r.util.toNestedArray(c.shape,l)}const u=e.attrParams[t];return u&&u.value}function s(t,e,n,r){const[a,s]=c(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const i=n.currentContextIds.find(t=>!!e[u(a,t)]);return void 0!==i?e[u(a,i)][s]:void 0}function i(t,e,n){return e[u(t,n.currentContextId)]}function o(t,e){const[n,r]=c(t);return[u(n,e&&e.currentContextId),r]}function u(t,e){return e?`${t}-${e}`:t}function c(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function d(t){return t.kept?t:Object(r.clone)(t)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"d",(function(){return o}));var r=n(169);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("="))),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)})}}}function s(){return i}let i=null;function o(t){i=t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({neg_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","neg")};return r.a.runKernel(a.Vb,e)}})},,function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({slice_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const i=Object(s.a)(t,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:e,size:n};return r.a.runKernel(a.Ec,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u}));var r=n(76),a=n(77),s=n(75),i=n(169);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t){return i.b(i.u(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const a=Object(s.a)(e,"x","tf.grad","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(a),[a],o);return null!=o&&i.e(e.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function u(t){return i.b(i.u(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{i.b(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(s.b)(e,"args","tf.grads","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(...a),a,o);return null!=o&&i.e(e.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function c(t){return i.b(i.u(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{i.b(e instanceof a.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:o}=r.a.gradients(()=>t(e),[e],n);return p(s),{grad:s[0],value:o}}}function l(t){return i.b(i.u(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{i.b(Array.isArray(e)&&e.every(t=>t instanceof a.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),i.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=r.a.gradients(()=>t(...e),e,n);return null!=n&&i.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(t,e){i.b(i.u(t),()=>"The f passed in variableGrads(f) must be a function"),i.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const s=n?e.filter(t=>!t.trainable):null,o=e.length;e=e.filter(t=>t.trainable),i.b(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:u,grads:c}=r.a.gradients(t,e,null,!0);i.b(c.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i.b(0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const l={};return e.forEach((t,e)=>{null!=c[e]&&(l[t.name]=c[e])}),null!=s&&s.forEach(t=>l[t.name]=null),{value:u,grads:l}}function h(t){return r.a.customGrad(t)}function p(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(131),u=n(74);const c=Object(u.b)({concat_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){Object(i.b)(t.length>=1,()=>"Pass at least one tensor to concat");const n=Object(s.b)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}),1===n.length)return Object(o.a)(n[0]);const u=n,c={axis:e};return r.a.runKernel(a.B,u,c)}})},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e,n,r,a="NHWC",s){return i(t,[...e,t[3]],n,s,r,null,null,m(a))}function a(t,e,n,r,a,s,o="channelsLast"){const[u,l]=c(e);let d;if("channelsLast"===o)d=[u,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);d=[u,l,t[1],t[1]]}return i(t,d,n,r,a,s,!1,o)}function s(t,e,n,r,a,s,i="NDHWC"){const[u,c,d]=l(e);let h,p;if("NDHWC"===i)p="channelsLast",h=[u,c,d,t[4],t[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);p="channelsFirst",h=[u,c,d,t[1],t[1]]}return o(t,h,n,r,a,!1,p,s)}function i(t,e,n,r,a,s,i=!1,o="channelsLast"){let[l,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,p,f,m]=t;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[l,m,p,f]=t}const[b,g,,y]=e,[x,v]=c(n),[O,w]=c(r),k=d(b,O),I=d(g,w),{padInfo:N,outHeight:j,outWidth:S}=function(t,e,n,r,a,s,i,o,c){let l,d,p;if("number"==typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,a){null==r&&(r=u(t,e,n));const s=t[0],i=t[1],o=h((s-e+2*r)/n+1,a),c=h((i-e+2*r)/n+1,a);return[o,c]}([e,n],s,r,t,o);d=a[0],p=a[1]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/a);const t=Math.max(0,(d-1)*r+s-e),o=Math.max(0,(p-1)*a+i-n),u=Math.floor(t/2),c=t-u,h=Math.floor(o/2);l={top:u,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof t)throw Error("Unknown padding parameter: "+t);{const u="channelsLast"===c?t[1][0]:t[2][0],f="channelsLast"===c?t[1][1]:t[2][1],m="channelsLast"===c?t[2][0]:t[3][0],b="channelsLast"===c?t[2][1]:t[3][1];l={top:u,bottom:f,left:m,right:b,type:0===u&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=h((e-s+u+f)/r+1,o),p=h((n-i+m+b)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:p}}(a,p,f,x,v,k,I,s,o),C=i?y*m:y;let T;return"channelsFirst"===o?T=[l,C,j,S]:"channelsLast"===o&&(T=[l,j,S,C]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:f,inChannels:m,outHeight:j,outWidth:S,outChannels:C,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:b,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationHeight:O,dilationWidth:w,inShape:t,outShape:T,filterShape:e}}function o(t,e,n,r,a,s=!1,i="channelsLast",o){let[c,p,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,p,f,m,b]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[c,b,p,f,m]=t}const[g,y,x,,v]=e,[O,w,k]=l(n),[I,N,j]=l(r),S=d(g,I),C=d(y,N),T=d(x,j),{padInfo:E,outDepth:A,outHeight:$,outWidth:R}=function(t,e,n,r,a,s,i,o,c,l,d){let p,f,m,b;if("number"==typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,a,s){null==a&&(a=u(t,e,r));const i=t[0],o=t[1],c=t[2],l=h((i-e+2*a)/r+1,s),d=h((o-e+2*a)/r+1,s),p=h((c-e+2*a)/r+1,s);return[l,d,p,n]}([e,n,r,1],o,1,a,t,d);f=s[0],m=s[1],b=s[2]}else if("same"===t){f=Math.ceil(e/a),m=Math.ceil(n/s),b=Math.ceil(r/i);const t=(f-1)*a+o-e,u=(m-1)*s+c-n,d=(b-1)*i+l-r,h=Math.floor(t/2),g=t-h,y=Math.floor(u/2),x=u-y,v=Math.floor(d/2);p={top:y,bottom:x,left:v,right:d-v,front:h,back:g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: "+t);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((e-o+1)/a),m=Math.ceil((n-c+1)/s),b=Math.ceil((r-l+1)/i)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:b}}(a,p,f,m,O,w,k,S,C,T,o),_=s?v*b:v;let D;return"channelsFirst"===i?D=[c,_,A,$,R]:"channelsLast"===i&&(D=[c,A,$,R,_]),{batchSize:c,dataFormat:i,inDepth:p,inHeight:f,inWidth:m,inChannels:b,outDepth:A,outHeight:$,outWidth:R,outChannels:_,padInfo:E,strideDepth:O,strideHeight:w,strideWidth:k,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:S,effectiveFilterHeight:C,effectiveFilterWidth:T,dilationDepth:I,dilationHeight:N,dilationWidth:j,inShape:t,outShape:D,filterShape:e}}function u(t,e,n,r=1){const a=d(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function c(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function l(t){return"number"==typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function h(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode "+e)}}function p(t){const[e,n,r]=c(t);return 1===e&&1===n&&1===r}function f(t,e){return p(t)||p(e)}function m(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat "+t)}n.d(e,"d",(function(){return r})),n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"i",(function(){return p})),n.d(e,"h",(function(){return f})),n.d(e,"g",(function(){return m}))},,function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(175),u=n(86),c=n(74);const l=Object(c.b)({where_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const c=Object(s.a)(e,"a","where"),l=Object(s.a)(n,"b","where"),d=Object(s.a)(t,"condition","where","bool"),h=Object(u.a)(c.shape,l.shape),p=Object(o.a)(c,h),f=Object(o.a)(l,h);1===d.rank&&Object(i.b)(d.shape[0]===c.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(i.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:p,e:f};return r.a.runKernel(a.yc,m)}})},function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},function(t,e,n){"use strict";n.d(e,"g",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return x})),n.d(e,"o",(function(){return v})),n.d(e,"k",(function(){return O})),n.d(e,"q",(function(){return w})),n.d(e,"i",(function(){return k})),n.d(e,"j",(function(){return I})),n.d(e,"p",(function(){return N})),n.d(e,"a",(function(){return j})),n.d(e,"s",(function(){return S}));var r=n(76),a=n(93),s=n(77),i=n(88);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(){Object(a.c)().set("PROD",!0)}function u(){Object(a.c)().set("DEBUG",!0)}function c(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(t){return r.a.profile(t)}function m(t,e){return r.a.tidy(t,e)}function b(t){Object(i.getTensorsInContainer)(t).forEach(t=>t.dispose())}function g(t){return r.a.keep(t)}function y(t){return r.a.time(t)}function x(t){return r.a.setBackend(t)}function v(){return r.a.ready()}function O(){return r.a.backendName}function w(t){r.a.removeBackend(t)}function k(t){return r.a.findBackend(t)}function I(t){return r.a.findBackendFactory(t)}function N(t,e,n=1){return r.a.registerBackend(t,e,n)}function j(){return r.a.backend}function S(t,e){Object(a.c)().setPlatform(t,e)}Object(s.e)(l)},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({sqrt_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","sqrt")};return r.a.runKernel(a.Kc,e)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n(169);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function s(t,e,n){const r=t.length+e.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(t[s++]):a.push(e[i++]);return a}function i(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function o(t,e){return s(t,e.map(t=>1),e)}function u(t,e,n){r.b(a(e,n),()=>t+" supports only inner-most axes for now. "+`Got axes ${e} and rank-${n} input.`)}function c(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n(122),a=n(171),s=n(169),i=n(269);async function o(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(t)?t[s].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise(async t=>{const e=await o.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let t=0;t<e.length;t++){const n=e[t],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}t(r)});r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(t,e){const n={};let o,u=0;for(const c of e){const e=c.name,l=c.dtype,d=c.shape,h=Object(s.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=t.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=g()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=Math.round(e*n.scale+n.min)}}u+=h*r}else if("string"===l){const e=Object(s.O)(c.shape);p=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(u,u+4))[0];u+=4;const n=new Uint8Array(t.slice(u,u+e));p.push(n),u+=e}}else{const s=i.a[l],o=t.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);{p=new Float32Array(o);const t=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let e=0;e<t.length;e++)t[e]=p[2*e],s[e]=p[2*e+1];const i=Object(a.a)(t,d,"float32"),u=Object(a.a)(s,d,"float32");n[e]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[e]=Object(a.a)(p,d,l))}return n}function c(t){if(null===t)throw new Error("Invalid input value: "+JSON.stringify(t));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+t.constructor.name)});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const l=void 0!==t&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function h(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,e=n.length;t<e;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=t[n[i>>10]+(1023&i)]+e[i>>10];s[a]=o}return new Float32Array(a)}}}).call(this,n(211).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({matMul_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=!1,o=!1){let u=Object(i.a)(t,"a","matMul"),c=Object(i.a)(e,"b","matMul");[u,c]=Object(s.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:o};return r.a.runKernel(a.s,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({exp_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","exp")};return r.a.runKernel(a.Z,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(77),a=n(169);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e="float32",n){return e=e||"float32",a.c(t),new r.b(t,e,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({greater_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","greater"),u=Object(i.a)(e,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.nb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({reverse_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n={x:Object(s.a)(t,"x","reverse")},i={dims:e};return r.a.runKernel(a.tc,n,i)}})},,function(t,e,n){"use strict";n.d(e,"b",(function(){return u})),n.d(e,"a",(function(){return c}));var r=n(207),a=n(100),s=n(113),i=n(262),o=n(265);class u extends o.a{constructor(t={}){super(t),this.cachedShape=null,this.activeObjectId="",this.isDragging=!1,this.isScaling=!1,this._changed=!1,this.initialControlIdx=-1,this.activeControlIdx=-1,this.previousPos={x:0,y:0},this.observer=null,this.renderer=t.renderer||new r.a,this.targetShapes=t.targetShapes||new a.b,this.graphics=t.graphics||new Set,this.observer=(t,e)=>{switch(t){case"set":this.graphics.forEach(t=>{t.state="none",this.setShapeInteraction(t),t.draw()}),(e=Array.isArray(e)?e:[e]).forEach(t=>{const e=this.getGraphic(t);e.state="box",this.setShapeInteraction(e),e.draw()});break;case"add":(e=Array.isArray(e)?e:[e]).forEach(t=>{const e=this.getGraphic(t);e.state="box",this.setShapeInteraction(e),e.draw()});break;case"delete":{const t=this.getGraphic(e);t.state="none",this.setShapeInteraction(t),t.draw();break}case"clear":this.graphics.forEach(t=>{t.state="none",this.setShapeInteraction(t),t.draw()})}},this.bindings()}set changed(t){if(this._changed=t,t){const t=this.getShape(this.activeObjectId);t&&(this.cachedShape=JSON.parse(JSON.stringify(t)))}else this.cachedShape=null}get changed(){return this._changed}bindings(){this.onRootDown=this.onRootDown.bind(this),this.onObjectDown=this.onObjectDown.bind(this),this.onObjectMove=this.onObjectMove.bind(this),this.onObjectUp=this.onObjectUp.bind(this)}setShapeInteraction(t=null){t&&("box"===t.state?t.controls.forEach((e,n)=>{e.removeAllListeners(),e.on("pointerdown",e=>{e.stopPropagation(),e.idx=n,this.onControlDown(e,t)})}):"none"===t.state&&(t.controls.forEach(t=>{t.removeAllListeners("pointerdown"),t.interactive=!1,t.buttonMode=!1}),t.draw()))}drawDefaultShapesDecoration(t=null){(t?new Set([t]):this.graphics).forEach(t=>{const e=this.targetShapes.has(t.data)?this.targetShapes.size>2?"contour":"box":"none";t.state=e,this.setShapeInteraction(t),t.draw()});const e=this.getFirstGraphic();e&&this.renderer.bringToFront(e)}activate(){Object(a.d)(this.targetShapes,this.observer),this.graphics.forEach(t=>{t.interactive=!0,t.buttonMode=!0,t.on("pointerdown",this.onObjectDown)}),this.drawDefaultShapesDecoration(),this.renderer.stage.interactive=!0,this.renderer.stage.removeListener("pointerdown",this.onRootDown),this.renderer.stage.on("pointerdown",this.onRootDown)}deactivate(){Object(a.e)(this.targetShapes,this.observer),this.graphics.forEach(t=>{t.state="none",this.setShapeInteraction(t),t.interactive=!1,t.buttonMode=!1,t.removeAllListeners()}),this.renderer.stage.removeListener("pointerdown",this.onRootDown)}onRootDown(t){2!==t.data.originalEvent.button&&1!==t.data.originalEvent.button&&this.targetShapes.size&&(this.targetShapes.clear(),this.emitSelection())}onObjectDown(t){const e=t.data.originalEvent.button;if(2===e||1===e)return;const n=t.shape,r=n.id;this.previousPos=this.renderer.getPosition(t.data),this.activeObjectId=r,this.isDragging=!0,this.changed=!1;if(![...this.graphics].find(t=>t.data===n))return;this.renderer.stage.on("pointermove",this.onObjectMove),this.renderer.stage.on("pointerupoutside",this.onObjectUp);this.doObjectSelection(n,t.data.originalEvent.shiftKey)&&this.emitSelection()}doObjectSelection(t,e=!1){const n=new Set(this.targetShapes);return e?this.targetShapes.has(t)?this.targetShapes.delete(t):this.targetShapes.add(t):this.targetShapes.has(t)||(this.targetShapes.clear(),this.targetShapes.add(t)),JSON.stringify([...this.targetShapes])!==JSON.stringify([...n])}onObjectMove(t){const e=t.shape;if(t.data.originalEvent.pressure&&this.isDragging&&this.targetShapes.has(e)){const e=this.renderer.getPosition(t.data);if(e.x===this.previousPos.x&&e.y===this.previousPos.y)return;let n=(e.x-this.previousPos.x)/this.renderer.imageWidth,r=(e.y-this.previousPos.y)/this.renderer.imageHeight;const a=this.globalBounds(),s=1-a[3],i=a[1],o=1-a[2],u=a[0];if(this.renderer.enableOutsideDrawing||(r=Math.min(s,r),r=Math.max(-i,r),n=Math.min(o,n),n=Math.max(-u,n)),0===n&&0===r)return;this.changed||(this.changed=!0),this.targetShapes.forEach(({geometry:t})=>{t.vertices=t.vertices.map((t,e)=>e%2?t+r:t+n)}),this.previousPos=e}}onObjectUp(t){this.isDragging=!1;this.getGraphic(t.shape)&&(this.renderer.stage.removeListener("pointermove",this.onObjectMove),this.renderer.stage.removeListener("pointerupoutside",this.onObjectUp),this.changed&&this.emitUpdate())}emitUpdate(){this.emit("update",[...this.targetShapes].map(t=>t.id))}emitSelection(){this.emit("selection",[...this.targetShapes].map(t=>t.id))}onControlDown(t,e){this.isScaling=!0;const n=t.idx;this.activeControlIdx=n,this.changed=!1,this.initialControlIdx=n,e&&(e.controls[this.activeControlIdx].on("pointermove",t=>{t.stopPropagation(),t.idx=this.activeControlIdx,this.onControlMove(t)}),e.controls[this.activeControlIdx].on("pointerupoutside",t=>{t.stopPropagation(),this.onControlUp(e)}))}onControlMove(t){if(this.isScaling&&t.idx===this.activeControlIdx){this.changed||(this.changed=!0);let e=1,n=0,r=1,a=0;[e,r,n,a]=this.globalBounds();const i=this.renderer.getPosition(t.data);let o=i.x/this.renderer.imageWidth,u=i.y/this.renderer.imageHeight;o=Math.min(1,Math.max(0,o)),u=Math.min(1,Math.max(0,u)),[e,r,n,a]=this.globalBounds();let c=1,l=1,d=1,h=1,p=1,f=1;if(.5!==s.a[this.activeControlIdx].x&&(d=e+Math.abs(s.a[this.activeControlIdx].x-1)*(n-e),p=e+s.a[this.activeControlIdx].x*(n-e),c=(o-d)/(p-d)),.5!==s.a[this.activeControlIdx].y&&(h=r+Math.abs(s.a[this.activeControlIdx].y-1)*(a-r),f=r+s.a[this.activeControlIdx].y*(a-r),l=(u-h)/(f-h)),0===c||0===l)return;(c<0||l<0)&&(c<=0&&(this.activeControlIdx=s.a.findIndex(t=>t.y===s.a[this.activeControlIdx].y&&t.x===Math.abs(s.a[this.activeControlIdx].x-1))),l<=0&&(this.activeControlIdx=s.a.findIndex(t=>t.x===s.a[this.activeControlIdx].x&&t.y===Math.abs(s.a[this.activeControlIdx].y-1)))),this.targetShapes.forEach(t=>{if(c<0||l<0){const e=t.geometry.vertices;let n=[];for(let t=e.length-2;t>=0;t-=2){const r=c<0?e[t]:e[e.length-2-t],a=l<0?e[t+1]:e[e.length-1-t];n=n.concat([r,a])}t.geometry.vertices=n}t.geometry.vertices=[...t.geometry.vertices.map((t,e)=>e%2==0&&1!==c?(t-d)*c+d:e%2==1&&1!==l?(t-h)*l+h:t)]})}}onControlUp(t){-1!==this.initialControlIdx&&t&&(t.controls[this.initialControlIdx].removeAllListeners("pointermove"),t.controls[this.initialControlIdx].removeAllListeners("pointerupoutside"),this.isScaling=!1,this.activeControlIdx=-1,this.initialControlIdx=-1,this.changed&&(this.changed=!1,this.emitUpdate()))}globalBounds(){let t=1,e=1,n=0,r=0;return this.targetShapes.forEach(a=>{const s=Object(i.a)(a.geometry.vertices);s[0]<t&&(t=s[0]),s[2]>n&&(n=s[2]),s[1]<e&&(e=s[1]),s[3]>r&&(r=s[3])}),[t,e,n,r]}getGraphic(t){let e=[...this.graphics].find(e=>e.data===t);return e||(e=[...this.graphics].find(e=>e.data.id===t.id)),e}getFirstGraphic(){const t=this.targetShapes.values().next().value;return t?[...this.graphics].find(e=>e.data===t):null}getShape(t){return[...this.targetShapes].find(e=>e.id===t)}}class c extends o.a{constructor(t={}){super(t),this.cross=new s.b,this.tmpShape=null,this.isCreating=!1,this.mouse={x:0,y:0},this.observer=null,this.id=Math.random().toString(36).substring(2),this.renderer=t.renderer||new r.a,this._shapes=t._shapes||new a.b,this.targetShapes=t.targetShapes||new a.b,this.graphics=t.graphics||new Set,this.renderer.stage.addChild(this.cross),this.observer=()=>{this.graphics.forEach(t=>{t.state=this.getShape(t.data.id)?"contour":"none",t.draw()})},this.bindings(),this.onImageSizeChange=()=>{const t=this.renderer.mouse;this.cross.cx=t.x,this.cross.cy=t.y,this.cross.scaleX=this.renderer.imageWidth,this.cross.scaleY=this.renderer.imageHeight,this.cross.draw()}}bindings(){console.log("bindings"),this.onRootMove=this.onRootMove.bind(this),this.onRootDown=this.onRootDown.bind(this),this.onRootUp=this.onRootUp.bind(this)}activate(){Object(a.d)(this.targetShapes,this.observer),this.cross.visible=!0;const t=this.renderer.mouse;this.cross.cx=t.x,this.cross.cy=t.y,this.cross.scaleX=this.renderer.imageWidth,this.cross.scaleY=this.renderer.imageHeight,this.cross.draw(),this.renderer.stage.on("pointerdown",this.onRootDown),this.renderer.stage.on("pointermove",this.onRootMove),this.renderer.stage.on("pointerupoutside",this.onRootUp),this.renderer.addEventListener("resize",this.onImageSizeChange)}deactivate(){Object(a.e)(this.targetShapes,this.observer),this.cross.visible=!1;const t=this.tmpShape;t&&(this.renderer.stage.removeChild(t),t.destroy(),this.tmpShape=null),this.renderer.stage.removeListener("pointerdown",this.onRootDown),this.renderer.stage.removeListener("pointermove",this.onRootMove),this.renderer.stage.removeListener("pointerupoutside",this.onRootUp),this.renderer.removeEventListener("resize",this.onImageSizeChange)}emitCreate(){console.log("emitcreate");const t=[...this._shapes].pop();this.targetShapes.set([t]),this.emit("create",t)}emitSelection(){console.log("emitselection"),this.emit("selection",[...this.targetShapes].map(t=>t.id))}emitUpdate(){console.log("emitupdate"),this.dispatchEvent(new Event("update"))}onRootMove(t){const e=t.data.originalEvent;if(2===e.buttons||4===e.buttons)return;const n=this.renderer.getPosition(t.data);n.x===this.cross.cx&&n.y===this.cross.cy||(this.cross.scaleX=this.renderer.imageWidth,this.cross.scaleY=this.renderer.imageHeight,this.cross.cx=n.x,this.cross.cy=n.y,this.cross.draw())}onRootUp(t){console.log("OnRootUp")}getGraphic(t){console.log("graphic");let e=[...this.graphics].find(e=>e.data===t);return e||(e=[...this.graphics].find(e=>e.data.id===t.id)),e}getShape(t){return console.log("shape"),[...this.targetShapes].find(e=>e.id===t)}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(76),a=n(169),s=n(78);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e,n,i){if(null==i&&(i=Object(a.r)(t)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.O)(e),r=Object(a.O)(n);Object(a.b)(t===r,()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`);for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==Object(a.O)(e.slice(t));Object(a.b)(n[t]===e[t]||!s,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?Object(s.toTypedArray)(t,i):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,i)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({pow_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"base","pow"),o=Object(i.a)(e,"exp","pow");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.fc,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({pad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=0){const i=Object(s.a)(t,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},u={x:i};return r.a.runKernel(a.dc,u,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({transpose_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),i.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(t=>{i.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+e)}),n.rank<=1)return n.clone();const o={x:n},u={perm:e};return r.a.runKernel(a.Wc,o,u)}})},,,function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,s,i,o;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({complex_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(t,"real","complex"),o=Object(s.a)(e,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernel(a.z,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({abs_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(s.a)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r.a.runKernel(a.A,t)}{const t={x:e};return r.a.runKernel(a.a,t)}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(99),u=n(74),c=n(79);const l=Object(u.b)({conv2d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(t,"x","conv2d"),f=Object(s.a)(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),i.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+"."),null!=h&&i.b(i.v(u),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`);const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),i.b(o.h(n,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`);const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},v=r.a.runKernel(a.C,y,x);return b?Object(c.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({greaterEqual_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","greaterEqual"),u=Object(i.a)(e,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ob,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({lessEqual_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","lessEqual"),u=Object(i.a)(e,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.zb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(86),o=n(74);const u=Object(o.b)({logicalAnd_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(t,"a","logicalAnd","bool"),o=Object(s.a)(e,"b","logicalAnd","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Eb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({stack_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n=Object(s.b)(t,"tensors","stack","string_or_numeric");i.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&i.b(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const o=n,u={axis:e};return r.a.runKernel(a.cc,o,u)}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"d",(function(){return b}));var r=n(86),a=n(178),s=n(181),i=n(80),o=n(190),u=n(137),c=n(194),l=n(79),d=n(139),h=n(90);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(i.a)(t,Object(d.a)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(h.a)(n,a)),Object(l.a)(n,t.shape)}function m(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Object(u.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(c.a)(t);if("prelu"===e)return Object(o.a)(t,n);if("leakyrelu"===e)return Object(s.a)(t,r);throw new Error(`Unknown fused activation ${e}.`)}const b=(t,e)=>!(t>0)||"linear"===e},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,e,n||a)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function a(t,e){return t>e?1:t<e?-1:0}function s(t,e,n,r,a){return u(t,e,n,r,a,0)}function i(t,e,n,r,a,s){return u(t,e,n,r,a,0,!1,s,!0)}function o(t,e,n,r,a,s){return u(t,e,n,r,a,s,!0)}function u(t,e,n,a,s,i,o=!1,u=!1,h=!1){const p=[];for(let t=0;t<e.length;t++)e[t]>s&&p.push({score:e[t],boxIndex:t,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&p.length>0;){const e=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=c(t,i,m[n]);if(r>=a){u=!0;break}if(e.score=e.score*l(a,f,r),e.score<=s)break}e.suppressBeginIndex=m.length,u||(e.score===n?(m.push(i),b.push(e.score)):e.score>s&&r(p,e,d))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),h&&(x.validOutputs=g),x}function c(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return o}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({clone_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","clone","string_or_numeric")};return r.a.runKernel(a.qb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({log_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","log")};return r.a.runKernel(a.Bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({max_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","max")},o={reductionIndices:e,keepDims:n};return r.a.runKernel(a.Hb,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(169),s=n(122),i=n(135);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=Object(i.a)(t,"float32");return Object(s.a)(e,n)}const n=Object(a.D)(Object(a.O)(t),e);return r.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(76),a=n(169),s=n(122);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=i(t,"float32");return Object(s.a)(e,n)}const n=Object(a.F)(Object(a.O)(t),e);return r.a.makeTensor(n,t,e)}},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({relu_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","relu")};return r.a.runKernel(a.mc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({split_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=0){const i={x:Object(s.a)(t,"x","split")},o={numOrSizeSplits:e,axis:n};return r.a.runKernel(a.Jc,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({step_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n={x:Object(s.a)(t,"x","step")},i={alpha:e};return r.a.runKernel(a.Nc,n,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(75),a=n(169),s=n(115);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(t,null,n,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({unstack_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n=Object(s.a)(t,"x","unstack","string_or_numeric");i.b(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const o={value:n},u={axis:e};return r.a.runKernel(a.Yc,o,u)}})},function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return N})),n.d(e,"c",(function(){return r}));var r,a=n(72),s=n(192),i=n(251);function o(t){return t instanceof a.Tensor?{value:t.clone(),recurse:!1}:Object(i.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class u{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class c extends u{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function l(t){return new m(t)}function d(t){return new b(t)}function h(t,e){return new S(t,e)}function p(t,e=r.FAIL){return new C(t,e)}c.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new k(this,t)}filter(t){return new O(this,t)}map(t){return new w(this,t)}mapAsync(t){return new I(this,t)}serialMapAsync(t){return new I(this,t).serial()}flatmap(t){return new j(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t,e=!0){return new v(this,t,e)}columnMajorBatch(t,e=!0,n=i.f){return this.rowMajorBatch(t,e).map(t=>Object(i.d)(t,n))}concatenate(t,e){return new S(l([this,t]),e)}take(t){return t<0||null==t?this:new x(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new T(this,t)}shuffle(t,e){return new E(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(i.b)(e,o)),done:!1};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: "+t.message,t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.dispose(t.value)}return this.upstream.next()}}class x extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class v extends f{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class O extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.dispose(t.value)}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Map"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const t of e)a.tensor_util.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class I extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=await this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const t of e)a.tensor_util.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class N extends f{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class j extends N{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const t of e)a.tensor_util.isTensorInList(t,r)||t.dispose();return!0}}class S extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class C extends f{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const a=await Object(i.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class T extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new u(e)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class E extends T{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=s.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(79);var u=n(74);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c=Object(u.b)({batchNorm_:function(t,e,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(t,"x","batchNorm"),h=Object(s.a)(e,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),i.b(h.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),i.b(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),i.b(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b={x:function(t){let e;return e=0===t.rank||1===t.rank?Object(o.a)(t,[1,1,1,t.size]):2===t.rank?Object(o.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(d),scale:f,offset:m,mean:h,variance:p},g={varianceEpsilon:l},y=r.a.runKernel(a.ib,b,g);return Object(o.a)(y,d.shape)}})},,function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(2),a=n(12);
/**
 * Common plugin style
 * @copyright CEA-LIST/DIASI/SIALV/LVA (2019)
 * @author CEA-LIST/DIASI/SIALV/LVA <pixano@cea.fr>
 * @license CECILL-C
*/
const s=r.b`
    :host {
        height: 100%;
        display: flex;
        flex-direction: row;
    }
    .drawer {
        background: #333;
        padding: 10px 0px 0px;
        margin: 0;
        flex-direction: column;
        display: flex;
        flex: 0 0 var(--leftPanelWidth);
    }
    .editor {
        position: relative;
        display: flex;
        flex-direction: column;
        flex: 1;
        min-width: 100px;
    }
    .properties-panel {
        flex: 0 0 300px;
        background: var(--theme-color);
        overflow: auto;
        color: var(--font-color);
    }      
    mwc-icon-button,
    mwc-icon-button-toggle {
        color: #6d6d6d;
    }
    mwc-icon-button:hover,
    mwc-icon-button-toggle:hover {
        color: white;
    }
    mwc-icon-button[selected] {
        color: white;
    }
`;
/**
 * Template of plugin page to inherit if you want to create
 * your own plugin.
 * @copyright CEA-LIST/DIASI/SIALV/LVA (2019)
 * @author CEA-LIST/DIASI/SIALV/LVA <pixano@cea.fr>
 * @license CECILL-C
*/class i extends r.a{static get styles(){return s}static get properties(){return{mode:{type:String}}}firstUpdated(){this.dispatchEvent(new Event("ready"))}onActivate(){this.initDisplay&&this.initDisplay(),this.newData()}initDisplay(){const t=Object(a.b)("application").tasks,e=Object(a.b)("application").taskName,n=t.find(t=>t.name===e);this.attributePicker&&n&&this.attributePicker.reloadSchema(n.spec.label_schema)}get info(){return Object(a.b)("application")}get annotations(){return Object(a.a)().annotations}newData(){const t=Object(a.b)("media").info.path;this.element.input=t,this.element.addEventListener("load",()=>{this.refresh()})}_colorFor(t){return this.attributePicker._colorFor(t)}onModeChange(){this.element&&(this.mode=this.element.mode)}get attributePicker(){return this.shadowRoot.querySelector("attribute-picker")}get element(){return this.shadowRoot.getElementById("main")}render(){return r.e`
        <div class="drawer">${this.toolDrawer}</div>
        <div class="editor">${this.editor}</div>
        <div class="properties-panel">${this.propertyPanel}</div>
    `}}customElements.define("template-plugin",i)},function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"d",(function(){return c})),n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f}));var r=n(93),a=n(209);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)("kernelRegistry",()=>new Map),i=Object(a.a)("gradRegistry",()=>new Map);function o(t,e){const n=m(t,e);return s.get(n)}function u(t){return i.get(t)}function c(t){const e=s.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=m(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function d(t){const{kernelName:e}=t;i.has(e)&&Object(r.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),i.set(e,t)}function h(t,e){const n=m(t,e);if(!s.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);s.delete(n)}function p(t){if(!i.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);i.delete(t)}function f(t,e){c(t).forEach(t=>{l(Object.assign({},t,{backendName:e}))})}function m(t,e){return`${e}_${t}`}},function(t,e,n){"use strict";(function(t){n(76);var e=n(210),r=n(93);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e.isBrowser()),a.registerFlag("IS_NODE",()=>void 0!==t&&void 0!==t.versions&&void 0!==t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1)}).call(this,n(257))},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(82),c=n(74);const l=Object(c.b)({maximum_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","maximum"),c=Object(i.a)(e,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Nb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({sigmoid_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","sigmoid")};return r.a.runKernel(a.Ac,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({batchToSpaceND_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const o=Object(s.a)(t,"x","batchToSpaceND"),u=e.reduce((t,e)=>t*e);i.b(o.rank>=1+e.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`),i.b(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),i.b(o.shape[0]%u==0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`);const c={x:o},l={blockShape:e,crops:n};return r.a.runKernel(a.t,c,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74),u=n(79);const c=Object(o.b)({depthwiseConv2d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,o,c="NHWC",l=[1,1],d){const h=Object(s.a)(t,"x","depthwiseConv2d"),p=Object(s.a)(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===f.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),i.b(4===p.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+p.rank+"."),i.b(f.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null!=d&&i.b(i.v(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`);const b={x:f,filter:p},g={strides:n,pad:o,dataFormat:c,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({equal_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","equal"),u=Object(i.a)(e,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.X,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({expandDims_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n=Object(s.a)(t,"x","expandDims","string_or_numeric");i.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const o={input:n},u={dim:e};return r.a.runKernel(a.ab,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({tile_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(t,"x","tile","string_or_numeric");i.b(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const o={x:n},u={reps:e};return r.a.runKernel(a.Tc,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({gather_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=0,i=0){const o={x:Object(s.a)(t,"x","gather"),indices:Object(s.a)(e,"indices","gather","int32")},u={axis:n,batchDims:i};return r.a.runKernel(a.mb,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({logicalNot_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","logicalNot","bool")};return r.a.runKernel(a.Fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({mean_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","mean")},o={axis:e,keepDims:n};return r.a.runKernel(a.Ob,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({spaceToBatchND_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const o=Object(s.a)(t,"x","spaceToBatchND");i.b(o.rank>=1+e.length,()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`),i.b(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),i.b(o.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]==0:t,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const u={x:o},c={blockShape:e,paddings:n};return r.a.runKernel(a.Hc,u,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(75),a=n(169),s=n(74),i=n(79);const o=Object(s.b)({squeeze_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(i.a)(n,Object(a.Q)(n.shape,e).newShape)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return a})),n.d(e,"validateInput",(function(){return s})),n.d(e,"calculateShapes",(function(){return i}));var r=n(169);function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${e.shape}, shape: ${t}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(t.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(s+" update.rank != "+(a+t.length-r));for(let t=0;t<a;++t)if(n.shape[t]!==e.shape[t])throw new Error(s+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-a;++e)if(n.shape[e+a]!==t[e+r])throw new Error(s+` updates.shape[${e+a}] (${n.shape[e+a]}) != shape[${e+a}] (${t[e+a]})`)}function s(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(0===t.size)throw new Error("Updates specified for empty output. updates shape: "+t.shape)}a(n,e,t)}function i(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,i=n.length;let o=1;for(let t=s;t<i;++t)o*=n[t];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(e.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},function(t,e,n){"use strict";n.r(e),n.d(e,"assertParamsValid",(function(){return a})),n.d(e,"maskToAxes",(function(){return s})),n.d(e,"computeOutShape",(function(){return i})),n.d(e,"stridesWithElidedDims",(function(){return o})),n.d(e,"getNormalizedAxes",(function(){return l})),n.d(e,"startIndicesWithElidedDims",(function(){return d})),n.d(e,"stopIndicesWithElidedDims",(function(){return h})),n.d(e,"stridesForAxis",(function(){return p})),n.d(e,"startForAxis",(function(){return f})),n.d(e,"stopForAxis",(function(){return m})),n.d(e,"isSliceContinous",(function(){return b})),n.d(e,"computeFlatOffset",(function(){return g})),n.d(e,"parseSliceParams",(function(){return y})),n.d(e,"sliceInfo",(function(){return x}));var r=n(169);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e,n){const a=t.shape.length;r.b(a===e.length,()=>`Error in slice${a}D: Length of begin ${e} must match the rank of the array (${a}).`),r.b(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)r.b(e[s]+n[s]<=t.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function s(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function i(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function o(t,e,n,r){const a=[...t];for(let t=a.length;t<r.length;t++)a.push(1);for(let t=0;t<n;t++)0===t?a[e]=1:(a.splice(e,0,1),a.pop());return a}function u(t,e,n){return n<=t?n:n-(e-1)}function c(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function l(t,e,n,r,a,s,i,u,c){const l=t.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;b=d(i,c,l,r,t),g=h(u,c,l,a,t),y=o(s,c,l,t)}else for(let e=0;e<l;e++)b[e]=f(i,r,s,t,e,c),g[e]=m(u,a,s,t,e,c),y[e]=p(s,e,c);return{begin:b,end:g,strides:y}}function d(t,e,n,r,a){const s=[...a],i=c(n,e);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=u(e,n,a);let o=r[i];t&1<<i&&(o=0),s[a]=o}return s}function h(t,e,n,a,s){const i=[...s],o=c(n,e);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(e,n,r);let o=a[s];t&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let t=0;t<i.length;t++){const e=s[t];i[t]<0&&(i[t]+=e),i[t]=r.i(0,i[t],s[t])}return i}function p(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function f(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=r.i(0,o,c-1),o}function m(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function g(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function y(t,e,n){let a;const s=t.shape.length;let i;return a="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),a.forEach(t=>{r.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map((e,n)=>e>=0?e:(r.b(-1===e,()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`),t.shape[n]-a[n])),[a,i]}function x(t,e,n,r,a,o,u,c,d){let h=e.slice(),p=n.slice(),f=r;null==r&&(f=new Array(h.length));const m=s(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==c)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const b=t.length-h.length,g=s(c),y=t.slice();g.forEach(t=>{h[t]=0,p[t]=1,y.splice(t,0,1)});const{begin:x,end:v,strides:O}=l(y,m,b,h,p,f,a,o,u);h=x,p=v,f=O;const w=s(d);w.forEach(t=>{p[t]=h[t]+1,f[t]=1});const k=i(h,p,f),I=k.filter((t,e)=>-1===w.indexOf(e));return{nonStrided:f.every(t=>1===t),$begin:h,$end:p,$strides:f,size:k,newShape:y,outShape:I}}},function(t,e,n){"use strict";n.d(e,"c",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}));
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={};function a(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};r[t]=n}function s(t){return r[t]}function i(t){delete r[t]}},function(t,e,n){"use strict";var r=n(2),a=(n(119),n(206),n(254),n(256),n(252),n(260),n(261),function(t,e,n,r){var a,s=arguments.length,i=s<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var o=t.length-1;o>=0;o--)(a=t[o])&&(i=(s<3?a(i):s>3?a(e,n,i):a(e,n))||i);return s>3&&i&&Object.defineProperty(e,n,i),i});let s=class extends r.a{constructor(){super(),this.shortcuts=[["ALT","Switch create/update mode"],["CTRL + [0-9]","Select category by index"],["TAB","Navigate through objects"],["SHIFT + Tab","Navigate through objects (inverse)"],["SHIFT + Click","Multiple selection"],["CTRL + z","Undo"],["CTRL + SHIFT + z","Redo"],["CTRL + s","Save"]],this.showDetail=!1,this.schema={},this.value={category:"",options:{}},this.mem="",this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this)}static get styles(){return[r.b`
        :host {
          -webkit-touch-callout: none; /* iOS Safari */
            -webkit-user-select: none; /* Safari */
             -khtml-user-select: none; /* Konqueror HTML */
               -moz-user-select: none; /* Old versions of Firefox */
                -ms-user-select: none; /* Internet Explorer/Edge */
                    user-select: none; /* Non-prefixed version, currently
                                          supported by Chrome, Opera and Firefox */
        }
        h3 {
          font-size: 14px;
          margin-left: 10px;
        }
        .category {
          height: 40px;
          display: flex;
          align-items: center;
          padding-left: 10px;
        }
        .category:hover {

        }
        .selected {

        }
        span.step {
          background: red;
          border-radius: 0.8em;
         -moz-border-radius: 0.8em;
         -webkit-border-radius: 0.8em;
         color: #ffffff;
         display: inline-block;
         line-height: 1.6em;
         margin-right: 15px;
         text-align: center;
         width: 1.6em;
         margin-left: 10px;
        }
        .category > p {
          margin: 0;
          padding-left: 10px;
        }
        .shortcut {
          position: absolute;
          right: 0px;
          z-index: 1;
        }
        #shortcut-table {
          font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
          border-collapse: collapse;
          width: 100%;
        }

        #shortcut-table td, #shortcut-table th {
          border: 1px solid #ddd;
          padding: 8px;
        }

        #shortcut-table tr:nth-child(even){background-color: #f2f2f2;}

        #shortcut-table tr:hover {background-color: #ddd;}

        #shortcut-table th {
          padding-top: 12px;
          padding-bottom: 12px;
          text-align: left;
          background-color: #4CAF50;
          color: white;
        }
        mwc-select {
            width: 100%;
        }
        mwc-formfield {
          margin: auto;
          width: 70%;
          display: flex;
        }
        `]}get selectedCategory(){return this.schema.category.find(t=>t.name===this.value.category)}getDefaultAttributesForCategory(t,e){var n,r;let a=null===(n=t.category)||void 0===n?void 0:n.find(t=>t.name===e);if(!a&&(null===(r=t.category)||void 0===r?void 0:r.length)&&(a=t.category[0]),a&&a.properties){const t={};return a.properties.forEach(e=>{t[e.name]=e.default}),t}return{}}onKeyDown(t){t.ctrlKey&&t.preventDefault()}onKeyUp(t){const e=t.code.replace("Digit","").replace("Numpad","");if(Number(e)>=0&&Number(e)<=9&&t.ctrlKey&&(t.preventDefault(),this.mem+=e),"Control"===t.key&&""!==this.mem){t.preventDefault();const e=this.schema.category[Number(this.mem)];e&&this.setCategory(e.name),this.mem=""}}connectedCallback(){super.connectedCallback(),window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)}openShortcuts(){this.shadowRoot.querySelector("mwc-dialog").open=!0}getValue(t){return t.composedPath()[0].value}_getList(){try{return this.schema.category.map(t=>t.name)}catch(t){return[]}}_colorFor(t){const e=this.schema.category.find(e=>e.name===t);return e&&e.color||"rgb(0,0,0)"}get defaultValue(){const t=this.getDefaultAttributesForCategory(this.schema,this.value.category);return{category:this.value.category,options:t}}setCategory(t){const e=this.getDefaultAttributesForCategory(this.schema,t);this.value={category:t,options:e},this._notifyUpdate()}setAttributes(t){if(t){t.options=t.options||{};const e=this.getDefaultAttributesForCategory(this.schema,t.category);Object.keys(e).forEach(n=>{t.options.hasOwnProperty(n)?e[n]=JSON.parse(JSON.stringify(t.options[n])):e[n]=""}),this.value={category:t.category,options:e}}}setAttributesIdx(t){if(void 0!==t)this.value={category:this.schema.category.find(e=>e.idx===t).name,options:{}};else{const t=this.getDefaultAttributesForCategory(this.schema,this.schema.default);this.value={category:this.schema.default,options:t}}}get getSchema(){return this.schema}reloadSchema(t){this.schema=t;const e=this.getDefaultAttributesForCategory(t,t.default);this.value={category:t.default,options:e}}_notifyUpdate(){this.dispatchEvent(new Event("update"))}get shortcutsDialog(){return r.e`
        <mwc-dialog>
			<h3>Shortcut list</h3>
			<div>
				<table id="shortcut-table">
					<tr>
						<th>Shortcut</th>
						<th>Description</th>
					</tr>
					${this.shortcuts.map(([t,e])=>r.e`<tr><td>${t}</td><td>${e}</td></tr>`)}
				</table>
			</div>
			<mwc-button
				slot="secondaryAction"
				dialogAction="cancel">OK</mwc-button>
        </mwc-dialog>
        `}firstUpdated(){this.reloadSchema(this.schema)}htmlProp(t){if("dropdown"===t.type)return r.e`
				<mwc-select label="${t.name}" @selected=${e=>{const n=e.detail.index;this.value.options[t.name]!==t.enum[n]&&(this.value.options[t.name]=t.enum[n],this._notifyUpdate())}}>
					${t.enum.map(e=>r.e`<mwc-list-item value="${e}" ?selected=${this.value.options[t.name]===e}>${e}</mwc-list-item>`)}
				</mwc-select>
			`;if("checkbox"===t.type){const e=JSON.parse(JSON.stringify(this.value.options[t.name]).toLowerCase());return r.e`
				<mwc-formfield label="${t.name}">
				<mwc-checkbox ?checked=${e} @change=${n=>{const r=n.composedPath()[0];e!==r.checked&&(this.value.options[t.name]=!e,this.value=Object.assign({},this.value),this._notifyUpdate())}}></mwc-checkbox>
				</mwc-formfield>
			`}if("textfield"===t.type){const e=this.value.options[t.name];return r.e`
				<mwc-textfield label="${t.name}" value=${e} @change=${e=>{this.value.options[t.name]=this.getValue(e),this.value=Object.assign({},this.value),this._notifyUpdate()}}></mwc-textfield>
			`}return r.e``}get renderDetail(){var t;return r.e`
			<div id="updateEditor" style="width: 100%;" ?hidden=${!this.showDetail}>
				<h3><label>Selected label</label></h3>
				${null===(t=this.schema.category)||void 0===t?void 0:t.map((t,e)=>r.e`
						<div class="category ${t.name===this.value.category?"selected":""}" id=${t.name} @click=${()=>this.setCategory(t.name)}>
							<span class="step" .style="background: ${this._colorFor(t.name)}">${e}</span><p>${t.name}</p>
						</div>
						${t.properties&&t.name===this.value.category?r.e`${t.properties.map(t=>this.htmlProp(t))}`:r.e``}
					`)}
			</div>`}get renderSimple(){var t;return r.e`
			<div ?hidden=${this.showDetail}>
				<h3><label>Label for creation</label></h3>
				${null===(t=this.schema.category)||void 0===t?void 0:t.map((t,e)=>r.e`
						<div class="category ${t.name===this.value.category?"selected":""}" id=${t.name} @click=${()=>this.setCategory(t.name)}>
							<span class="step" .style="background: ${this._colorFor(t.name)}">${e}</span><p>${t.name}</p>
						</div>`)}
			</div>
		`}render(){return r.e`
			${this.shortcutsDialog}
			<mwc-icon-button class="shortcut" icon="keyboard" @click=${this.openShortcuts}></mwc-icon-button>
			${this.renderDetail}
			${this.renderSimple}
		`}};a([Object(r.g)({type:Array})],s.prototype,"shortcuts",void 0),a([Object(r.g)({type:Boolean})],s.prototype,"showDetail",void 0),a([Object(r.g)({type:Object})],s.prototype,"schema",void 0),a([Object(r.g)({type:Object})],s.prototype,"value",void 0),s=a([Object(r.c)("attribute-picker")],s)},function(t,e,n){"use strict";var r=n(11),a=n(313),s=n(2),i=(n(263),n(165)),o={ICON_BUTTON_ON:"mdc-icon-button--on",ROOT:"mdc-icon-button"},u={ARIA_LABEL:"aria-label",ARIA_PRESSED:"aria-pressed",DATA_ARIA_LABEL_OFF:"data-aria-label-off",DATA_ARIA_LABEL_ON:"data-aria-label-on",CHANGE_EVENT:"MDCIconButtonToggle:change"},c=function(t){function e(n){var a=t.call(this,Object(r.a)(Object(r.a)({},e.defaultAdapter),n))||this;return a.hasToggledAriaLabel=!1,a}return Object(r.c)(e,t),Object.defineProperty(e,"cssClasses",{get:function(){return o},enumerable:!0,configurable:!0}),Object.defineProperty(e,"strings",{get:function(){return u},enumerable:!0,configurable:!0}),Object.defineProperty(e,"defaultAdapter",{get:function(){return{addClass:function(){},hasClass:function(){return!1},notifyChange:function(){},removeClass:function(){},getAttr:function(){return null},setAttr:function(){}}},enumerable:!0,configurable:!0}),e.prototype.init=function(){var t=this.adapter.getAttr(u.DATA_ARIA_LABEL_ON),e=this.adapter.getAttr(u.DATA_ARIA_LABEL_OFF);if(t&&e){if(null!==this.adapter.getAttr(u.ARIA_PRESSED))throw new Error("MDCIconButtonToggleFoundation: Button should not set `aria-pressed` if it has a toggled aria label.");this.hasToggledAriaLabel=!0}else this.adapter.setAttr(u.ARIA_PRESSED,String(this.isOn()))},e.prototype.handleClick=function(){this.toggle(),this.adapter.notifyChange({isOn:this.isOn()})},e.prototype.isOn=function(){return this.adapter.hasClass(o.ICON_BUTTON_ON)},e.prototype.toggle=function(t){if(void 0===t&&(t=!this.isOn()),t?this.adapter.addClass(o.ICON_BUTTON_ON):this.adapter.removeClass(o.ICON_BUTTON_ON),this.hasToggledAriaLabel){var e=t?this.adapter.getAttr(u.DATA_ARIA_LABEL_ON):this.adapter.getAttr(u.DATA_ARIA_LABEL_OFF);this.adapter.setAttr(u.ARIA_LABEL,e||"")}else this.adapter.setAttr(u.ARIA_PRESSED,""+t)},e}(i.a),l=n(203),d=n(205),h=n(258);
/**
 * @license
 * Copyright 2019 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class p extends l.a{constructor(){super(...arguments),this.mdcFoundationClass=c,this.label="",this.disabled=!1,this.onIcon="",this.offIcon="",this.on=!1,this.shouldRenderRipple=!1,this.rippleHandlers=new h.a(()=>(this.shouldRenderRipple=!0,this.ripple))}createAdapter(){return Object.assign(Object.assign({},Object(l.b)(this.mdcRoot)),{getAttr:t=>this.mdcRoot.getAttribute(t),setAttr:(t,e)=>{this.mdcRoot.setAttribute(t,e)},notifyChange:t=>{this.dispatchEvent(new CustomEvent("MDCIconButtonToggle:change",{detail:t,bubbles:!0}))}})}handleClick(){this.on=!this.on,this.mdcFoundation.handleClick()}focus(){this.rippleHandlers.startFocus(),this.mdcRoot.focus()}blur(){this.rippleHandlers.endFocus(),this.mdcRoot.blur()}renderRipple(){return this.shouldRenderRipple?s.e`
            <mwc-ripple
                .disabled="${this.disabled}"
                unbounded>
            </mwc-ripple>`:""}render(){return s.e`
      <button
          class="mdc-icon-button"
          @click="${this.handleClick}"
          aria-label="${this.label}"
          ?disabled="${this.disabled}"
          @focus="${this.handleRippleFocus}"
          @blur="${this.handleRippleBlur}"
          @mousedown="${this.handleRippleMouseDown}"
          @mouseenter="${this.handleRippleMouseEnter}"
          @mouseleave="${this.handleRippleMouseLeave}"
          @touchstart="${this.handleRippleTouchStart}"
          @touchend="${this.handleRippleDeactivate}"
          @touchcancel="${this.handleRippleDeactivate}">
        ${this.renderRipple()}
        <span class="mdc-icon-button__icon">
          <slot name="offIcon">
            <i class="material-icons">${this.offIcon}</i>
          </slot>
        </span>
        <span class="mdc-icon-button__icon mdc-icon-button__icon--on">
          <slot name="onIcon">
            <i class="material-icons">${this.onIcon}</i>
          </slot>
        </span>
      </button>`}handleRippleMouseDown(t){const e=()=>{window.removeEventListener("mouseup",e),this.handleRippleDeactivate()};window.addEventListener("mouseup",e),this.rippleHandlers.startPress(t)}handleRippleTouchStart(t){this.rippleHandlers.startPress(t)}handleRippleDeactivate(){this.rippleHandlers.endPress()}handleRippleMouseEnter(){this.rippleHandlers.startHover()}handleRippleMouseLeave(){this.rippleHandlers.endHover()}handleRippleFocus(){this.rippleHandlers.startFocus()}handleRippleBlur(){this.rippleHandlers.endFocus()}}Object(r.b)([Object(s.h)(".mdc-icon-button")],p.prototype,"mdcRoot",void 0),Object(r.b)([Object(s.g)({type:String})],p.prototype,"label",void 0),Object(r.b)([Object(s.g)({type:Boolean,reflect:!0})],p.prototype,"disabled",void 0),Object(r.b)([Object(s.g)({type:String})],p.prototype,"onIcon",void 0),Object(r.b)([Object(s.g)({type:String})],p.prototype,"offIcon",void 0),Object(r.b)([Object(s.g)({type:Boolean,reflect:!0}),Object(d.a)((function(t){this.mdcFoundation.toggle(t)}))],p.prototype,"on",void 0),Object(r.b)([Object(s.i)("mwc-ripple")],p.prototype,"ripple",void 0),Object(r.b)([Object(s.f)()],p.prototype,"shouldRenderRipple",void 0),Object(r.b)([Object(s.d)({passive:!0})],p.prototype,"handleRippleMouseDown",null),Object(r.b)([Object(s.d)({passive:!0})],p.prototype,"handleRippleTouchStart",null);
/**
@license
Copyright 2019 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
let f=class extends p{};f.styles=a.a,f=Object(r.b)([Object(s.c)("mwc-icon-button-toggle")],f)},,function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(2),a=(n(119),n(164),n(168),n(120)),s=n(12),i=n(13),o=(n(163),n(145));
/**
 * Template plugin that handles shape instances
 * @copyright CEA-LIST/DIASI/SIALV/LVA (2019)
 * @author CEA-LIST/DIASI/SIALV/LVA <pixano@cea.fr>
 * @license CECILL-C
*/
class u extends o.a{static get properties(){return{...super.properties,selectedIds:{type:Array}}}constructor(){super(),this.mode="create",this.selectedIds=[]}onAttributeChanged(){console.log("On attribute changed");const t=this.attributePicker.value;this.selectedIds.forEach(e=>{const n=[...this.element.shapes].find(t=>t.id===e);n.options=n.options||{},Object.keys(t).forEach(e=>{n[e]=JSON.parse(JSON.stringify(t[e]))}),n.color=this._colorFor(n.category),this.collect()})}refresh(){console.log("Refresh"),this.element&&(this.element.shapes=JSON.parse(JSON.stringify(this.annotations.map(t=>({...t,color:this._colorFor(t.category)})))))}onSelection(t){console.log("On selection"),this.selectedIds=t.detail,this.updateDisplayOfSelectedProperties()}updateDisplayOfSelectedProperties(){if(console.log("updated selected prop"),this.selectedIds&&this.selectedIds.length){const t=this.annotations.filter(t=>this.selectedIds.includes(t.id)),e=Object(a.commonJson)(t);this.attributePicker.setAttributes(e)}}onCreate(t){console.log("On create");const e=t.detail;e.id=Math.random().toString(36),Object.entries(this.attributePicker.defaultValue).forEach(([t,n])=>{e[t]=JSON.parse(JSON.stringify(n))}),this.isSequence&&(e.timestamp=this.targetFrameIdx),e.color=this._colorFor(e.category),this.collect()}onUpdate(){console.log("On update"),this.collect()}onDelete(){console.log("On delete"),this.collect()}collect(){console.log("collect");const t=[...this.element.shapes].map(({color:t,...e})=>e);s.c.dispatch(Object(i.g)({annotations:t}))}get propertyPanel(){return r.e`
        <attribute-picker ?showDetail=${this.selectedIds.length}
                            @update=${this.onAttributeChanged}></attribute-picker>
    `}get toolDrawer(){return r.e`
          <mwc-icon-button ?selected=${"edit"===this.mode}
                            title="Select/Edit shape"
                            icon="navigation"
                            @click="${()=>this.mode="edit"}">
          </mwc-icon-button>
          <mwc-icon-button ?selected=${"create"===this.mode}
                            icon="add_circle_outline"
                            title="Create"
                            @click="${()=>this.mode="create"}">
          </mwc-icon-button>
          <mwc-icon-button icon="tonality"
						   title="Hide/Show labels"
						   @click="${()=>this.element.toggleLabels()}">
          </mwc-icon-button>
      `}}customElements.define("template-plugin-instance",u)},,,function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e){if(t.length!==e.length)throw new Error("Array sizes must match to be shuffled together First array length was "+t.length+"Second array length was "+e.length);let n,r,a=t.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=t[a],r=e[a],t[a]=t[s],e[a]=e[s],t[s]=n,e[s]=r}function s(t,e,n){return Math.max(t,Math.min(e,n))}function i(t){return t%2==0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function u(t,e){const n=Math.random();return e*n+(1-n)*t}function c(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function l(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function d(t,e,n=""){l(b(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function h(t){l(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function p(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||A(t)&&!n)for(let r=0;r<t.length;++r)p(t[r],e,n);else e.push(t);return e}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function m(t){return 0===t.length}function b(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function g(t){return t%1==0}function y(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function x(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function v(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function O(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function w(t,e=(t=>0),n){return new Promise((r,a)=>{let s=0;const i=()=>{if(t())return void r();s++;const o=e(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function k(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[r]=e/n,a}function I(t,e){const n=e.length;return l((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+t),l(t.every(t=>g(t)),()=>"All values in axis param must be integers but got axis "+t),t.map(t=>t<0?n+t:t)}function N(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||a?null:I(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=s){if(s[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==s[i]||s[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),s[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function j(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type "+t);n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type "+t);n=new Array(e)}return n}function C(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function T(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function E(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function A(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function $(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype "+t)}function R(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function _(t){return"string"==typeof t||t instanceof String}function D(t){return"boolean"==typeof t}function F(t){return"number"==typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":_(t)?"string":D(t)?"bool":"float32"}function L(t){return!!(t&&t.constructor&&t.call&&t.apply)}function z(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function P(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return function t(e,n,r){const a=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)a[n]=r[e+n]}else{const s=n[0],i=n.slice(1),o=i.reduce((t,e)=>t*e);for(let n=0;n<s;n++)a[n]=t(e+n*o,i,r)}return a}(0,t,e)}function W(t,e){const n=V(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function V(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type "+e)}function U(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type "+e)}function G(t){t.forEach(e=>{l(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function H(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function q(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function K(t){return t&&t.then&&"function"==typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"N",(function(){return a})),n.d(e,"i",(function(){return s})),n.d(e,"H",(function(){return i})),n.d(e,"R",(function(){return o})),n.d(e,"J",(function(){return u})),n.d(e,"l",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"O",(function(){return f})),n.d(e,"y",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"v",(function(){return g})),n.d(e,"S",(function(){return y})),n.d(e,"P",(function(){return x})),n.d(e,"k",(function(){return v})),n.d(e,"L",(function(){return O})),n.d(e,"K",(function(){return w})),n.d(e,"s",(function(){return k})),n.d(e,"I",(function(){return I})),n.d(e,"Q",(function(){return N})),n.d(e,"o",(function(){return j})),n.d(e,"n",(function(){return S})),n.d(e,"h",(function(){return C})),n.d(e,"B",(function(){return T})),n.d(e,"p",(function(){return E})),n.d(e,"A",(function(){return A})),n.d(e,"g",(function(){return $})),n.d(e,"f",(function(){return R})),n.d(e,"z",(function(){return _})),n.d(e,"t",(function(){return D})),n.d(e,"w",(function(){return F})),n.d(e,"r",(function(){return M})),n.d(e,"u",(function(){return L})),n.d(e,"G",(function(){return z})),n.d(e,"j",(function(){return P})),n.d(e,"T",(function(){return B})),n.d(e,"D",(function(){return W})),n.d(e,"F",(function(){return V})),n.d(e,"E",(function(){return U})),n.d(e,"c",(function(){return G})),n.d(e,"C",(function(){return H})),n.d(e,"q",(function(){return q})),n.d(e,"x",(function(){return K}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{refCount(t){return s("refCount")}incRef(t){return s("incRef")}timerAvailable(){return!0}time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t,e){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(75),a=n(115);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n){const s=Object(r.c)(t,n);return Object(a.a)(t,e,s,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({floorDiv_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","floorDiv"),o=Object(i.a)(e,"b","floorDiv");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.gb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(76),a=n(73);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n){const s={shape:t,value:e,dtype:n};return r.a.runKernel(a.db,{},s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(82),u=n(99),c=n(74),l=n(79);const d=Object(c.b)({avgPool_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,c,d){const h=Object(s.a)(t,"x","avgPool","float32");i.b(u.h(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`),null!=d&&i.b(i.v(c),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`);const m={x:p},b={filterSize:e,strides:n,pad:c,dimRoundingMode:d};let g=r.a.runKernel(a.o,m,b);return g=Object(o.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(131),o=n(74),u=n(79);const c=Object(o.b)({broadcastTo_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(s.a)(t,"broadcastTo","x");const o=n.shape;if(e.some(t=>!(t>0)||t%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(u.a)(n,t)}const c=n.shape,l=Array.from(e);for(let t=e.length-1;t>=0;t--)if(c[t]===e[t])l[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(i.a)(n);const d={x:n},h={reps:l};return r.a.runKernel(a.Tc,d,h)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({cos_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","cos")};return r.a.runKernel(a.I,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({cumsum_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0,n=!1,i=!1){const o={x:Object(s.a)(t,"x","cumsum")},u={axis:e,exclusive:n,reverse:i};return r.a.runKernel(a.L,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({elu_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","elu")};return r.a.runKernel(a.V,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({floor_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","floor")};return r.a.runKernel(a.fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({imag_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={input:Object(s.a)(t,"input","imag")};return r.a.runKernel(a.rb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({leakyRelu_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=.2){const n={x:Object(s.a)(t,"x","leakyRelu")},i={alpha:e};return r.a.runKernel(a.xb,n,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({less_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","less"),u=Object(i.a)(e,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.yb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n(75),a=n(169),s=n(89),i=n(105),o=n(109),u=n(132),c=n(133),l=n(74),d=n(79),h=n(84),p=n(90);const f=Object(l.b)({logSumExp_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),x=Object(u.a)(y),v=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const t=Object(i.e)(v.shape,f);return Object(d.a)(v,t)}return v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(86),o=n(74);const u=Object(o.b)({logicalOr_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(t,"a","logicalOr","bool"),o=Object(s.a)(e,"b","logicalOr","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Gb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(99),u=n(74),c=n(79);const l=Object(u.b)({maxPool_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,u,l){const d=Object(s.a)(t,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`),i.b(o.h(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=l&&i.b(i.v(u),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const f={x:h},m={filterSize:e,strides:n,pad:u,dimRoundingMode:l},b=r.a.runKernel(a.Ib,f,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({min_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","min")},o={axis:e,keepDims:n};return r.a.runKernel(a.Pb,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(82),c=n(74);const l=Object(c.b)({minimum_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","minimum"),c=Object(i.a)(e,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Qb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({notEqual_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","notEqual"),u=Object(i.a)(e,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Zb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({oneHot_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=1,i=0){if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);const o={indices:Object(s.a)(t,"indices","oneHot","int32")},u={depth:e,onValue:n,offValue:i};return r.a.runKernel(a.ac,o,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({prelu_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n={x:Object(s.a)(t,"x","prelu"),alpha:Object(s.a)(e,"alpha","prelu")};return r.a.runKernel(a.gc,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}));var r=n(192);n(235);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class a{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class s{constructor(t,e,n,s){this.alpha=t,this.beta=1/e,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-s+Math.log(s)),a=this.randu(),a<e||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class i{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(t,e,n){var r=n(333),a=n(334),s=n(335),i=n(336),o=n(337),u=n(338),c=n(339);c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,t.exports=c},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({real_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={input:Object(s.a)(t,"input","real")};return r.a.runKernel(a.jc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({relu6_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","relu6")};return r.a.runKernel(a.nc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(169),i=n(74);const o=Object(i.b)({fft_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){Object(s.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r.a.runKernel(a.cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(169),i=n(74);const o=Object(i.b)({ifft_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){Object(s.b)("complex64"===t.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return r.a.runKernel(a.pb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n(169),a=n(122),s=n(98),i=n(180),o=n(74),u=n(193),c=n(79),l=n(96),d=n(138),h=n(135),p=n(87),f=n(195);const m=Object(o.b)({rfft_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){Object(r.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got "+t.dtype);let n=t.shape[t.shape.length-1];const o=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(s.a)([t,Object(h.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,v=Object(u.a)(y),O=Object(i.a)(y),w=Object(d.a)(v,[x,n-x],v.shape.length-1),k=Object(d.a)(O,[x,n-x],O.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(c.a)(Object(a.a)(w[0],k[0]),I)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(86),u=n(74);const c=Object(u.b)({squaredDifference_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","squaredDifference"),u=Object(i.a)(e,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Mc,c,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({unsortedSegmentSum_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const o=Object(s.a)(t,"x","unsortedSegmentSum"),u=Object(s.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(n),()=>"numSegments must be of dtype int");const c={x:o,segmentIds:u},l={numSegments:n};return r.a.runKernel(a.Zc,c,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return b}));var r=n(75),a=n(169),s=n(123),i=n(105),o=n(133),u=n(186),c=n(74),l=n(116),d=n(79),h=n(85),p=n(104),f=n(91),m=n(90);const b=Object(c.b)({norm_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e="euclidean",n=null,c=!1){const b=function t(e,n,r=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===r)return t(Object(d.a)(e,[-1]),n,r);if(1===e.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return Object(m.a)(Object(s.a)(e),r);if(n===1/0)return Object(o.a)(Object(s.a)(e),r);if(n===-1/0)return Object(u.a)(Object(s.a)(e),r);if("euclidean"===n||2===n)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(h.a)(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return Object(o.a)(Object(m.a)(Object(s.a)(e),r[0]),r[1]-1);if(n===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(e),r[1]),r[0]);if(n===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(e),r[1]),r[0]);if("fro"===n||"euclidean"===n)return Object(p.a)(Object(m.a)(Object(f.a)(e),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(t=Object(r.a)(t,"x","norm"),e,n);let g=b.shape;if(c){const e=Object(a.I)(n,t.shape);g=i.e(b.shape,e)}return Object(d.a)(b,g)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"GraphModel",(function(){return nn})),n.d(e,"loadGraphModel",(function(){return rn})),n.d(e,"deregisterOp",(function(){return o.a})),n.d(e,"registerOp",(function(){return o.c})),n.d(e,"version_converter",(function(){return an}));var r=n(72),a=n(311),s=n(92);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class i{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(s.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(s.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(a.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(a.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(a.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(a.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(a.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(a.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(a.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(a.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(a.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(a.d)(this.node.rawAttrs,t,e)}return e}}var o=n(162),u=n(89),c=n(272),l=n(232),d=n(80),h=n(83),p=n(225),f=n(172),m=n(84),b=n(187),g=n(148),y=n(116),x=n(198);var v=n(123),O=n(270),w=n(271),k=n(273),I=n(274),N=n(275),j=n(217),S=n(276),C=n(279),T=n(122),E=n(176),A=n(222),$=n(178),R=n(284),_=n(109),D=n(285),F=n(179),M=n(132),L=n(228),z=n(180),P=n(94),B=n(296),W=n(193),V=n(137),U=n(297),G=n(239),H=n(149),q=n(241),K=n(299),X=n(242),Y=n(229),J=n(104),Z=n(91),Q=n(218),tt=n(302),et=n(280),nt=n(194),rt=n(238),at=n(234),st=n(181),it=n(190);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ot(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){r.util.assert(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let a=0;a<t.length;a++){const s=t[a],i=e[a];r.util.assert(s<0||i<0||s===i,()=>n+` Shapes ${t} and ${e} must match`)}}}function ut(t){return"number"!=typeof t&&!t.some(t=>t<0)}function ct(t,e,n){let r=lt(t,n);const a=!ut(r);if(a&&0===e.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&e.forEach(t=>{r=lt(t.shape,r)}),!ut(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function lt(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const a=t[r],s=e[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=a>=0?a:s}return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dt{constructor(t,e,n,a,s,i,o){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Object(r.scalar)(0),Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),ot(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Object(r.keep)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(r.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return ot(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(r.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(r.tensor)([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return ot(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(r.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(r.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const a=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:e.size/n,i=[];Object(r.tidy)(()=>{e=Object(r.reshape)(e,[1,n,s]);for(let n=0;n<t.length;++n){const o=[0,0===n?0:a[n-1],0],u=[1,t[n],s];i[n]=Object(r.reshape)(Object(r.slice)(e,o,u),this.elementShape)}return i});const o=[];for(let e=0;e<t.length;e++)o[e]=e;this.writeMany(o,i)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ht{constructor(t,e,n,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);ot(e,t.shape,"TensorList shape mismatch: "),Object(r.keep)(t)}),this.idTensor=Object(r.scalar)(0),this.maxNumElements=a,Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ht([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ot(t,this.elementShape,"TensorList shape mismatch: ");const a=ct(this.elementShape,this.tensors,t);return Object(r.tidy)(()=>{const t=this.tensors.map(t=>Object(r.reshape)(t,a));return Object(r.stack)(t,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ct(this.elementShape,this.tensors,t),a=this.tensors.pop();return ot(a.shape,t,"TensorList shape mismatch: "),Object(r.reshape)(a,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(ot(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(r.keep)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+t);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);ot(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=ct(this.elementShape,this.tensors,e);return Object(r.reshape)(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);ot(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(r.keep)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);ot(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const a=ct(this.elementShape,this.tensors,n);return 0===t.length?Object(r.tensor)([],[0].concat(a)):Object(r.tidy)(()=>{const e=t.map(t=>Object(r.reshape)(this.tensors[t],a));return Object(r.stack)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);ot(this.elementShape,e,"TensorList shape mismatch: ");const n=ct(this.elementShape,this.tensors,e);return 0===this.size()?Object(r.tensor)([],[0].concat(n)):Object(r.tidy)(()=>{const t=this.tensors.map(t=>Object(r.reshape)(t,n));return Object(r.concat)(t,0)})}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pt=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(s.d)("thenBranch",t,e,n),a=Object(s.d)("elseBranch",t,e,n),i=Object(s.d)("cond",t,e,n),o=Object(s.d)("args",t,e,n);return(await i.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(s.d)("body",t,e,n),a=Object(s.d)("cond",t,e,n),i=Object(s.d)("args",t,e,n),o=await n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),u=i.map(t=>t.id);let c=await o[0].data();o.forEach(t=>{t.kept||-1!==u.indexOf(t.id)||t.dispose()});let l=i;for(;c[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==u.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach(t=>{t.kept||-1!==u.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":{const r=Object(s.d)("pred",t,e,n);return[Object(s.a)(r)]}case"Switch":{const r=Object(s.d)("pred",t,e,n);let a=Object(s.d)("data",t,e,n);return a.kept||(a=Object(s.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==Object(s.e)(t,e,n));if(r){const t=Object(s.e)(r,e,n);return[Object(s.a)(t)]}return}case"Enter":{const r=Object(s.d)("frameName",t,e,n),a=Object(s.d)("tensor",t,e,n);return n.enterFrame(r),[Object(s.a)(a)]}case"Exit":{const r=Object(s.d)("tensor",t,e,n);return n.exitFrame(),[Object(s.a)(r)]}case"NextIteration":{const r=Object(s.d)("tensor",t,e,n);return n.nextIteration(),[Object(s.a)(r)]}case"TensorArrayV3":{const a=Object(s.d)("size",t,e,n),i=Object(s.d)("dtype",t,e,n),o=Object(s.d)("elementShape",t,e,n),u=Object(s.d)("dynamicSize",t,e,n),c=Object(s.d)("clearAfterRead",t,e,n),l=Object(s.d)("identicalElementShapes",t,e,n),d=Object(s.d)("name",t,e,n),h=new dt(d,i,a,o,l,u,c);return n.addTensorArray(h),[h.idTensor,Object(r.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("index",t,e,n),i=Object(s.d)("tensor",t,e,n),o=n.getTensorArray(r.id);return o.write(a,i),[o.idTensor]}case"TensorArrayReadV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("indices",t,e,n),i=Object(s.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,i)]}case"TensorArrayScatterV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("indices",t,e,n),i=Object(s.d)("tensor",t,e,n),o=n.getTensorArray(r.id);return o.scatter(a,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),i=Object(s.d)("dtype",t,e,n);return[a.concat(i)]}case"TensorArraySplitV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=Object(s.d)("tensor",t,e,n),i=Object(s.d)("lengths",t,e,n),o=n.getTensorArray(r.id);return o.split(i,a),[o.idTensor]}case"TensorArraySizeV3":{const a=Object(s.d)("tensorArrayId",t,e,n),i=n.getTensorArray(a.id);return[Object(r.scalar)(i.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(s.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("index",t,e,n),i=Object(s.d)("tensor",t,e,n),o=n.getTensorList(r.id);return o.setItem(a,i),[o.idTensor]}case"TensorListGetItem":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("index",t,e,n),i=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Object(s.d)("indices",t,e,n),i=function(t,e,n,a){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=a&&-1!==a&&s>=a)throw new Error(`Max index must be < array size (${s}  vs. ${a})`);const i=new ht([],n,t.dtype,a),o=Object(r.unstack)(t,0);return e.forEach((t,e)=>{i.setItem(t,o[e])}),i}(Object(s.d)("tensor",t,e,n),a,Object(s.d)("elementShape",t,e,n),Object(s.d)("numElements",t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(s.d)("elementShape",t,e,n),a=Object(s.d)("elementDType",t,e,n);let i;i="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=function(t,e,n){return new ht([],t,e,n)}(r,a,Object(s.d)(i,t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("indices",t,e,n),i=Object(s.d)("elementShape",t,e,n),o=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,o,i)]}case"TensorListStack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n),o=Object(s.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,i,o)]}case"TensorListFromTensor":{const a=function(t,e,n){const a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+t.shape);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);ot(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=Object(r.unstack)(t);return new ht(s,e,a)}(Object(s.d)("tensor",t,e,n),Object(s.d)("elementShape",t,e,n),Object(s.d)("elementDType",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const r=Object(s.d)("tensorListId",t,e,n),a=n.getTensorList(r.id),i=Object(s.d)("dtype",t,e,n),o=Object(s.d)("elementShape",t,e,n);return[a.concat(i,o)]}case"TensorListPushBack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("tensor",t,e,n),i=n.getTensorList(r.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{const r=Object(s.d)("tensorListId",t,e,n),a=Object(s.d)("elementShape",t,e,n),i=Object(s.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,i)]}case"TensorListSplit":{const a=Object(s.d)("tensor",t,e,n),i=Object(s.d)("elementShape",t,e,n),o=function(t,e,n){let a=0;const s=e.map(t=>(a+=t,a));if(a!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${t.shape}`);const i=lt(t.shape.slice(1),n),o=0===a?0:t.size/a,u=Object(r.tidy)(()=>{const n=[];t=Object(r.reshape)(t,[1,a,o]);for(let a=0;a<e.length;++a){const u=[0,0===a?0:s[a-1],0],c=[1,e[a],o];n[a]=Object(r.reshape)(Object(r.slice)(t,u,c),i)}return t.dispose(),n}),c=new ht([],n,t.dtype,e.length);for(let t=0;t<u.length;t++)c.setItem(t,u[t]);return c}(a,Object(s.d)("lengths",t,e,n),i);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};var ft=n(219),mt=n(124),bt=n(81),gt=n(220),yt=n(151),xt=n(281),vt=n(174),Ot=n(185),wt=n(293),kt=n(277),It=n(292),Nt=n(224);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jt(t,e,n){const[r,a]=Object(s.d)("fusedOps",t,e,n),i="biasadd"===r,o="prelu"===a,u="fusedbatchnorm"===r,c=Object(s.d)("numArgs",t,e,n);if(i){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Object(s.d)("strides",t,e,n),d=Object(s.c)(t,e,n),h=Object(s.d)("dataFormat",t,e,n).toUpperCase(),p=Object(s.d)("dilations",t,e,n),[f,m]=Object(s.d)("args",t,e,n);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:Object(s.d)("leakyreluAlpha",t,e,n)}}var St=n(173),Ct=n(289),Tt=n(294),Et=n(189),At=n(134),$t=n(295),Rt=n(236),_t=n(237),Dt=n(303),Ft=n(135),Mt=n(87);var Lt=n(82),zt=n(247),Pt=n(298);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bt(t,e,n){return{boxes:Object(s.d)("boxes",t,e,n),scores:Object(s.d)("scores",t,e,n),maxOutputSize:Object(s.d)("maxOutputSize",t,e,n),iouThreshold:Object(s.d)("iouThreshold",t,e,n),scoreThreshold:Object(s.d)("scoreThreshold",t,e,n),softNmsSigma:Object(s.d)("softNmsSigma",t,e,n)}}var Wt=n(245),Vt=n(246);var Ut=n(140),Gt=n(85);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ht{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(r.scalar)(0),this.tensorMap=new Map,Object(r.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Gt.a(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(r.tidy)(()=>{const t=Object(r.unstack)(e),a=n.length,s=t.length;r.util.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let e=0;e<a;e++){const a=n[e],s=t[e];Object(r.keep)(s),this.tensorMap.set(a,s)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(r.tidy)(()=>{const t=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,e);t.push(s)}return Object(r.stack)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+t.dtype);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+e.dtype)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qt=n(152),Kt=n(188),Xt=n(111),Yt=n(125),Jt=n(182),Zt=n(126),Qt=n(127),te=n(156),ee=n(184),ne=n(101);var re=n(108),ae=n(118);var se=n(143),ie=n(227),oe=n(300),ue=n(291),ce=n(312);var le=n(133),de=n(157),he=n(186),pe=n(90),fe=n(213),me=n(214),be=n(215),ge=n(216),ye=n(177),xe=n(278),ve=n(283);var Oe=n(98),we=n(155),ke=n(112),Ie=n(96),Ne=n(301),je=n(159),Se=n(79),Ce=n(128),Te=n(141),Ee=n(154),Ae=n(138),$e=n(304),Re=n(305);var _e=n(195),De=n(196),Fe=n(197),Me=n(243);var Le=n(153),ze=n(231),Pe=n(117),Be=n(158),We=n(150),Ve=n(223),Ue=n(175);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ge(t,e,n,a){const ot=((t,e,n)=>{switch(t.category){case"arithmetic":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[u.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"AddN":return[c.a(Object(s.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[l.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Mul":return[d.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"RealDiv":case"Div":return[h.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"DivNoNan":return[p.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"FloorDiv":return[f.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Sub":return[m.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Minimum":return[b.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Maximum":return[g.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Pow":return[y.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"SquaredDifference":return[x.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"basic_math":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[v.a(Object(s.d)("x",t,e,n))];case"Acos":return[O.a(Object(s.d)("x",t,e,n))];case"Acosh":return[w.a(Object(s.d)("x",t,e,n))];case"Asin":return[k.a(Object(s.d)("x",t,e,n))];case"Asinh":return[I.a(Object(s.d)("x",t,e,n))];case"Atan":return[N.a(Object(s.d)("x",t,e,n))];case"Atan2":return[j.a(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n))];case"Atanh":return[S.a(Object(s.d)("x",t,e,n))];case"Ceil":return[C.a(Object(s.d)("x",t,e,n))];case"Complex":return[T.a(Object(s.d)("real",t,e,n),Object(s.d)("imag",t,e,n))];case"Cos":return[E.a(Object(s.d)("x",t,e,n))];case"Cosh":return[A.a(Object(s.d)("x",t,e,n))];case"Elu":return[$.a(Object(s.d)("x",t,e,n))];case"Erf":return[R.a(Object(s.d)("x",t,e,n))];case"Exp":return[_.a(Object(s.d)("x",t,e,n))];case"Expm1":return[D.a(Object(s.d)("x",t,e,n))];case"Floor":return[F.a(Object(s.d)("x",t,e,n))];case"Log":return[M.a(Object(s.d)("x",t,e,n))];case"Log1p":return[L.a(Object(s.d)("x",t,e,n))];case"Imag":return[z.a(Object(s.d)("x",t,e,n))];case"Neg":return[P.a(Object(s.d)("x",t,e,n))];case"Reciprocal":return[B.a(Object(s.d)("x",t,e,n))];case"Real":return[W.a(Object(s.d)("x",t,e,n))];case"Relu":return[V.a(Object(s.d)("x",t,e,n))];case"Round":return[U.a(Object(s.d)("x",t,e,n))];case"Selu":return[G.a(Object(s.d)("x",t,e,n))];case"Sigmoid":return[H.a(Object(s.d)("x",t,e,n))];case"Sin":return[q.a(Object(s.d)("x",t,e,n))];case"Sign":return[K.a(Object(s.d)("x",t,e,n))];case"Sinh":return[X.a(Object(s.d)("x",t,e,n))];case"Softplus":return[Y.a(Object(s.d)("x",t,e,n))];case"Sqrt":return[J.a(Object(s.d)("x",t,e,n))];case"Square":return[Z.a(Object(s.d)("x",t,e,n))];case"Tanh":return[Q.a(Object(s.d)("x",t,e,n))];case"Tan":return[tt.a(Object(s.d)("x",t,e,n))];case"ClipByValue":return[et.a(Object(s.d)("x",t,e,n),Object(s.d)("clipValueMin",t,e,n),Object(s.d)("clipValueMax",t,e,n))];case"Relu6":return[nt.a(Object(s.d)("x",t,e,n))];case"Rsqrt":return[rt.a(Object(s.e)(t.inputNames[0],e,n))];case"Prod":return[at.a(Object(s.d)("x",t,e,n),Object(s.d)("axes",t,e,n))];case"LeakyRelu":return[st.a(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];case"Prelu":return[it.a(Object(s.d)("x",t,e,n),Object(s.d)("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"control":return pt(t,e,n);case"convolution":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Object(s.d)("stride",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),o=Object(s.d)("dilation",t,e,n);return[ft.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),r,a,i,o)]}case"Conv2D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.c)(t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),o=Object(s.d)("dilations",t,e,n);return[mt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=jt(t,e,n);return[bt.pb.conv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:c,activationFunc:l,leakyreluAlpha:d}=jt(t,e,n);return[bt.pb.depthwiseConv2d({x:Object(s.d)("x",t,e,n),filter:Object(s.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(s.d)("outputShape",t,e,n),a=Object(s.d)("strides",t,e,n),i=Object(s.c)(t,e,n);return[gt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(s.d)("strides",t,e,n),a=Object(s.c)(t,e,n),i=Object(s.d)("dilations",t,e,n),o=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[yt.a(Object(s.d)("input",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("dataFormat",t,e,n).toUpperCase(),o=Object(s.d)("dilations",t,e,n);return[xt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[vt.a(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[Ot.a(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n),o=Object(s.d)("includeBatchInIndex",t,e,n),{result:u,indexes:c}=wt.a(Object(s.d)("x",t,e,n),[i[1],i[2]],[r[1],r[2]],a,o);return[u,c]}case"AvgPool3D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[kt.a(Object(s.d)("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("kernelSize",t,e,n);return[It.a(Object(s.d)("x",t,e,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(s.d)("strides",t,e,n),a=Object(s.d)("pad",t,e,n),i=Object(s.d)("dilations",t,e,n),o=r[1],u=r[2],c=i[1],l=i[2];return[Nt.a(Object(s.d)("x",t,e,n),Object(s.d)("filter",t,e,n),[o,u],a,[c,l],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"creation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Object(s.d)("shape",t,e,n),a=Object(s.d)("dtype",t,e,n),i=Object(s.d)("value",t,e,n);return[St.a(r,i,a)]}case"LinSpace":{const r=Object(s.d)("start",t,e,n),a=Object(s.d)("stop",t,e,n),i=Object(s.d)("num",t,e,n);return[Ct.a(r,a,i)]}case"Multinomial":{const r=Object(s.d)("logits",t,e,n),a=Object(s.d)("numSamples",t,e,n),i=Object(s.d)("seed",t,e,n);return[Tt.a(r,a,i)]}case"OneHot":{const r=Object(s.d)("indices",t,e,n),a=Object(s.d)("depth",t,e,n),i=Object(s.d)("onValue",t,e,n),o=Object(s.d)("offValue",t,e,n);return[Et.a(r,a,i,o)]}case"Ones":return[At.a(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"OnesLike":return[$t.a(Object(s.d)("x",t,e,n))];case"RandomUniform":return[Rt.a(Object(s.d)("shape",t,e,n),Object(s.d)("minval",t,e,n),Object(s.d)("maxval",t,e,n),Object(s.d)("dtype",t,e,n))];case"Range":{const r=Object(s.d)("start",t,e,n),a=Object(s.d)("stop",t,e,n),i=Object(s.d)("step",t,e,n);return[_t.a(r,a,i,Object(s.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(s.d)("shape",t,e,n),a=Object(s.d)("mean",t,e,n),i=Object(s.d)("stdDev",t,e,n),o=Object(s.d)("seed",t,e,n);return[Dt.a(r,a,i,Object(s.d)("dtype",t,e,n),o)]}case"Zeros":return[Ft.a(Object(s.d)("shape",t,e,n),Object(s.d)("dtype",t,e,n))];case"ZerosLike":return[Mt.a(Object(s.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Bt(t,e,n),c=await bt.wb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=Bt(t,e,n),c=Object(s.d)("padToMaxOutputSize",t,e,n),l=await bt.wb.nonMaxSuppressionPaddedAsync(r,a,i,o,u,c);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Bt(t,e,n);return[await bt.wb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Lt.a(Object(s.d)("condition",t,e,n),"bool"),a=[await zt.a(r)];return r.dispose(),a}case"ListDiff":return Pt.a(Object(s.d)("x",t,e,n),Object(s.d)("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("k",t,e,n),i=Object(s.d)("sorted",t,e,n),o=Wt.a(r,a,i);return[o.values,o.indices]}case"Unique":{const r=Object(s.d)("x",t,e,n),a=Vt.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("axis",t,e,n),i=Vt.a(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"image":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Object(s.d)("images",t,e,n),a=Object(s.d)("size",t,e,n),i=Object(s.d)("alignCorners",t,e,n),o=Object(s.d)("halfPixelCenters",t,e,n);return[bt.wb.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const r=Object(s.d)("images",t,e,n),a=Object(s.d)("size",t,e,n),i=Object(s.d)("alignCorners",t,e,n),o=Object(s.d)("halfPixelCenters",t,e,n);return[bt.wb.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{const r=Object(s.d)("image",t,e,n),a=Object(s.d)("boxes",t,e,n),i=Object(s.d)("boxInd",t,e,n),o=Object(s.d)("cropSize",t,e,n),u=Object(s.d)("method",t,e,n),c=Object(s.d)("extrapolationValue",t,e,n);return[bt.wb.cropAndResize(r,a,i,o,u,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"graph":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(s.d)("default",t,e,n);return[Object(s.e)(t.name,e,n)||r];case"Placeholder":return[Object(s.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(s.d)("x",t,e,n);return[Object(s.a)(r)]}case"IdentityN":return Object(s.d)("x",t,e,n).map(t=>Object(s.a)(t));case"Snapshot":const a=Object(s.d)("x",t,e,n);return[Object(s.a)(a)];case"Shape":return[Ut.a(Object(s.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(s.d)("x",t,e,n).map(t=>Ut.a(t.shape));case"Size":return[Gt.a(Object(s.d)("x",t,e,n).size,"int32")];case"Rank":return[Gt.a(Object(s.d)("x",t,e,n).rank,"int32")];case"NoOp":return[Gt.a(1)];case"Print":const i=Object(s.d)("x",t,e,n),o=Object(s.d)("data",t,e,n),u=Object(s.d)("message",t,e,n),c=Object(s.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let t=0;t<o.length;t++)console.log(Array.prototype.slice.call(o[t].dataSync()).slice(0,c));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"logical":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Equal":return[qt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"NotEqual":return[Kt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Greater":return[Xt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"GreaterEqual":return[Yt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Less":return[Jt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LessEqual":return[Zt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalAnd":return[Qt.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"LogicalNot":return[te.a(Object(s.d)("a",t,e,n))];case"LogicalOr":return[ee.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];case"Select":case"SelectV2":return[ne.a(Object(s.d)("condition",t,e,n),Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"matrices":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[re.a(Object(s.d)("a",t,e,n),Object(s.d)("b",t,e,n),Object(s.d)("transposeA",t,e,n),Object(s.d)("transposeB",t,e,n))];case"Transpose":return[ae.a(Object(s.d)("x",t,e,n),Object(s.d)("perm",t,e,n))];case"_FusedMatMul":const[r,a]=Object(s.d)("fusedOps",t,e,n),i="biasadd"===r,o="prelu"===a,u=Object(s.d)("numArgs",t,e,n),c=Object(s.d)("leakyreluAlpha",t,e,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=Object(s.d)("args",t,e,n);return[bt.pb.matMul({a:Object(s.d)("a",t,e,n),b:Object(s.d)("b",t,e,n),transposeA:Object(s.d)("transposeA",t,e,n),transposeB:Object(s.d)("transposeB",t,e,n),bias:l,activation:a,preluActivationWeights:d,leakyreluAlpha:c})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"normalization":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[se.a(Object(s.d)("x",t,e,n),Object(s.d)("mean",t,e,n),Object(s.d)("variance",t,e,n),Object(s.d)("offset",t,e,n),Object(s.d)("scale",t,e,n),Object(s.d)("epsilon",t,e,n))];case"LRN":return[ie.a(Object(s.d)("x",t,e,n),Object(s.d)("radius",t,e,n),Object(s.d)("bias",t,e,n),Object(s.d)("alpha",t,e,n),Object(s.d)("beta",t,e,n))];case"Softmax":return[oe.a(Object(s.d)("x",t,e,n))];case"LogSoftmax":return[ue.a(Object(s.d)("x",t,e,n))];case"SparseToDense":return[ce.a(Object(s.d)("sparseIndices",t,e,n),Object(s.d)("outputShape",t,e,n),Object(s.d)("sparseValues",t,e,n),Object(s.d)("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"reduction":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[le.a(Object(s.d)("x",t,e,n),r,a)]}case"Mean":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[de.a(Object(s.d)("x",t,e,n),r,a)]}case"Min":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[he.a(Object(s.d)("x",t,e,n),r,a)]}case"Sum":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[pe.a(Object(s.d)("x",t,e,n),r,a)]}case"All":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[fe.a(Object(s.d)("x",t,e,n),r,a)]}case"Any":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[me.a(Object(s.d)("x",t,e,n),r,a)]}case"ArgMax":{const r=Object(s.d)("axis",t,e,n);return[be.a(Object(s.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(s.d)("axis",t,e,n);return[ge.a(Object(s.d)("x",t,e,n),r)]}case"Prod":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("keepDims",t,e,n);return[at.a(Object(s.d)("x",t,e,n),r,a)]}case"Cumsum":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("exclusive",t,e,n),i=Object(s.d)("reverse",t,e,n);return[ye.a(Object(s.d)("x",t,e,n),r,a,i)]}case"Bincount":const r=Object(s.d)("x",t,e,n),a=Object(s.d)("weights",t,e,n),i=Object(s.d)("size",t,e,n);return[xe.a(r,a,i)];case"DenseBincount":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("weights",t,e,n),i=Object(s.d)("size",t,e,n),o=Object(s.d)("binaryOutput",t,e,n);return[ve.a(r,a,i,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"slice_join":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Object(s.d)("n",t,e,n),a=Object(s.d)("axis",t,e,n);let i=Object(s.d)("tensors",t,e,n);return i=i.slice(0,r),[Oe.a(i,a)]}case"Gather":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("indices",t,e,n);return[we.a(r,Lt.a(a,"int32"),0)]}case"GatherV2":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("batchDims",t,e,n),i=Object(s.d)("x",t,e,n),o=Object(s.d)("indices",t,e,n);return[we.a(i,Lt.a(o,"int32"),r,a)]}case"Reverse":{const r=Object(s.d)("dims",t,e,n),a=[];for(let t=0;t<r.length;t++)r[t]&&a.push(t);const i=Object(s.d)("x",t,e,n);return[ke.a(i,a)]}case"ReverseV2":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("x",t,e,n);return[ke.a(a,r)]}case"Slice":{const r=Object(s.d)("begin",t,e,n),a=Object(s.d)("size",t,e,n);return[Ie.a(Object(s.d)("x",t,e,n),r,a)]}case"StridedSlice":{const r=Object(s.d)("begin",t,e,n),a=Object(s.d)("end",t,e,n),i=Object(s.d)("strides",t,e,n),o=Object(s.d)("beginMask",t,e,n),u=Object(s.d)("endMask",t,e,n),c=Object(s.d)("ellipsisMask",t,e,n),l=Object(s.d)("newAxisMask",t,e,n),d=Object(s.d)("shrinkAxisMask",t,e,n),h=Object(s.d)("x",t,e,n);return[Ne.a(h,r,a,i,o,u,c,l,d)]}case"Pack":return Object(r.tidy)(()=>{const a=Object(s.d)("axis",t,e,n),i=Object(s.d)("tensors",t,e,n),o=i[0].shape,u=je.a(i[0]).shape,c=i.map(t=>{const e=r.util.arraysEqual(t.shape,o);if(!e&&!r.util.arraysEqual(je.a(t).shape,u))throw new Error("the input tensors shape does not match");return e?t:Se.a(t,o)});return[Ce.a(c,a)]});case"Unpack":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("tensor",t,e,n);return Te.a(a,r)}case"Tile":{const r=Object(s.d)("reps",t,e,n);return[Ee.a(Object(s.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(s.d)("axis",t,e,n),a=Object(s.d)("numOrSizeSplits",t,e,n),i=Object(s.d)("x",t,e,n);return Ae.a(i,a,r)}case"ScatterNd":{const r=Object(s.d)("indices",t,e,n),a=Object(s.d)("values",t,e,n),i=Object(s.d)("shape",t,e,n);return[$e.a(r,a,i)]}case"GatherNd":{const r=Object(s.d)("x",t,e,n),a=Object(s.d)("indices",t,e,n);return[Re.a(r,a)]}case"SparseToDense":{const r=Object(s.d)("sparseIndices",t,e,n),a=Object(s.d)("outputShape",t,e,n),i=Object(s.d)("sparseValues",t,e,n),o=Object(s.d)("defaultValue",t,e,n);return[ce.a(r,i,a,i.dtype===o.dtype?o:Lt.a(o,i.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"spectral":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FFT":return[_e.a(Object(s.d)("x",t,e,n))];case"IFFT":return[De.a(Object(s.d)("x",t,e,n))];case"RFFT":return[Fe.a(Object(s.d)("x",t,e,n))];case"IRFFT":return[Me.a(Object(s.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"transformation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Cast":return[Lt.a(Object(s.d)("x",t,e,n),Object(s.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(s.d)("axis",t,e,n);return[Le.a(Object(s.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(s.d)("axis",t,e,n);return[je.a(Object(s.d)("x",t,e,n),r)]}case"Reshape":return[Se.a(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];case"MirrorPad":return[ze.a(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("mode",t,e,n))];case"PadV2":case"Pad":return[Pe.a(Object(s.d)("x",t,e,n),Object(s.d)("padding",t,e,n),Object(s.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(s.d)("blockShape",t,e,n),a=Object(s.d)("paddings",t,e,n);return[Be.a(Object(s.d)("x",t,e,n),r,a)]}case"BatchToSpaceND":{const r=Object(s.d)("blockShape",t,e,n),a=Object(s.d)("crops",t,e,n);return[We.a(Object(s.d)("x",t,e,n),r,a)]}case"DepthToSpace":{const r=Object(s.d)("blockSize",t,e,n),a=Object(s.d)("dataFormat",t,e,n).toUpperCase();return[Ve.a(Object(s.d)("x",t,e,n),r,a)]}case"BroadcastTo":return[Ue.a(Object(s.d)("x",t,e,n),Object(s.d)("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=Object(s.d)("keyDType",t,e,n),i=Object(s.d)("valueDType",t,e,n),o=new Ht(a,i);return r.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(s.d)("tableHandle",t,e,n,r),i=Object(s.d)("keys",t,e,n),o=Object(s.d)("values",t,e,n),u=r.getHashTableById(a.id);return[await u.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(s.d)("tableHandle",t,e,n,r),i=Object(s.d)("keys",t,e,n),o=Object(s.d)("defaultValue",t,e,n),u=r.getHashTableById(a.id);return[await u.find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(s.d)("tableHandle",t,e,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,a);case"custom":const ot=Object(o.b)(t.op);if(ot&&ot.customExecutor)return ot.customExecutor(new i(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return r.util.isPromise(ot)?ot.then(t=>[].concat(t)):[].concat(ot)}class He{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(t,e,n,r){const a=new Set,i=[];let o=null,u=null;const c=new Set,l=Object.keys(t).map(t=>Object(s.g)(t)[0]);let d=[];null!=r&&(d=r.map(t=>Object(s.g)(t.name)[0]));const h=[...e];for(;h.length>0;){const t=h.pop();(Je(t)||Ze(t)||Qe(t))&&null==o&&(o=t,u=o.children.map(t=>t.name).filter(t=>a.has(t))),a.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===d.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{c.has(t.name)||(c.add(t.name),h.push(t))}):i.push(t.name)))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:i,dynamicNode:o,syncInputs:u}}const Ke=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Xe=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Ye=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Je(t){return Ke.indexOf(t.op)>=0}function Ze(t){return Xe.indexOf(t.op)>=0}function Qe(t){return Ye.indexOf(t.op)>=0}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tn{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new tn(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=qe(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:i}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const n=e.map(t=>t.name),a=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:a}=n,i=[],o=Object.keys(a).map(t=>Object(s.g)(t)[0]).map(e=>t.nodes[e]),u=t.initNodes;o.forEach(t=>{r.has(t.name)&&i.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&i.push(t)}),null!=u&&u.forEach(t=>{r.has(t.name)&&i.push(t)});const c=new Set,l=[];for(;i.length>0;){const t=i.pop();c.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!c.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>c.has(t.name))&&i.push(t)})}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),i=e.map(t=>Object(s.g)(t)[0]);let o=i.map(t=>this.graph.nodes[t]);0===o.length&&(o=this._outputs);const u=this.getCompilationKey(a,o);let c=this.compiledMap.get(u);null==c&&(c=this.compile(t,o),this.compiledMap.set(u,c));const l={},d={};return Object(r.tidy)(()=>{const n=new He(this.weightMap,l,d,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(s.g)(e),i=[];i[r]=t[e],a[n]=i});const o=this.getFrozenTensorIds(a),u={};for(let t=0;t<c.length;t++){const e=c[t];if(!a[e.name]){const t=Ge(e,a,n,this._resourceManager);if(r.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.checkTensorForDisposal(e.name,e,a,n,o,i,u)}}return null==this.parent&&n.dispose(o),e.map(t=>Object(s.e)(t,a,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=Object(s.f)(t.name,n,r);null!=e&&e.forEach(t=>{if(t&&!a.has(t.id)){const e=o[t.id];1===e?(t.dispose(),delete o[t.id]):null!=e&&o[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const i=new He(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(t,i,e,n),u=e.map(t=>Object(s.e)(t,o,i)),c=u.map(t=>t.id),l=Object.keys(t).map(e=>t[e].id),d=new Set([...c,...l,...this.weightIds]);return Object.keys(o).forEach(t=>{o[t].forEach(t=>{!t||t.isDisposed||d.has(t.id)||t.dispose()})}),null==this.parent&&i.dispose(d),u}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),i=a.map(t=>this.graph.nodes[Object(s.g)(t)[0]]),o=n.map(t=>Object(s.g)(t)[0]);let u=o.map(t=>this.graph.nodes[t]);0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:d,syncInputs:h}=qe(t,u,this.weightMap,this._initNodes),p=[...i,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(s.g)(e),a=[];a[r]=t[e],f[n]=a});const m={},b=this.getFrozenTensorIds(f),g={};for(;p.length>0;){const t=this.processStack(i,p,e,f,g,b,o,m,c);await Promise.all(t)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=u.filter(t=>!Je(t)&&!Object(s.e)(t.name,f,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=d&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${t}`)}return f}processStack(t,e,n,a,i,o,u,c,l){const d=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let h="";if("Enter"===t.node.op&&Object(s.d)("isConstant",t.node,a,n)&&([h]=Object(s.b)(t.node.name,n)),null==a[t.node.name]){const p=Ge(t.node,a,n,this._resourceManager);h||([h]=Object(s.b)(t.node.name,n));const f=n.currentContext;r.util.isPromise(p)?d.push(p.then(r=>(a[h]=r,n.currentContext=f,this.checkTensorForDisposal(h,t.node,a,n,o,u,c),this.processChildNodes(t.node,e,n,a,i,l),r))):(a[h]=p,this.checkTensorForDisposal(h,t.node,a,n,o,u,c),this.processChildNodes(t.node,e,n,a,i,l))}else this.processChildNodes(t.node,e,n,a,i,l)}return d}processChildNodes(t,e,n,r,a,i){t.children.forEach(t=>{const[o]=Object(s.b)(t.name,n);!a[o]&&i.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(s.e)(t,r,n))&&(a[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(s.e)(t,r,n))&&(a[o]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[a]=Object(s.g)(e),i=this.graph.nodes[a];if(i.attrParams.shape&&i.attrParams.shape.value){const t=i.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);r.util.assert(e,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&r.util.assert(n.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(s.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(s.g)(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)})}}class en{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nn{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new en}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=r.io.browserHTTPRequest(t,this.loadOptions);else{const e=r.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(r.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=r.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new tn(a.a.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=a.a.Instance.transformGraph(t.modelInitializer);this.initializer=new tn(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=r.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof r.Tensor||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function rn(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t+="model.json?tfjs-format=file");const n=new nn(t,e);return await n.load(),n}
/** @license See the LICENSE file. */const an="3.3.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},,,,,,,function(t,e,n){"use strict";n.d(e,"b",(function(){return a.cast})),n.d(e,"c",(function(){return a.exp})),n.d(e,"d",(function(){return a.expandDims})),n.d(e,"e",(function(){return a.gather})),n.d(e,"i",(function(){return a.maximum})),n.d(e,"j",(function(){return a.ones})),n.d(e,"k",(function(){return a.outerProduct})),n.d(e,"l",(function(){return a.scalar})),n.d(e,"o",(function(){return a.stack})),n.d(e,"p",(function(){return a.tensor})),n.d(e,"s",(function(){return a.zeros})),n.d(e,"r",(function(){return a.transpose})),n.d(e,"g",(function(){return a.image})),n.d(e,"n",(function(){return a.signal})),n.d(e,"q",(function(){return a.tidy})),n.d(e,"m",(function(){return a.setBackend})),n.d(e,"f",(function(){return a.getBackend})),n.d(e,"a",(function(){return a.browser})),n.d(e,"h",(function(){return bc.loadGraphModel}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return ul})),n.d(r,"addImpl",(function(){return Qc})),n.d(r,"bincountImpl",(function(){return Gl})),n.d(r,"bincountReduceImpl",(function(){return Hl})),n.d(r,"ceilImpl",(function(){return Xl})),n.d(r,"concatImpl",(function(){return ed})),n.d(r,"expImpl",(function(){return Bd})),n.d(r,"expm1Impl",(function(){return Hd})),n.d(r,"floorImpl",(function(){return hh})),n.d(r,"gatherV2Impl",(function(){return Oh})),n.d(r,"greaterImpl",(function(){return kh})),n.d(r,"lessImpl",(function(){return Fh})),n.d(r,"linSpaceImpl",(function(){return Wh})),n.d(r,"logImpl",(function(){return Uh})),n.d(r,"maxImpl",(function(){return sp})),n.d(r,"maximumImpl",(function(){return up})),n.d(r,"minimumImpl",(function(){return vp})),n.d(r,"multiplyImpl",(function(){return Xd})),n.d(r,"negImpl",(function(){return Ep})),n.d(r,"notEqualImpl",(function(){return Lp})),n.d(r,"prodImpl",(function(){return Jp})),n.d(r,"rangeImpl",(function(){return Qp})),n.d(r,"rsqrtImpl",(function(){return hf})),n.d(r,"sliceImpl",(function(){return Bl})),n.d(r,"squaredDifferenceImpl",(function(){return zf})),n.d(r,"stridedSliceImpl",(function(){return Uf})),n.d(r,"subImpl",(function(){return nh})),n.d(r,"tileImpl",(function(){return Yf})),n.d(r,"topKImpl",(function(){return Zf})),n.d(r,"transposeImpl",(function(){return ml})),n.d(r,"uniqueImpl",(function(){return sm}));var a=n(72),s=n(73),i=n(82),o=n(80),u=n(139);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const c={kernelName:s.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,Object(u.a)(Object(i.a)(n,"float32"),-1))}}};var l=n(83),d=n(94),h=n(85),p=n(104),f=n(91),m=n(84);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const b={kernelName:s.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(f.a)(Object(i.a)(n,"float32")),r=Object(p.a)(Object(m.a)(Object(h.a)(1),e));return Object(d.a)(Object(l.a)(t,r))}}}},g={kernelName:s.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(p.a)(Object(m.a)(Object(f.a)(Object(i.a)(n,"float32")),1));return Object(l.a)(t,e)}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var y=n(86),x=n(79),v=n(90);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const O={kernelName:s.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=y.a(n.shape,r.shape);return{a:()=>{let e=t;const r=y.c(n.shape,a);return r.length>0&&(e=Object(v.a)(e,r)),Object(x.a)(e,n.shape)},b:()=>{let e=t;const n=y.c(r.shape,a);return n.length>0&&(e=Object(v.a)(e,n)),Object(x.a)(e,r.shape)}}}},w={kernelName:s.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var k=n(87);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I={kernelName:s.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(k.a)(n)}}},N={kernelName:s.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(k.a)(n)}}},j={kernelName:s.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(p.a)(Object(m.a)(Object(h.a)(1),Object(f.a)(Object(i.a)(n,"float32")))))}}};
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var S=n(89);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C={kernelName:s.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(p.a)(Object(S.a)(Object(h.a)(1),Object(f.a)(Object(i.a)(n,"float32"))));return Object(l.a)(t,e)}}}},T={kernelName:s.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(y.a)(n.shape,r.shape);return{a:()=>{const e=Object(S.a)(Object(f.a)(n),Object(f.a)(r));let s=Object(o.a)(t,Object(l.a)(r,e));const i=Object(y.c)(n.shape,a);return i.length>0&&(s=Object(v.a)(s,i)),Object(x.a)(s,n.shape)},b:()=>{const e=Object(S.a)(Object(f.a)(n),Object(f.a)(r));let s=Object(d.a)(Object(o.a)(t,Object(l.a)(n,e)));const i=Object(y.c)(r.shape,a);return i.length>0&&(s=Object(v.a)(s,i)),Object(x.a)(s,r.shape)}}}},E={kernelName:s.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(S.a)(Object(f.a)(Object(i.a)(n,"float32")),1))}}},A={kernelName:s.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(m.a)(Object(h.a)(1),Object(f.a)(Object(i.a)(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $=n(76),R=n(75),_=n(169),D=n(74);const F=Object(D.b)({avgPool3dGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,a,i){const o=Object(R.a)(t,"dy","avgPool3dGrad"),u=Object(R.a)(e,"input","avgPool3dGrad");let c=o,l=u,d=!1;4===u.rank&&(d=!0,c=Object(x.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=Object(x.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),_.b(5===c.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+c.rank+"."),_.b(5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+l.rank+"."),null!=i&&_.b(_.v(a),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const h={dy:c,input:l},p={filterSize:n,strides:r,pad:a,dimRoundingMode:i},f=$.a.runKernel(s.q,h,p);return d?Object(x.a)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),M={kernelName:s.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>F(t,r,a,s,i,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L=Object(D.b)({avgPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,a){const i=Object(R.a)(t,"dy","avgPoolGrad"),o=Object(R.a)(e,"input","avgPoolGrad");_.b(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let u=o,c=i,l=!1;3===o.rank&&(l=!0,u=Object(x.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=Object(x.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),_.b(4===c.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+c.rank+"."),_.b(4===u.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+u.rank+".");const d={dy:c,input:u},h={filterSize:n,strides:r,pad:a},p=$.a.runKernel(s.r,d,h);return l?Object(x.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),z={kernelName:s.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i}=n;return{x:()=>L(t,r,a,s,i)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var P=n(108);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B={kernelName:s.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(P.a)(t,a,!1,!1),b:()=>Object(P.a)(t,r,!0,!1)}:s&&!i?{a:()=>Object(P.a)(a,t,!1,!0),b:()=>Object(P.a)(r,t,!1,!1)}:{a:()=>Object(P.a)(a,t,!0,!0),b:()=>Object(P.a)(t,r,!0,!0)}:{a:()=>Object(P.a)(t,a,!1,!0),b:()=>Object(P.a)(r,t,!0,!1)}}};var W=n(158);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V={kernelName:s.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(W.a)(t,r,a)}}},U={kernelName:s.v,gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let t=a.length-1;t>=0;t--)if(a[t]===s[t])i[t]=1;else if(1!==a[t])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>Object(v.a)(t,o,!0)}}},G={kernelName:s.w,gradFunc:t=>({x:()=>t.clone()})},H={kernelName:s.x,gradFunc:t=>({x:()=>Object(k.a)(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var q=n(125),K=n(126),X=n(127),Y=n(101);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const J={kernelName:s.y,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(Y.a)(Object(X.a)(Object(q.a)(r,a),Object(K.a)(r,s)),t,Object(k.a)(t))}}},Z={kernelName:s.A,inputsToSave:["x"],gradFunc:c.gradFunc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Q=n(138);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tt={kernelName:s.B,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,s=Object(_.I)(a,e[0].shape)[0],i=r.map(t=>t[s]);return Object(Q.a)(t,i,s).map(t=>()=>t)}};var et=n(249),nt=n(221),rt=n(99);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const at={kernelName:s.C,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return _.b(rt.i(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Object(nt.a)(r.shape,t,a,i,o,u),filter:()=>Object(et.a)(r,t,a.shape,i,o,u)}}};var st=n(124);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const it={kernelName:s.E,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(st.a)(t,a,s,i,o,1,u),filter:()=>Object(et.a)(t,r,a.shape,s,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot=Object(D.b)({conv3DBackpropFilter_:function(t,e,n,r,a){let i=t;4===t.rank&&(i=Object(x.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let o=e;4===o.rank&&(o=Object(x.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),_.b(5===i.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+i.shape+"."),_.b(5===o.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+o.shape+"."),_.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),_.b(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),_.b(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const u={x:i,dy:o},c={strides:r,pad:a,filterShape:n};return $.a.runKernel(s.G,u,c)}});var ut=n(282);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ct={kernelName:s.F,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s}=n;_.b(Object(rt.i)(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=e;return{x:()=>Object(ut.a)(i.shape,t,o,a,s),filter:()=>ot(i,t,o.shape,a,s)}}};var lt=n(241);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt={kernelName:s.I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(Object(d.a)(Object(lt.a)(Object(i.a)(n,"float32"))),t)}}};var ht=n(242);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pt={kernelName:s.J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(Object(ht.a)(Object(i.a)(n,"float32")),t)}}};var ft=n(105),mt=n(177),bt=n(118);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gt={kernelName:s.L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const e=Object(ft.f)([a],r.rank);let n=Object(mt.a)(t,a,s,!i);return null!=e&&(n=Object(bt.a)(n,e)),n}}}};var yt=n(309),xt=n(308);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vt={kernelName:s.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;_.b(rt.i(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=e;return _.b(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),_.b(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),_.b(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),_.b(rt.h(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&_.b(_.v(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Object(xt.a)(u.shape,t,c,a,s,r,i),filter:()=>Object(yt.a)(u,t,c.shape,a,s,r,i)}}},Ot={kernelName:s.S,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,i={x:r,filter:a,dy:t},o={x:r,filter:a,dy:t};return{x:()=>$.a.runKernel(s.U,i,n),filter:()=>$.a.runKernel(s.T,o,n)}}},wt={kernelName:s.V,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>$.a.runKernel(s.W,r)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var kt=n(109);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const It={kernelName:s.Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(o.a)(Object(kt.a)(Object(d.a)(Object(f.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(o.a)(t,r)}}},Nt={kernelName:s.Z,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,n)}}},jt={kernelName:s.ab,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Object(x.a)(t,n.shape)}}},St={kernelName:s.bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,Object(kt.a)(n))}}},Ct={kernelName:s.fb,gradFunc:t=>({x:()=>Object(k.a)(t)})},Tt={kernelName:s.gb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(y.a)(n.shape,r.shape);return{a:()=>{const e=Object(l.a)(t,Object(i.a)(r,"float32")),s=Object(y.c)(n.shape,a);return s.length>0?Object(x.a)(Object(v.a)(e,s),n.shape):e},b:()=>{let e=Object(o.a)(t,Object(i.a)(n,"float32"));const s=Object(y.c)(r.shape,a);s.length>0&&(e=Object(x.a)(Object(v.a)(e,s),r.shape));const u=Object(f.a)(r);return Object(d.a)(Object(l.a)(e,Object(i.a)(u,"float32")))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Et=n(238),At=n(154);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const $t={kernelName:s.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,s,i,u]=e,c=null==u?Object(h.a)(1):u,l=Object(y.c)(s.shape,a.shape),d=[];if(1===s.rank){for(let t=0;t<a.shape.length-1;++t)d.push(a.shape[t]);d.push(1)}const p=Object(m.a)(a,s),f=Object(o.a)(t,c),b=Object(Et.a)(Object(S.a)(i,Object(h.a)(r))),g=Object(o.a)(Object(o.a)(Object(o.a)(b,b),b),Object(h.a)(-.5));return{x:()=>1===s.rank?Object(x.a)(Object(o.a)(Object(o.a)(t,Object(At.a)(Object(x.a)(b,[1,1,1,s.shape[0]]),d)),c),a.shape):Object(x.a)(Object(o.a)(Object(o.a)(t,b),c),a.shape),mean:()=>{let t=Object(o.a)(Object(o.a)(b,Object(h.a)(-1)),f);return 1===s.rank&&(t=Object(v.a)(t,l)),Object(x.a)(t,s.shape)},variance:()=>{let t=Object(o.a)(Object(o.a)(g,p),f);return 1===s.rank&&(t=Object(v.a)(t,l)),Object(x.a)(t,s.shape)},scale:()=>{const e=Object(o.a)(p,b);let n=Object(o.a)(t,e);return 1===s.rank&&(n=Object(v.a)(n,l)),Object(x.a)(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Object(v.a)(e,l)),Object(x.a)(e,s.shape)}}}};var Rt=n(199);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _t={kernelName:s.mb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:s}=n,i=Object(_.I)(s,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,o=e.slice(0,i),u=o.length,c=e.slice(s,e.length).slice(1),l=c.length,d=Dt(0,u),h=Dt(u+1,u+1+l),p=Ft([o,[n],c]),f=Object(x.a)(t,p),m=Object(x.a)(a,[n]),b=Ft([[u],d,h]),g=Object(bt.a)(f,b);let y=Object(Rt.a)(g,m,r.shape[i]);const v=Object(ft.h)(b);return y=Object(bt.a)(y,v),y},indices:()=>a}}};function Dt(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Ft(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mt={kernelName:s.ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(k.a)(n),b:()=>Object(k.a)(r)}}},Lt={kernelName:s.qb,gradFunc:t=>({x:()=>Object(i.a)(t,"float32")})},zt={kernelName:s.sb,gradFunc:t=>({x:()=>Object(k.a)(t)})},Pt={kernelName:s.tb,gradFunc:t=>({x:()=>Object(k.a)(t)})},Bt={kernelName:s.ub,gradFunc:t=>({x:()=>Object(k.a)(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wt=n(111);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vt={kernelName:s.xb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:a}=n,s=Object(Wt.a)(r,0);return{x:()=>Object(Y.a)(s,t,Object(o.a)(t,a))}}},Ut={kernelName:s.Cb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(S.a)(n,1))}}},Gt={kernelName:s.Bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(i.a)(n,"float32"))}}},Ht={kernelName:s.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(kt.a)(r);return Object(m.a)(t,Object(o.a)(Object(v.a)(t,a,!0),e))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=Object(D.b)({localResponseNormalizationBackprop_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r=5,a=1,i=1,o=.5){const u={x:t,y:e,dy:n},c={depthRadius:r,bias:a,alpha:i,beta:o};return $.a.runKernel(s.wb,u,c)}}),Kt={kernelName:s.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>qt(r,a,t,s,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xt=n(152);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(t,e,n,r){return e.rank<n.rank&&(e=Object(x.a)(e,ft.e(e.shape,r))),t.rank<n.rank&&(t=Object(x.a)(t,ft.e(t.shape,r))),{x:()=>Object(o.a)(t,Object(i.a)(Object(Xt.a)(n,e),t.dtype))}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jt={kernelName:s.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,s=e[0],i=Yt(t,e[1],s,_.I(a,s.shape));return{x:()=>i.x()}}};var Zt=n(182);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qt={kernelName:s.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(o.a)(t,Object(i.a)(Object(q.a)(n,r),"float32")),b:()=>Object(o.a)(t,Object(i.a)(Object(Zt.a)(n,r),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const te=Object(D.b)({maxPool3dGrad_:function(t,e,n,r,a,i,o){const u=Object(R.a)(t,"dy","maxPool3dGrad"),c=Object(R.a)(e,"input","maxPool3dGrad"),l=Object(R.a)(n,"output","maxPool3dGrad");let d=u,h=c,p=l,f=!1;4===c.rank&&(f=!0,d=Object(x.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Object(x.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=Object(x.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),_.b(5===d.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+d.rank+"."),_.b(5===h.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+h.rank+"."),_.b(5===p.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+p.rank+"."),null!=o&&_.b(_.v(i),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const m={dy:d,input:h,output:p},b={filterSize:r,strides:a,pad:i,dimRoundingMode:o},g=$.a.runKernel(s.Kb,m,b);return f?Object(x.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),ee={kernelName:s.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>te(t,r,a,s,i,o,u)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne=Object(D.b)({maxPoolGrad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r,a,i,o){const u=Object(R.a)(t,"dy","maxPoolGrad"),c=Object(R.a)(e,"input","maxPoolGrad"),l=Object(R.a)(n,"output","maxPoolGrad");_.b(c.rank===u.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${u.rank})`),_.b(4===u.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+u.rank+"."),_.b(4===c.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+c.rank+"."),null!=o&&_.b(_.v(i),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const d={dy:u,input:c,output:l},h={filterSize:r,strides:a,pad:i,dimRoundingMode:o};return $.a.runKernel(s.Lb,d,h)}}),re={kernelName:s.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ne(t,r,a,s,i,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ae=n(134);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se={kernelName:s.Ob,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n,s=_.I(a,r.shape),i=Object(ft.d)(r.shape,s)[1],u=_.O(i);return{x:()=>{const e=r.shape.slice();s.forEach(t=>{e[t]=1});const n=Object(x.a)(t,e);return Object(l.a)(Object(o.a)(n,Object(ae.a)(r.shape,"float32")),u)}}}},ie={kernelName:s.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[s,i]=e,o=Yt(t,i,s,_.I(a,s.shape));return{x:()=>o.x()}}},oe={kernelName:s.Qb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(o.a)(t,Object(i.a)(Object(K.a)(n,r),"float32")),b:()=>Object(o.a)(t,Object(i.a)(Object(Wt.a)(n,r),"float32"))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ue=n(96);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ce={kernelName:s.Rb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(ue.a)(t,s,r.shape)}}};var le=n(179);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const de={kernelName:s.Sb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(y.a)(n.shape,r.shape);return{a:()=>{const e=Object(y.c)(n.shape,a);return e.length>0?Object(x.a)(Object(v.a)(t,e),n.shape):t},b:()=>{const e=Object(o.a)(t,Object(d.a)(Object(le.a)(Object(l.a)(n,r)))),s=Object(y.c)(r.shape,a);return s.length>0?Object(x.a)(Object(v.a)(e,s),r.shape):e}}}},he={kernelName:s.Ub,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(y.a)(n.shape,r.shape);return{a:()=>{const e=Object(o.a)(t,Object(i.a)(r,"float32")),s=Object(y.c)(n.shape,a);return s.length>0?Object(x.a)(Object(v.a)(e,s),n.shape):e},b:()=>{const e=Object(o.a)(t,Object(i.a)(n,"float32")),s=Object(y.c)(r.shape,a);return s.length>0?Object(x.a)(Object(v.a)(e,s),r.shape):e}}}},pe={kernelName:s.Vb,gradFunc:t=>({x:()=>Object(d.a)(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fe=n(135);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const me={kernelName:s.ac,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(fe.a)(n.shape,"float32")}}},be={kernelName:s.bc,gradFunc:t=>({x:()=>Object(k.a)(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ge=n(141);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye={kernelName:s.cc,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Object(ge.a)(t,r).map(t=>()=>t)}},xe={kernelName:s.dc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map(t=>t[0]);return{x:()=>Object(ue.a)(t,s,r.shape)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ve=n(132),Oe=n(116);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const we={kernelName:s.fc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,s=n,u=r,c=y.a(s.shape,u.shape);return{a:()=>{const e=Object(i.a)(u,"float32");let n=Object(o.a)(t,Object(o.a)(e,Object(Oe.a)(s,Object(m.a)(e,Object(h.a)(1)))));const r=y.c(s.shape,c);return r.length>0&&(n=Object(v.a)(n,r)),Object(x.a)(n,s.shape)},b:()=>{const e=Object(Wt.a)(s,0),n=Object(Y.a)(e,Object(ve.a)(s),Object(k.a)(s));let r=Object(o.a)(t,Object(o.a)(a,n));const i=y.c(u.shape,c);return i.length>0&&(r=Object(v.a)(r,i)),Object(x.a)(r,u.shape)}}}},ke={kernelName:s.gc,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Wt.a)(n,0);return{x:()=>Object(Y.a)(a,t,Object(o.a)(t,r)),alpha:()=>{let e=Object(Y.a)(a,Object(k.a)(t),Object(o.a)(t,n));const s=Object(y.c)(r.shape,t.shape);return s.length>0&&(e=Object(v.a)(e,s)),Object(x.a)(e,r.shape)}}}},Ie={kernelName:s.kc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=y.a(n.shape,r.shape);return{a:()=>{const e=Object(l.a)(t,Object(i.a)(r,"float32")),s=y.c(n.shape,a);return s.length>0?Object(x.a)(Object(v.a)(e,s),n.shape):e},b:()=>{let e=Object(o.a)(t,Object(i.a)(n,"float32"));const s=y.c(r.shape,a);s.length>0&&(e=Object(x.a)(Object(v.a)(e,s),r.shape));const u=Object(f.a)(r);return Object(d.a)(Object(l.a)(e,Object(i.a)(u,"float32")))}}}},Ne={kernelName:s.lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(d.a)(Object(f.a)(n)))}}},je={kernelName:s.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(o.a)(Object(K.a)(n,6),Object(u.a)(n));return{x:()=>Object(o.a)(t,Object(i.a)(r,"float32"))}}},Se={kernelName:s.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,Object(i.a)(Object(u.a)(n),"float32"))}}},Ce={kernelName:s.oc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(x.a)(t,n.shape)}}},Te={kernelName:s.pc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>$.a.runKernel(s.qc,a,n)}}},Ee={kernelName:s.rc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>$.a.runKernel(s.sc,a,n)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ae=n(112);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e={kernelName:s.tc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(_.I)(r,t.shape);return{x:()=>Object(Ae.a)(t,a)}}},Re={kernelName:s.vc,gradFunc:t=>({x:()=>Object(k.a)(t)})},_e={kernelName:s.wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(d.a)(Object(l.a)(t,Object(o.a)(Object(Oe.a)(n,1.5),2)))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var De=n(156);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe={kernelName:s.yc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(i.a)(Object(k.a)(n),"float32"),t:()=>Object(o.a)(t,Object(i.a)(n,t.dtype)),e:()=>Object(o.a)(t,Object(i.a)(Object(De.a)(n),t.dtype))}}};var Me=n(250);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Le={kernelName:s.zc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Wt.a)(n,Object(h.a)(0)),r=Object(h.a)(Me.b),a=Object(h.a)(Me.a),s=Object(o.a)(t,a),u=Object(o.a)(Object(o.a)(t,r),Object(kt.a)(Object(i.a)(n,"float32")));return Object(Y.a)(e,s,u)}}}},ze={kernelName:s.Ac,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,Object(o.a)(n,Object(m.a)(Object(h.a)(1),n)))}}},Pe={kernelName:s.Bc,gradFunc:t=>({x:()=>Object(k.a)(t)})};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Be=n(176);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const We={kernelName:s.Cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(Object(Be.a)(Object(i.a)(n,"float32")),t)}}};var Ve=n(222);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue={kernelName:s.Dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(Object(Ve.a)(Object(i.a)(n,"float32")),t)}}};var Ge=n(117),He=n(161);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const qe={kernelName:s.Ec,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(He.parseSliceParams)(r,a,s),c=[];for(let e=0;e<t.rank;e++)c.push([o[e],i[e]-o[e]-u[e]]);return{x:()=>Object(Ge.a)(t,c)}}},Ke={kernelName:s.Fc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,s=Object(o.a)(t,r);return{logits:()=>Object(m.a)(s,Object(o.a)(Object(v.a)(s,[a],!0),r))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xe=n(149);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ye={kernelName:s.Gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,Object(Xe.a)(n))}}};var Je=n(150);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ze={kernelName:s.Hc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(Je.a)(t,r,a)}}};var Qe=n(98);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn={kernelName:s.Jc,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(Qe.a)(t,r)}}},en={kernelName:s.Kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(o.a)(Object(p.a)(Object(i.a)(n,"float32")),2))}}},nn={kernelName:s.Lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(t,Object(o.a)(Object(i.a)(n,"float32"),2))}}},rn={kernelName:s.Mc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(h.a)(2);return{a:()=>Object(o.a)(t,Object(o.a)(a,Object(m.a)(n,r))),b:()=>Object(o.a)(t,Object(o.a)(a,Object(m.a)(r,n)))}}},an={kernelName:s.Nc,gradFunc:t=>({x:()=>Object(k.a)(t)})},sn={kernelName:s.Pc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=y.a(n.shape,r.shape);return{a:()=>{let e=t;const r=y.c(n.shape,a);return r.length>0&&(e=Object(v.a)(e,r)),Object(x.a)(e,n.shape)},b:()=>{let e=t;const n=y.c(r.shape,a);return n.length>0&&(e=Object(v.a)(e,n)),Object(x.a)(Object(d.a)(e),r.shape)}}}},on={kernelName:s.Qc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:s}=n;Object(_.I)(s,r.shape).forEach(t=>{a[t]=1});const i=Object(x.a)(t,a),u=Object(o.a)(i,Object(ae.a)(r.shape,"float32"));return{x:()=>u}}},un={kernelName:s.Rc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(l.a)(t,Object(f.a)(Object(Be.a)(n)))}}},cn={kernelName:s.Sc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(o.a)(Object(m.a)(Object(h.a)(1),Object(f.a)(n)),t)}}},ln={kernelName:s.Tc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(k.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(S.a)(e,Object(ue.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)e=Object(S.a)(e,Object(ue.a)(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)e=Object(S.a)(e,Object(ue.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)e=Object(S.a)(e,Object(ue.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},dn={kernelName:s.Wc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,s=ft.h(a);return{x:()=>Object(bt.a)(t,s)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hn=n(128);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:s.Yc,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(hn.a)(t,a)}}};var fn=n(153),mn=n(155),bn=n(148);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gn={kernelName:s.Zc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(bn.a)(e,Object(k.a)(e)),r=Object(mn.a)(t,n);let a=Object(q.a)(e,Object(h.a)(0,"int32"));const s=r.rank-a.rank;for(let t=0;t<s;++t)a=Object(fn.a)(a,t+1);a=Object(X.a)(a,Object(ae.a)(r.shape,"bool"));const i=Object(k.a)(r);return Object(Y.a)(a,r,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,n)}}};const yn={kernelName:s.ad,gradFunc:t=>({x:()=>Object(k.a)(t)})};var xn=n(146);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vn=[c,b,g,O,w,I,N,j,C,T,E,A,M,z,B,V,U,G,H,J,Z,tt,it,at,ct,dt,pt,gt,vt,Ot,Ie,wt,It,Nt,jt,St,Tt,Ct,$t,_t,Mt,Lt,zt,Pt,Bt,Vt,Ut,Gt,Ht,Kt,Jt,Jt,Qt,ee,re,se,ie,oe,ce,de,he,pe,me,be,ye,xe,xe,we,ke,Ne,je,Se,Ce,Te,Ee,$e,Re,_e,Fe,Le,ze,Pe,We,Ue,qe,Ke,Ye,Ze,Ze,tn,tn,en,rn,nn,an,sn,on,un,cn,ln,dn,pn,gn,yn];for(const t of vn)Object(xn.e)(t);var On=n(123),wn=n(77);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(On.a)(this)};var kn=n(270);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(kn.a)(this)};var In=n(271);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(In.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.add=function(t){return this.throwIfDisposed(),Object(S.a)(this,t)};var Nn=n(213);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.all=function(t,e){return this.throwIfDisposed(),Object(Nn.a)(this,t,e)};var jn=n(214);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.any=function(t,e){return this.throwIfDisposed(),Object(jn.a)(this,t,e)};var Sn=n(215);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.argMax=function(t){return this.throwIfDisposed(),Object(Sn.a)(this,t)};var Cn=n(216);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.argMin=function(t){return this.throwIfDisposed(),Object(Cn.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(_.b)(1===this.size,()=>"The array must have only 1 element."),Object(x.a)(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.asType=function(t){return this.throwIfDisposed(),Object(i.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(x.a)(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(x.a)(this,[t,e])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(x.a)(this,[t,e,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(x.a)(this,[t,e,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(x.a)(this,[t,e,n,r,a])};var Tn=n(273);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Tn.a)(this)};var En=n(274);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(En.a)(this)};var An=n(275);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(An.a)(this)};var $n=n(217);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.atan2=function(t){return this.throwIfDisposed(),Object($n.a)(this,t)};var Rn=n(276);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Rn.a)(this)};var _n=n(174);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(_n.a)(this,t,e,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(Je.a)(this,t,e)};var Dn=n(143);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Dn.a)(this,t,e,n,r,a)};var Fn=n(175);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(Fn.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.cast=function(t){return this.throwIfDisposed(),Object(i.a)(this,t)};var Mn=n(279);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Mn.a)(this)};var Ln=n(280);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(Ln.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof wn.a&&(t=[t]),Object(Qe.a)([this,...t],e)};var zn=n(219);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.conv1d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(zn.a)(this,t,e,n,r,a,s)};var Pn=n(220);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Pn.a)(this,t,e,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.conv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(st.a)(this,t,e,n,r,a,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Be.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Ve.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(mt.a)(this,t,e,n)};var Bn=n(223);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Bn.a)(this,t,e)};var Wn=n(151);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.depthwiseConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Wn.a)(this,t,e,n,r,a,s)};var Vn=n(224);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Vn.a)(this,t,e,n,r,a)};var Un=n(225);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(Un.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.div=function(t){return this.throwIfDisposed(),Object(l.a)(this,t)};var Gn=n(226);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.dot=function(t){return this.throwIfDisposed(),Object(Gn.a)(this,t)};var Hn=n(178);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(Hn.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.equal=function(t){return this.throwIfDisposed(),Object(Xt.a)(this,t)};var qn=n(284);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(qn.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(kt.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.expandDims=function(t){return this.throwIfDisposed(),Object(fn.a)(this,t)};var Kn=n(285);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(Kn.a)(this)};var Xn=n(195);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(Xn.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(x.a)(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(le.a)(this)};var Yn=n(172);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(Yn.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.gather=function(t,e){return this.throwIfDisposed(),Object(mn.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(q.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.greater=function(t){return this.throwIfDisposed(),Object(Wt.a)(this,t)};var Jn=n(196);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(Jn.a)(this)};var Zn=n(243);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(Zn.a)(this)};var Qn=n(286);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(Qn.a)(this)};var tr=n(287);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(tr.a)(this)};var er=n(288);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(er.a)(this)};var nr=n(181);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(nr.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(K.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.less=function(t){return this.throwIfDisposed(),Object(Zt.a)(this,t)};var rr=n(227);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(rr.a)(this,t,e,n,r)};var ar=n(290);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(ar.a)(this)};var sr=n(291);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(sr.a)(this,t)};var ir=n(183);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(ir.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.log=function(){return this.throwIfDisposed(),Object(ve.a)(this)};var or=n(228);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(or.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(X.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(De.a)(this)};var ur=n(184);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(ur.a)(this,t)};var cr=n(230);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(cr.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(P.a)(this,t,e,n)};var lr=n(185);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(lr.a)(this,t,e,n,r)};var dr=n(133);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.max=function(t,e){return this.throwIfDisposed(),Object(dr.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.maximum=function(t){return this.throwIfDisposed(),Object(bn.a)(this,t)};var hr=n(157);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.mean=function(t,e){return this.throwIfDisposed(),Object(hr.a)(this,t,e)};var pr=n(186);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.min=function(t,e){return this.throwIfDisposed(),Object(pr.a)(this,t,e)};var fr=n(187);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.minimum=function(t){return this.throwIfDisposed(),Object(fr.a)(this,t)};var mr=n(231);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(mr.a)(this,t,e)};var br=n(232);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.mod=function(t){return this.throwIfDisposed(),Object(br.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.mul=function(t){return this.throwIfDisposed(),Object(o.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(d.a)(this)};var gr=n(200);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(gr.a)(this,t,e,n)};var yr=n(188);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.notEqual=function(t){return this.throwIfDisposed(),Object(yr.a)(this,t)};var xr=n(189);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(xr.a)(this,t,e,n)};var vr=n(295);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(vr.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.pad=function(t,e){return this.throwIfDisposed(),Object(Ge.a)(this,t,e)};var Or=n(233);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Or.a)(this,t,e,n,r,a)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.pow=function(t){return this.throwIfDisposed(),Object(Oe.a)(this,t)};var wr=n(190);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.prelu=function(t){return this.throwIfDisposed(),Object(wr.a)(this,t)};var kr=n(234);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.prod=function(t,e){return this.throwIfDisposed(),Object(kr.a)(this,t,e)};var Ir=n(296);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Ir.a)(this)};var Nr=n(137);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Nr.a)(this)};var jr=n(194);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(jr.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(x.a)(this,t.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.reshape=function(t){return this.throwIfDisposed(),Object(x.a)(this,t)};var Sr=n(307);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Object(Sr.a)(this,t,e,n)};var Cr=n(306);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Object(Cr.a)(this,t,e,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.reverse=function(t){return this.throwIfDisposed(),Object(Ae.a)(this,t)};var Tr=n(197);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Tr.a)(this)};var Er=n(297);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Er.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Et.a)(this)};var Ar=n(239);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Ar.a)(this)};var $r=n(240);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.separableConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object($r.a)(this,t,e,n,r,a,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Xe.a)(this)};var Rr=n(299);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Rr.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(lt.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(ht.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.slice=function(t,e){return this.throwIfDisposed(),Object(ue.a)(this,t,e)};var _r=n(300);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.softmax=function(t){return this.throwIfDisposed(),Object(_r.a)(this,t)};var Dr=n(229);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Dr.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(W.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.split=function(t,e){return this.throwIfDisposed(),Object(Q.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(p.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.square=function(){return this.throwIfDisposed(),Object(f.a)(this)};var Fr=n(198);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(Fr.a)(this,t)};var Mr=n(159);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.squeeze=function(t){return this.throwIfDisposed(),Object(Mr.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof wn.a?[this,t]:[this,...t];return Object(hn.a)(n,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.step=function(t){return this.throwIfDisposed(),Object(u.a)(this,t)};var Lr=n(301);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.stridedSlice=function(t,e,n,r,a,s,i,o){return this.throwIfDisposed(),Object(Lr.a)(this,t,e,n,r,a,s,i,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.sub=function(t){return this.throwIfDisposed(),Object(m.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.sum=function(t,e){return this.throwIfDisposed(),Object(v.a)(this,t,e)};var zr=n(302);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(zr.a)(this)};var Pr=n(218);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Pr.a)(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.tile=function(t){return this.throwIfDisposed(),Object(At.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(i.a)(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(i.a)(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(i.a)(this,"int32")};var Br=n(245);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(wn.d)().prototype.topk=function(t,e){return this.throwIfDisposed(),Object(Br.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.transpose=function(t){return this.throwIfDisposed(),Object(bt.a)(this,t)};var Wr=n(246);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Vr;function Ur(){return null==Vr&&(Vr=Object(a.backend)().epsilon()),Vr}Object(wn.d)().prototype.unique=function(t){return this.throwIfDisposed(),Object(Wr.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(Rt.a)(this,t,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.unstack=function(t){return this.throwIfDisposed(),Object(ge.a)(this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.where=function(t,e){return this.throwIfDisposed(),Object(Y.a)(t,this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(wn.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(k.a)(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Gr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Gr.prototype)}}class Hr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Hr.prototype)}}class qr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,qr.prototype)}}class Kr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kr.prototype)}}class Xr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Xr.prototype)}}Error;
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yr(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function Jr(t,e){if(!t)throw new Xr(e)}function Zr(t,e){let n=0;for(const r of t)r===e&&n++;return n}function Qr(t){return 1===t.length?t[0]:t}function ta(t){return Array.isArray(t)?t:[t]}function ea(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function na(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let ra={};function aa(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function sa(t,e={},n={},r="object",a=!1){if("string"==typeof t){const a=t;let s;if(a in n)s=n[a];else if(a in ra)s=ra[a];else if(s=e[a],null==s)throw new qr(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new qr(r+": Improper config format: "+JSON.stringify(s)+".\n'className' and 'config' must set.");const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in ra?[o,u]=ra.className:i in e&&([o,u]=e[i]),null==o)throw new qr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const e of Object.keys(ra))t[e]=ra[e];for(const e of Object.keys(n))t[e]=n[e];s.config.customObjects=t;const e=Object.assign({},ra);for(const t of Object.keys(n))ra[t]=n[t];!function t(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else{const n=Object.keys(e);for(const r of n){const n=e[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?t(n):e[r]=n.value)}}}(s.config);const r=u(o,s.config,n,a);return ra=Object.assign({},e),r}{const t=Object.assign({},ra);for(const t of Object.keys(n))ra[t]=n[t];const e=new o(s.config);return ra=Object.assign({},t),e}}}function ia(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function oa(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function ua(t){if(null==t)throw new qr("Invalid value in obj: "+JSON.stringify(t));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function ca(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new qr(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function la(t,e,n=0,r=1/0){return Jr(n>=0),Jr(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function da(t,e){Array.isArray(t)?(a.util.assert(t.length>0,()=>e+" is unexpectedly an empty array."),t.forEach((t,n)=>da(t,`element ${n+1} of ${e}`))):a.util.assert(Number.isInteger(t)&&t>0,()=>`Expected ${e} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}(t)+".")}function ha(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function pa(t,e){return Object(a.tidy)(()=>a.sqrt(a.sum(a.mul(t,t),e,!0)))}class fa extends a.serialization.Serializable{getConfig(){return{}}}class ma extends fa{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.tidy)(()=>{const e=pa(t,this.axis),n=a.clipByValue(e,0,this.maxValue);return a.mul(t,a.div(n,a.add(Ur(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ma.className="MaxNorm",a.serialization.registerClass(ma);class ba extends fa{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.tidy)(()=>a.div(t,a.add(Ur(),pa(t,this.axis))))}getConfig(){return{axis:this.axis}}}ba.className="UnitNorm",a.serialization.registerClass(ba);class ga extends fa{apply(t){return a.relu(t)}}ga.className="NonNeg",a.serialization.registerClass(ga);class ya extends fa{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.tidy)(()=>{const e=pa(t,this.axis),n=a.add(a.mul(this.rate,a.clipByValue(e,this.minValue,this.maxValue)),a.mul(1-this.rate,e));return a.mul(t,a.div(n,a.add(Ur(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ya.className="MinMaxNorm",a.serialization.registerClass(ya);const xa={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function va(t){return aa(t)}function Oa(t,e={}){return sa(t,a.serialization.SerializationMap.getMap().classNameMap,e,"constraint")}function wa(t){if(null==t)return null;if("string"==typeof t){return Oa({className:t in xa?xa[t]:t,config:{}})}return t instanceof fa?t:Oa(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const ka=["channelsFirst","channelsLast"],Ia=["nearest","bilinear"],Na=["valid","same","causal"],ja=["max","avg"],Sa=["sum","mul","concat","ave"],Ca=new Map;function Ta(t){ca(ka,"DataFormat",t)}function Ea(t){ca(Na,"PaddingMode",t)}function Aa(t){ca(ja,"PoolMode",t)}const $a=[];function Ra(t,e){$a.push(t);try{const t=e();return $a.pop(),t}catch(t){throw $a.pop(),t}}function _a(t){if(!Ma(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===$a.length?"":$a.join("/")+"/")+t}function Da(t){if(!Ma(t))throw new Error("Not a valid tensor name: '"+t+"'");Ca.has(t)||Ca.set(t,0);const e=Ca.get(t);if(Ca.set(t,Ca.get(t)+1),e>0){const n=`${t}_${e}`;return Ca.set(n,1),n}return t}const Fa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ma(t){return!!t.match(Fa)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function La(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function za(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(a.tensor1d)(t)}function Pa(t){return a.min(za(t)).dataSync()[0]}function Ba(t){return a.max(za(t)).dataSync()[0]}function Wa(t,e){if(e<t)throw new qr(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Va(t,e){return t.asType(e)}function Ua(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function Ga(t,e,n){return Object(a.tidy)(()=>{switch(t.rank){case 1:return a.slice1d(t,e,n);case 2:return a.slice2d(t,[e,0],[n,t.shape[1]]);case 3:return a.slice3d(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return a.slice4d(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return a.slice(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return a.slice(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new qr("sliceAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}})}function Ha(t,e,n){return Object(a.tidy)(()=>{switch(t.rank){case 1:return a.slice1d(t,e,n);case 2:return a.slice2d(t,[0,e],[t.shape[0],n]);case 3:return a.slice3d(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return a.slice4d(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new qr("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function qa(t,e,n,r){return Object(a.tidy)(()=>{switch(t.rank){case 1:return a.slice1d(t,e,n);case 2:switch(r){case 1:return Ga(t,e,n);case 2:return Ha(t,e,n);default:throw new qr("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return Ga(t,e,n);case 2:return a.slice3d(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return Ha(t,e,n);default:throw new qr("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return Ga(t,e,n);case 2:return a.slice4d(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return a.slice4d(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return Ha(t,e,n);default:throw new qr("The axis is not within the rank of the tensor "+r)}default:throw new qr("sliceAlongLastAxis() received an unsupported tensor rank: "+t.rank)}})}function Ka(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),a.concat(t,e)}function Xa(t,e){switch(t.rank){case 1:return a.concat1d([t,e]);case 2:return a.concat2d([t,e],0);case 3:return a.concat3d([t,e],0);case 4:return a.concat4d([t,e],0);default:throw new qr("concatAlongFirstAxis() received an unsupported tensor rank: "+t.rank)}}function Ya(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new qr(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return a.tile(t,e)}function Ja(t,e=0,n=1,r,s){return a.randomNormal(t,e,n,r,s)}function Za(t,e,n,r){if(t.rank<2||e.rank<2)throw new Kr(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Kr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = `+e.shape)}if(2===t.rank&&2===e.rank){const s=!1,i=!1;return a.fused.matMul({a:t,b:e,transposeA:s,transposeB:i,bias:r?es(t.rank,r,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),i=s.pop();t=t.reshape([-1,i]);const o=e.shape.slice(),u=o.pop(),c=o.pop(),l=[...o,u],d=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(d).reshape([c,-1]);const h=[...s,...l],p=!1,f=!1;return a.fused.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:r?es(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function Qa(t,e,n){return Object(a.tidy)(()=>(e=Array.isArray(e)?Object(a.tensor1d)(e,"int32"):e.toInt(),a.gather(t,e,n)))}function ts(t){return a.mul(t,t)}function es(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new qr("Unexpected bias dimensions: "+e.rank+"; expected it to be 1 or "+t);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new qr("Unsupported input rank by biasAdd: "+e.rank)}function ns(t,e,n){return Object(a.tidy)(()=>(null==n&&(n="channelsLast"),Ta(n),t.add(es(t.rank,e,n))))}function rs(t,e,n,r){return Object(a.tidy)(()=>a.dropout(t,e,n,r))}function as(t,e,n=!1){return n?t():e()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ss=["fanIn","fanOut","fanAvg"],is=["normal","uniform","truncatedNormal"];class os extends a.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class us extends os{apply(t,e){return Object(a.zeros)(t,e)}}us.className="Zeros",a.serialization.registerClass(us);class cs extends os{apply(t,e){return Object(a.ones)(t,e)}}cs.className="Ones",a.serialization.registerClass(cs);class ls extends os{constructor(t){if(super(),"object"!=typeof t)throw new qr("Expected argument of type ConstantConfig but got "+t);if(void 0===t.value)throw new qr("config must have value set but got "+t);this.value=t.value}apply(t,e){return Object(a.tidy)(()=>Object(a.mul)(Object(a.scalar)(this.value),Object(a.ones)(t,e)))}getConfig(){return{value:this.value}}}ls.className="Constant",a.serialization.registerClass(ls);class ds extends os{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(a.randomUniform)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ds.className="RandomUniform",a.serialization.registerClass(ds);class hs extends os{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Kr(`randomNormal does not support dType ${e}.`);return Ja(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hs.className="RandomNormal",a.serialization.registerClass(hs);class ps extends os{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Kr(`truncatedNormal does not support dType ${e}.`);return Object(a.truncatedNormal)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ps.className="TruncatedNormal",a.serialization.registerClass(ps);class fs extends os{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(a.tidy)(()=>{if(2!==t.length||t[0]!==t[1])throw new qr("Identity matrix initializer can only be used for 2D square matrices.");return Object(a.mul)(this.gain,Object(a.eye)(t[0]))})}getConfig(){return{gain:this.gain}}}fs.className="Identity",a.serialization.registerClass(fs);class ms extends os{constructor(t){if(super(),t.scale<0)throw new qr("scale must be a positive float. Got: "+t.scale);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,ca(ss,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){ca(is,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Ta(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=La(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=La(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=La(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new Kr(`${this.getClassName()} does not support dType ${e}.`);return Object(a.truncatedNormal)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return Object(a.randomUniform)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ms.className="VarianceScaling",a.serialization.registerClass(ms);class bs extends ms{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ms.className}}bs.className="GlorotUniform",a.serialization.registerClass(bs);class gs extends ms{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ms.className}}gs.className="GlorotNormal",a.serialization.registerClass(gs);class ys extends ms{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ms.className}}ys.className="HeNormal",a.serialization.registerClass(ys);class xs extends ms{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ms.className}}xs.className="HeUniform",a.serialization.registerClass(xs);class vs extends ms{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return ms.className}}vs.className="LeCunNormal",a.serialization.registerClass(vs);class Os extends ms{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return ms.className}}Os.className="LeCunNormal",a.serialization.registerClass(Os);class ws extends os{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new Kr("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(a.tidy)(()=>{if(t.length<2)throw new Kr("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=Ja(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=a.linalg.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(a.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}ws.className="Orthogonal",a.serialization.registerClass(ws);const ks={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Is(t,e={}){return sa(t,a.serialization.SerializationMap.getMap().classNameMap,e,"initializer")}function Ns(t){return aa(t)}function js(t){if("string"==typeof t){const e=t in ks?ks[t]:t;if("GlorotNormal"===e)return new gs;if("GlorotUniform"===e)return new bs;if("HeNormal"===e)return new ys;if("HeUniform"===e)return new xs;if("LeCunNormal"===e)return new vs;if("LeCunUniform"===e)return new Os;{const t={};return t.className=e,t.config={},Is(t)}}return t instanceof os?t:Is(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Ss=0;function Cs(){return Ss++}const Ts={};function Es(t=""){return t in Ts||(Ts[t]=0),Ts[t]+=1,t+Ts[t].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function As(t){return Array.isArray(t)&&Array.isArray(t[0])}function $s(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Rs(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new qr("Expected Tensor length to be 1; got "+t.length);e=t[0]}else e=t;return e}function _s(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new qr("Expected exactly 1 Shape; got "+t.length)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ds(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fs{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Cs(),n=null==n?"Variable":n,this.originalName=_a(n),this.name=Da(this.originalName),this.trainable_=r,this.constraint=s,this.val=a.variable(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Ms(t){return t.map(t=>t.read())}function Ls(t){t.forEach(t=>{t[0].write(t[1])})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class zs{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ps{constructor(t,e,n,r,a,s,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Cs(),null!=s&&(this.originalName=_a(s),this.name=Da(this.originalName)),this.rank=e.length}}let Bs=0;class Ws{constructor(t,e){this.callArgs=e,this.id=Bs++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Vs=0;class Us extends a.serialization.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Vs++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=ea(t)+"_"+Es(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Hr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new qr(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Qr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Qr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Gr("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Gr("Layer "+this.name+" is not connected, no input to return.");return Qr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Gr("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Gr("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Qr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ta(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=ta(this.inputSpec);if(t.length!==e.length)throw new qr(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: `+t);for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new qr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),s=a.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new qr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=ta(t);let r=!0;for(const t of n)if(!(t instanceof Ps)){r=!1;break}let a=!0;for(const t of n)if(t instanceof Ps){a=!1;break}if(r===a)throw new qr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ra(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of ta(t))e.push(n.shape);this.build(Qr(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=ta(r),s=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=Qr(s),null!=this.activityRegularizer)throw new Kr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=ta(t);const e=[];for(const n of t)e.push(n.shape);return Qr(e)}(t),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Ps(s,n,this,ta(t),e,this.name,r)):new Ps(s,r,this,ta(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new Kr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(t)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Gr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Gr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Hr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ds(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Ms(t?this.trainableWeights:this.weights)}setWeights(t){Object(a.tidy)(()=>{const e=this.weights;if(e.length!==t.length)throw new qr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Ms(e);for(let s=0;s<r.length;++s){const i=r[s],o=e[s],u=t[s];if(!a.util.arraysEqual(i.shape,u.shape))throw new qr(`Layer weight shape ${i.shape} not compatible with provided weight shape `+u.shape);n.push([o,u])}Ls(n)})}addWeight(t,e,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(t))throw new qr(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=js("zeros"));const o=r.apply(e,n),u=new Fs(o,n,t,s,i);return o.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=ta(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,n,r,a,s,i=null){const o=ta(t);e=ta(e),n=ta(n),r=ta(r),a=$s(a),s=$s(s);const u=[],c=[],l=[];for(const t of o)u.push(t.sourceLayer),c.push(t.nodeIndex),l.push(t.tensorIndex);new Ws({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Gs extends Us{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Es("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new qr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new qr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new qr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Ps(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new qr("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Hs(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new qr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new Gs({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function qs(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const s=t[a];if("number"!=typeof s){const t=s;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Object(a.dispose)(r)}}function Ks(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Xs;Gs.className="InputLayer",a.serialization.registerClass(Gs),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(Xs||(Xs={}));class Ys{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Js{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Zs extends Ys{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Object(a.tidy)(()=>Object(a.add)(this.totals[t],Object(a.mul)(r,n)));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Object(a.tidy)(()=>{const n=Object(a.mul)(Object(a.div)(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Object(a.keep)(e[t])}))}}class Qs extends Ys{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];t.push(i.data()),e.push(r),n.push(s)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class ti extends Ys{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=a.util.now();return(...s)=>{const i=a.util.now();return i-r<e||(r=i,n=t(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await qs(n),r.push(this.yield(t,e,n))),r.push(Object(a.nextFrame)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await qs(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await qs(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(a.nextFrame)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await qs(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await qs(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(a.nextFrame)()):a.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await qs(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await qs(t),await this.trainEnd(t))}}function ei(t,e){if(null==t&&(t={}),t instanceof Ys)return[t];if(Array.isArray(t)&&t[0]instanceof Ys)return t;return ta(t).map(t=>new ti(t,e))}class ni{constructor(){}static registerCallbackConstructor(t,e){a.util.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, but got "+t),ni.checkForDuplicate(e),null==ni.constructors[t]&&(ni.constructors[t]=[]),ni.constructors[t].push(e)}static checkForDuplicate(t){for(const e in ni.constructors){ni.constructors[+e].forEach(e=>{if(e===t)throw new qr("Duplicate callback constructor.")})}}static clear(){ni.constructors={}}static createCallbacks(t){const e=[];for(const n in ni.constructors){const r=+n;t>=r&&e.push(...ni.constructors[r])}return e.map(t=>new t)}}function ri(t,e,n,r,a,s,i,o,u){const c=new Qs,l=[new Zs,...ni.createCallbacks(e)];null!=t&&l.push(...t),l.push(c);const d=new Js(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:d,history:c}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ai(t,e={},n=!1){return sa(t,a.serialization.SerializationMap.getMap().classNameMap,e,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function si(t,e){return Object(a.tidy)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=a.sum(ts(t),e,!0),r=a.fill(n.shape,Ur()),s=a.sqrt(a.maximum(n,r));return a.div(t,s)})}function ii(t,e){return Object(a.tidy)(()=>a.mean(ts(a.sub(e,t)),-1))}function oi(t,e){return Object(a.tidy)(()=>a.mean(a.abs(a.sub(e,t)),-1))}function ui(t,e){return Object(a.tidy)(()=>{const n=a.sub(t,e),r=a.clipByValue(a.abs(t),Ur(),Number.MAX_VALUE),s=a.abs(a.div(n,r));return a.mul(100,a.mean(s,-1))})}function ci(t,e){return Object(a.tidy)(()=>{const n=a.clipByValue(e,Ur(),Number.MAX_VALUE),r=a.log(a.add(1,n)),s=a.clipByValue(t,Ur(),Number.MAX_VALUE),i=a.log(a.add(1,s));return a.mean(ts(a.sub(r,i)),-1)})}function li(t,e,n=!1){return Object(a.tidy)(()=>{if(n)e=a.softmax(e);else{const t=a.sum(e,e.shape.length-1,!0);e=a.div(e,t)}return e=a.clipByValue(e,Ur(),1-Ur()),a.neg(a.sum(a.mul(t.toFloat(),a.log(e)),e.shape.length-1))})}function di(t,e,n=!1){return Object(a.tidy)(()=>{const r=a.floor(function(t){const e=[La(t.shape)];return t.reshape(e)}(t)).toInt(),s=(e=a.clipByValue(e,Ur(),1-Ur())).shape;return li(a.oneHot(r,s[s.length-1]).reshape(s),e,n)})}function hi(t,e){return Object(a.tidy)(()=>{let n;return n=a.clipByValue(e,Ur(),1-Ur()),n=a.log(a.div(n,a.sub(1,n))),a.mean(function(t,e){if(!a.util.arraysEqual(t.shape,e.shape))throw new qr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(a.tidy)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function pi(t,e){return Object(a.tidy)(()=>{const n=a.clipByValue(t,Ur(),1),r=a.clipByValue(e,Ur(),1);return a.sum(a.mul(t,a.log(a.div(n,r))),-1)})}function fi(t,e){return Object(a.tidy)(()=>{const n=si(t,-1),r=si(e,-1),s=a.mul(n,r);return a.neg(a.sum(s,-1))})}ni.constructors={};const mi={meanSquaredError:ii,meanAbsoluteError:oi,meanAbsolutePercentageError:ui,meanSquaredLogarithmicError:ci,squaredHinge:function(t,e){return Object(a.tidy)(()=>{const n=a.maximum(0,a.sub(1,a.mul(t,e)));return a.mean(ts(n),-1)})},hinge:function(t,e){return Object(a.tidy)(()=>{const n=a.maximum(0,a.sub(1,a.mul(t,e)));return a.mean(n,-1)})},categoricalHinge:function(t,e){return Object(a.tidy)(()=>{const n=a.sum(a.mul(t,e),-1),r=a.max(a.mul(a.sub(1,t),e),-1);return a.maximum(0,a.add(1,a.sub(r,n)))})},logcosh:function(t,e){return Object(a.tidy)(()=>{const n=Math.log(2),r=a.sub(e,t),s=a.sub(a.add(r,a.softplus(a.mul(-2,r))),n);return a.mean(s,-1)})},categoricalCrossentropy:li,sparseCategoricalCrossentropy:di,binaryCrossentropy:hi,kullbackLeiblerDivergence:pi,poisson:function(t,e){return Object(a.tidy)(()=>{const n=a.log(a.add(Ur(),e));return a.mean(a.sub(e,a.mul(t,n)),-1)})},cosineProximity:fi};function bi(t){if("string"==typeof t){if(t in mi)return mi[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new qr(e)}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gi(t,e){return Object(a.tidy)(()=>{const n=a.mul(.5,a.onesLike(e)),r=Va(a.greater(e,n),t.dtype);return a.mean(a.equal(t,r),-1)})}function yi(t,e){return Object(a.tidy)(()=>Va(a.equal(a.argMax(t,-1),a.argMax(e,-1)),"float32"))}function xi(t,e){return Object(a.tidy)(()=>a.logicalAnd(t.equal(1),e.equal(1)).sum().cast("float32"))}function vi(t,e){return Object(a.tidy)(()=>{const n=xi(t,e),r=function(t,e){return Object(a.tidy)(()=>a.logicalAnd(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),s=n.add(r);return a.where(a.greater(s,0),n.div(s),0).cast("float32")})}function Oi(t,e){return hi(t,e)}function wi(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),a.equal(t,e).asType("float32")}const ki=li,Ii=di,Ni={binaryAccuracy:gi,categoricalAccuracy:yi,precision:vi,categoricalCrossentropy:ki,sparseCategoricalCrossentropy:Ii,mse:ii,MSE:ii,mae:oi,MAE:oi,mape:ui,MAPE:ui,cosine:fi};function ji(t){if("string"==typeof t&&t in Ni)return Ni[t];if("string"!=typeof t&&null!=t)return t;throw new qr("Unknown metric "+t)}function Si(t){if(Jr(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(mi))if(mi[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Ni))if(Ni[n]===t){e=n;break}return void 0!==e?e:t.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ci(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!function t(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e);for(const r of n){if("string"!=typeof r)return!1;if(!t(e[r]))return!1}return!0}if(Array.isArray(e)){for(const n of e)if(!t(n))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ti(t,e,n,r=console.log){const a=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let i;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!a){s.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),Ei(s,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)a?Ai(o[t],n,r):$i(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?Ds(t.collectedTrainableWeights):Ds(t.trainableWeights);return e}(t),c=Ds(t.nonTrainableWeights);r("Total params: "+(u+c)),r("Trainable params: "+u),r("Non-trainable params: "+c),r("_".repeat(e))}function Ei(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function Ai(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}Ei([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function $i(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(t){a="multiple"}const s=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],a=e.tensorIndices[t];s.push(`${n}[${r}][${a}]`)}const i=t.name,o=t.getClassName(),u=0===s.length?"":s[0];Ei([`${i} (${o})`,a,t.countParams().toString(),u],e,r);for(let t=1;t<s.length;++t)Ei(["","","",s[t]],e,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ri(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function _i(t,e){if(null===t)return null;if("string"==typeof t)return na(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];Ri(e,a,r)?n.push(r):n.push(_i(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=na(n);e[t]=_i(r,t)}}return e}}class Di{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Di)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new qr(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(a.cast)(e,t.dtype)}catch(n){throw new qr(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ps){if(null==this.id2Value[t.id])throw new qr("Nonexistent key: "+t.name);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new qr("Feed dict has no SymbolicTensor name: "+t);return this.id2Value[e]}}getMask(t){if(t instanceof Ps){if(null==this.id2Value[t.id])throw new qr("Nonexistent key: "+t.name);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new qr("Feed dict has no SymbolicTensor name: "+t);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(a.dispose)(this.id2Mask)}}const Fi={},Mi={};function Li(t,e,n,r){const s=null!=n&&n.training,i=Array.isArray(t),o=i?t:[t],u=o.map(t=>t.name),c=[],l=e.names();for(const t of u)-1!==l.indexOf(t)?c.push(e.getValue(t)):c.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=u.join(",")+"|"+e.names().join(",");let h,p;if(null==Fi[d]){const t=function(t,e){a.util.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const a=Pi(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of t){const{sorted:t,recipientMap:i}=Pi(s,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach(e=>r[t].add(e))}}return{sorted:n,recipientCounts:zi(r)}}(o,e);h=t.sorted,p=t.recipientCounts,Fi[d]=h,Mi[d]=p}h=Fi[d],p={},s||Object.assign(p,Mi[d]);const f=new Di(e);for(let t=0;t<h.length;++t){if(null!=r){const t=Object(a.memory)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const i=h[t],o=i.sourceLayer;if(o instanceof Gs)continue;const l=[],d=[],m=[];let b=!1;for(const t of i.inputs){const n=f.getValue(t),r=f.getMask(t);l.push(n),d.push(r),null!=r&&(b=!0),s||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==u.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||m.push(n))}b&&((n=n||{}).mask=d[0]);const g=ta(o.apply(l,n));let y=null;o.supportsMasking&&(y=o.computeMask(l,d));const x=Bi(i),v=Array.isArray(x)?x:[x];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=u.indexOf(v[t].name);-1!==e&&(c[e]=g[t])}s||Object(a.dispose)(m)}return f.disposeMasks(),i?c:c[0]}function zi(t){const e={};for(const n in t)e[n]=t[n].size;return e}function Pi(t,e){const n=new Set,r=[],a={};for(const t of e.names())n.add(t);const s=[],i=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=i[i.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(s.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:a}}function Bi(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wi extends Us{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Es(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],oa(this.inputs).length!==this.inputs.length)throw new qr("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(t=>t.name));oa(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(t=>t.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;Jr(0===n,"input layer has >1 nodes"),Jr(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Gs))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},a={},s={},i=[],o=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new Hr(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(Wi.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let t=0;t<l;t++){const r=c.inputTensors[t],a=c.inboundLayers[t],s=c.nodeIndices[t],i=c.tensorIndices[t];o(r,e,n,a,s,i)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const t of this.outputs)o(t,u,c);const l=i.slice().reverse();for(const t of l){n[t.id]=t,t.id in e||(e[t.id]=0);let s=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];s=Math.max(s,i),r[t.outboundLayer.id]=s,a[t.outboundLayer.id]=t.outboundLayer,e[t.id]=s;for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],i=t.nodeIndices[r],o=a.inboundNodes[i],u=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const t in e){const r=e[t];r in d||(d[r]=[]),d[r].push(n[t])}const h={};for(const t in r){const e=r[t];e in h||(h[e]=[]),h[e].push(a[t])}let p=Object.keys(h).map(t=>parseInt(t,10)).sort(ia);this.layers=[];for(const t of p){const e=h[t];e.sort((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0});for(const t of e)t instanceof Wi&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map(t=>parseInt(t,10)).sort(ia);const f=this.inputs.slice(),m=[];for(const t of p)for(const e of d[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Hr("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${t.name}". The following previous layers were accessed without issue: `+m);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const b=this.layers.map(t=>t.name);for(const t of b){const e=b.filter(e=>e===t).length;if(1!==e)throw new Hr(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new qr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new qr("Duplicate weight name: "+e.originalName);n[e.originalName]=e,r++}const a=[];for(const r in t){let s=r;if(null==n[r]){const t=r.split("/");s=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[s])a.push([n[s],t[r]]);else if(e)throw new qr("Provided weight data has no target variable: "+r);delete n[s]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new qr(`${t.length} of ${r} weights are not set: `+t)}Ls(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.3.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=function t(e,n){if(null==e)return null;if("string"==typeof e)return ea(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const r=[],a=e.length;for(let s=0;s<a;++s){const a=e[s];Ri(n,s,a)?r.push(a):r.push(t(a,n))}return r}{const n={};for(const r of Object.keys(e)){const a=e[r],s=ea(r);n[s]="name"!==r&&"className"!==r||"string"!=typeof a?t(a,r):a}return n}}
/** @license See the LICENSE file. */(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(a.tidy)(()=>{t=ta(t);const n=new Di;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Li(this.outputs,n,e)})}computeMask(t,e){return Object(a.tidy)(()=>{let n;return t=ta(t),n=null==e?Yr(null,t.length):ta(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=$s(t);if(e.length!==this.inputLayers.length)throw new qr(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],a=e[t];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(ia);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const a=t.inboundLayers[e],s=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=$s(e.computeOutputShape(Qr(r))),s=e.inboundNodes.indexOf(t);for(let t=0;t<a.length;t++){n[`${e.name}_${s}_${t}`]=a[t]}}}const a=[],s=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],a=`${e.name}_${n}_${r}`;s.push(a)}for(let t=0;t<s.length;t++){const e=s[t];Jr(e in n),a.push(n[e])}return Qr(a)}runInternalGraph(t,e){null==e&&(e=Yr(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=t[r],i=e[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(ia);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,a=t.outputTensors,s=new Array;for(const t of r)t.id in n&&s.push(n[t.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=t.callArgs&&(c=t.callArgs),1===s.length){const[t,n]=s[0];null==c.mask&&(c.mask=n),o=ta(e.call(t,c)),u=ta(e.computeMask(t,n)),r=[t],i=[n]}else r=s.map(t=>t[0]),i=s.map(t=>t[1]),null==c.mask&&(c.mask=i),o=ta(e.call(r,c)),u=ta(e.computeMask(r,i));if(e.activityRegularizer)throw new Kr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=o[t],s=u[t];n[e.id]=[r,s]}}}}const a=[],s=[],i=[];for(const t of this.outputs){Jr(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),a.push(e),s.push(r)}return[a,s,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Wi?1:0;for(let r=0;r<t.inboundNodes.length;r++){const a=Wi.nodeKey(t,r);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new qr(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new qr("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new qr("No such layer: "+t)}calculateLosses(){return Object(a.tidy)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Wi.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),a=t.getConfig(),s=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],a=Wi.nodeKey(t,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: `+r.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=e[Wi.nodeKey(a,s)];null==u&&(u=0),t.push([a.name,u,o,i])}s.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],a=this.inputLayersNodeIndices[t],s=Wi.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=e[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const a=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],s=Wi.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=e[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];a.push([n.name,i,o])}return t.outputLayers=a,t}static fromConfig(t,e,n={},r=!1){const a={},s={};function i(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(t,e);const l=a[o];if(l.inboundNodes.length<=u)return void i(t,e);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&t.apply(Qr(n),r)}function u(t){const n=t.name,s=ai(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new qr("Corrupted configuration, expected array for nodeData: "+t);i(s,t)})}const c=e.name,l=e.layers;for(const t of l)u(t);for(;!ua(s);)for(const t of l){const e=a[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const d=[],h=[],p=e.inputLayers;for(const t of p){const e=t[0],n=t[1],r=t[2];Jr(e in a);const s=a[e].inboundNodes[n].outputTensors;d.push(s[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];Jr(e in a);const s=a[e].inboundNodes[n].outputTensors;h.push(s[r])}return new t({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new qr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(a.tidy)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Vi(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function Ui(t,e){return Vi(t,e,"classWeight")}async function Gi(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(a.tidy)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await e.data());Object(a.dispose)(e);const s=[];return r.forEach(t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])}),Object(a.tensor1d)(s,"float32")}return null}function Hi(t,e){return Object(a.mul)(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qi(t,e){let n,r;const s=e;n=s.xs,r=s.ys,a.util.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const i=Ki("input",t.inputNames,n),o=Ki("output",t.outputNames,r),u=i[0].shape[0];a.util.assert(i.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),a.util.assert(o.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let e=0;e<i.length;e++)a.util.assert(i[e].shape[0]===u,()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);for(let e=0;e<o.length;e++)a.util.assert(o[e].shape[0]===u,()=>`Batch size mismatch: output ${t.outputNames[e]} has ${o[e].shape[0]}; expected  ${u} based on input ${t.inputNames[0]}.`);return{xs:i,ys:o}}function Ki(t,e,n){if(n instanceof a.Tensor)return[n];if(Array.isArray(n))return a.util.assert(n.length===e.length,()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`),n;{const r=[];for(const a of e){if(null==n[a])throw new qr(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);r.push(n[a])}return r}}async function Xi(t,e,n){const r=null!=n.batchesPerEpoch;if(a.util.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),a.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),a.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs),a.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch),a.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let i,o;if(s)if(Yi(n.validationData))a.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches);else{const t=function(t){if(3===t.length)throw new Kr("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,o=t.ys}const u=t.makeTrainFunction(),c=t.getDedupedMetricsNames();let l;l=s?c.slice().concat(c.map(t=>"val_"+t)):c.slice();const d=ei(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=ri(d,h,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,l);p.setModel(t),t.history=f,await p.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await e.iterator();for(;m<n.epochs;){const l={};await p.onEpochBegin(m);let d=0,h=0;for(r||(b=await e.iterator());!r||d<n.batchesPerEpoch;){const e=await b.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+d+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=qi(t,e.value),i={};i.batch=h,i.size=r[0].shape[0],await p.onBatchBegin(h,i);const o=[];if(null!=n.classWeight){const e=Ui(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await Gi(s[t],null,e[t]))}const l=r.concat(s).concat(o),f=u(l);a.dispose(l);for(let t=0;t<c.length;++t){const e=c[t],n=f[t];i[e]=n,a.keep(n)}await p.onBatchEnd(h,i),Ks(i),h++,d++}if(r?d>=n.batchesPerEpoch:e.done){if(s){let e;e=Yi(n.validationData)?ta(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):ta(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_"+t.metricsNames[n]]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(m,l),m++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Yi(t){return"function"==typeof t.iterator}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Ji(t){a.util.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got "+t)}function Zi(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>Ga(t,e,n-e)):Ga(t,e,n-e)}function Qi(t,e){return a.tidy(()=>null==t?null:Array.isArray(t)?t.map(t=>Qi(t,e)):Qa(t,"int32"===e.dtype?e:e.toInt()))}function to(t,e){const n=[];let r=0,a=null;for(;r<t;)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function eo(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,o,u,c,l,d;t.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Ji(h);const p=!1,f=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,h);s=f[0],i=f[1],d=f[2];let m,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Kr("validationData including sample weights is not supported yet."):new qr("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+r.validationData+" is invalid.");o=r.validationData[0],u=r.validationData[1];const e=!0,n=await t.standardizeUserData(o,u,null,null,e,h);c=n[0],l=n[1],m=c.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){b=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];c=Zi(s,t,e),s=Zi(s,0,t),l=Zi(i,t,e),i=Zi(i,0,t),m=c.concat(l)}else null!=r.validationSteps&&(b=!0);const g=s.concat(i).concat(d);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let v,O;b?(t.makeTestFunction(),v=t.testFunction,O=x.slice().concat(x.map(t=>"val_"+t))):(v=null,m=[],O=x.slice());const w=ei(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,s,i,o,u,c,l,d,h,p,f,m){null==s&&(s=32),null==i&&(i=1),null==d&&(d=!0),null==p&&(p=0);let b=!1;if(null!=c&&null!=l&&(b=!0),null!=m&&(b=!0,null==f))throw new qr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=t.checkNumSamples(n,s,f,"steps_per_epoch");let y;null!=g&&(y=Wa(0,g)),null==o&&(o=1);const{callbackList:x,history:v}=ri(u,o,i,p,g,f,s,b,h);x.setModel(t),t.history=v,await x.onTrainBegin(),t.stopTraining_=!1;for(let o=p;o<i;++o){await x.onEpochBegin(o);const i={};if(null!=f)throw new Kr("stepsPerEpoch mode is not implemented yet.");{if("batch"===d)throw new Kr("batch shuffling is not implemneted yet");d&&a.util.shuffle(y);const o=Object(a.tensor1d)(y),u=to(g,s);for(let d=0;d<u.length;++d){const h={};if(await x.onBatchBegin(d,h),a.tidy(()=>{const p=u[d][0],f=u[d][1],m=Ga(o,p,f-p);h.batch=d,h.size=f-p;const g=Qi(n,m),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];h[e]=n,a.keep(n)}if(d===u.length-1&&b){const e=t.testLoop(c,l,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];a.keep(s),i["val_"+n]=s}}}),await x.onBatchEnd(d,h),Ks(h),t.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,x,h,r.epochs,r.verbose,w,v,m,r.shuffle,O,r.initialEpoch,null,null)}finally{t.isTraining=!1,ro(s,e),ro(i,n),ro(c,o),ro(l,u),null!=d&&a.dispose(d)}}function no(t){const e=[];t instanceof a.Tensor&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(Ua(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function ro(t,e){if(null==t)return;const n=[];if(e instanceof a.Tensor)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof a.Tensor)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const e in t){const a=t[e];-1===n.indexOf(a.id)&&r.push(a)}r.forEach(t=>{t.isDisposed||t.dispose()})}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ao(t){return Array.isArray(t)}function so(t){return!function(t){return t instanceof a.Tensor}(t)&&!ao(t)}function io(t,e,n,r=!0,a=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(ao(t)&&t.length>0)e=!0;else if(so(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new qr(`Error when checking model ${a} expected no data, but got `+t)}return[]}if(null==t)return e.map(t=>null);let s;if(so(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new qr(`No data provided for "${n}". Need data for each key in: `+e);s.push(t[n])}}else if(ao(t)){if((t=t).length!==e.length)throw new qr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): `+t);s=t}else{if(t=t,e.length>1)throw new qr(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+t.shape);s=[t]}if(s=no(s),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=s[t];if(i.shape.length!==n[t].length)throw new qr(`Error when checking ${a}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape `+i.shape);for(let s=0;s<n[t].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[t][s];if(null!=u&&u>=0&&o!==u)throw new qr(`Error when checking ${a}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return s}function oo(t,e,n,r=!0,a=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new qr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new qr(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(t.shape)+".");s=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=s[t];if(i.shape.length!==n[t].length)throw new qr(`Error when checking ${a}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let s=0;s<n[t].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[t][s];if(null!=u&&u!==o)throw new qr(`Error when checking ${a}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class uo extends Wi{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new qr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ti(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>a.train.adagrad(.01),Adadelta:()=>a.train.adadelta(1,.95,Ur()),Adam:()=>a.train.adam(.001,.9,.999,Ur()),Adamax:()=>a.train.adamax(.002,.9,.999,Ur(),0),RMSProp:()=>a.train.rmsprop(.001,.9,0,Ur()),SGD:()=>a.train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new qr("Unknown Optimizer "+t)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof a.Optimizer))throw new qr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new qr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map(t=>bi(t))}else{const n=bi(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new qr(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(bi(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ra("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+t);n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Ra("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===hi?-1!==["accuracy","acc"].indexOf(i)?r=gi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Oi):this.lossFunctions[t]===di?-1!==["accuracy","acc"].indexOf(i)?r=wi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ii):-1!==["accuracy","acc"].indexOf(i)?r=yi:-1!==["crossentropy","ce"].indexOf(i)&&(r=ki),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=ji(i);a=t,n=""+Si(i)}let e;Ra(n,()=>{e=a}),s(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Ji(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Qr(this.testLoop(i,s,r,n.verbose,n.steps))}finally{ro(a[0],t),ro(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let i=[];if(n.verbose>0)throw new Kr("Verbose mode is not implemented yet.");a.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches));const o="function"==typeof e.next?e:await e.iterator();let u=0,c=0;for(;!r||c<n.batches;){const e=await o.next();if(i=a.tidy(()=>{if(e.value){const{xs:n,ys:r}=qi(t,e.value),o=n.concat(r),l=a.tidy(()=>s(o));if(a.dispose(o),0===c)for(let t=0;t<l.length;++t)i.push(Object(a.scalar)(0));const d=o[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=i[t];i[t]=a.tidy(()=>a.add(i[t],a.mul(d,e))),c>0&&a.dispose(n)}a.dispose(l),u+=d,++c}return i}),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=a.div(i[t],u),a.dispose(e)}return Qr(i)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let a;if(null!=n){if(a=null,null!=e)throw new qr(`If ${r} is set, batchSize must be null or undefined.Got batchSize = `+e)}else{if(null==t)throw new qr("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new qr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),i=new Di;if(t instanceof a.Tensor&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new qr(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new qr("No value is provided for the model's input "+e.name);i.add(e,n)}const o=Li(s,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=Yr(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(t=>t.name);for(let r=0;r<t.length;++r){const i=s.indexOf(t[r]);if(-1!==i&&(e[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new qr("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return e}predictLoop(t,e=32,n=!1){return a.tidy(()=>{const r=this.checkNumSamples(t);if(n)throw new Kr("Verbose predictLoop() is not implemented yet.");const s=to(r,e),i=this.outputs.map(t=>[]);for(let e=0;e<s.length;++e){a.tidy(()=>{const n=s[e][0],r=s[e][1],a=Zi(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new Di(i);return Li(this.outputs,o)}).forEach((t,e)=>i[e].push(t))}return Qr(i.map(t=>a.concat(t,0)))})}predict(t,e={}){const n=no(t);oo(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Ji(r),this.predictLoop(n,r)}finally{ro(n,t)}}predictOnBatch(t){oo(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new Hr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===di?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=oa(t.map(t=>t.shape[0]));r.sort();const s=oa(e.map(t=>t.shape[0]));if(s.sort(),r.length>1)throw new qr("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map(t=>t.shape)));if(s.length>1)throw new qr("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map(t=>t.shape)));if(r.length>0&&s.length>0&&!a.util.arraysEqual(r,s))throw new qr(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=io(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=io(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[ii,hi,li];for(let a=0;a<t.length;++a){const s=t[a],i=e[a],o=n[a];if(null!=i){if(i===li&&1===s.shape[s.shape.length-1])throw new qr(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new qr(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new qr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(t,e,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=Ui(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await Gi(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,s){return a.tidy(()=>{const i=this.checkNumSamples(e,n,s,"steps"),o=[];if(r>0)throw new Kr("Verbose mode is not implemented yet.");if(null!=s)throw new Kr("steps mode in testLoop() is not implemented yet");{const r=to(i,n),s=Object(a.tensor1d)(Wa(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],u=r[n][1],c=Ga(s,i,u-i),l=Qi(e,c),d=t(l);if(0===n)for(let t=0;t<d.length;++t)o.push(Object(a.scalar)(0));for(let t=0;t<d.length;++t){const e=d[t];o[t]=a.add(o[t],a.mul(u-i,e))}}for(let t=0;t<o.length;++t)o[t]=a.div(o[t],i)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(Zr(t,r)>1){a+="_"+Zr(t.slice(0,n),r)}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new Di(t),u=Li(this.outputs,o,{training:!0});let c;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],u[t]);null!=s[t]&&(n=Hi(n,s[t]));const i=a.mean(n);e.push(i),c=0===t?n:a.add(c,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=a.mean(e(r[s],u[s]))}a.keep(n),i.push(n)}return c=a.mean(c),this.calculateLosses().forEach(t=>{c=a.add(c,t)}),c},!0,o)].concat(i)}}makeTestFunction(){this.testFunction=t=>a.tidy(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:r[t]});const o=new Di(i),u=Li(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],i=a.mean(r(s[t],u[t]));n=0===t?i:a.add(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],i=a.mean(n(s[r],u[r]));e.push(i)}return e})}async fit(t,e,n={}){return eo(this,t,e,n)}async fitDataset(t,e){return Xi(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),o=[];for(const t of i){const e=await t.data();o.push(e[0])}return a.dispose(i),Qr(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:a[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=a.memory().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-a.memory().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=ea(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>ea(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=ea(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ea(Si(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>ea(Si(t)));{const t={};for(const e in this.metrics)t[e]=ea(Si(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ai(_i(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=na(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>na(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=na(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>na(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=na(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=a.io.getSaveHandlers(t);if(0===e.length)throw new qr(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new qr(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new qr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.io.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.3.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await a.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=a.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Ci(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Ci(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}uo.className="Model",a.serialization.registerClass(uo);class co extends uo{}co.className="Functional",a.serialization.registerClass(co);class lo extends uo{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Es("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new qr("Negative dimension size caused by adding layer "+t.name+" with input shape ["+t.inboundNodes[0].inputTensors[0].shape+"]")}add(t){const e=t instanceof lo||t instanceof uo;let n;if(e){if(n=t,1!==n.outputs.length)throw new qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new qr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new qr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Hs({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new qr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new qr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of a)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new Ws({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Yr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(_s(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new uo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Hr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new qr("Legacy serialization format not supported yet.");s=e}else a.util.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof lo))throw new Kr("Sequential.fromConfig called on non-Sequential input: "+o);for(const t of s){const e=ai(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new qr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new qr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}lo.className="Sequential",a.serialization.registerClass(lo);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ho extends a.serialization.Serializable{getConfig(){return{}}}class po extends ho{apply(t,e=1){return function(t,e=1){if(1!==e)throw new Kr(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return a.elu(t)}(t,e)}}po.className="elu",a.serialization.registerClass(po);class fo extends ho{apply(t){return a.selu(t)}}fo.className="selu",a.serialization.registerClass(fo);class mo extends ho{apply(t){return a.relu(t)}}mo.className="relu",a.serialization.registerClass(mo);class bo extends ho{apply(t){return Object(a.tidy)(()=>a.minimum(6,a.relu(t)))}}bo.className="relu6",a.serialization.registerClass(bo);class go extends ho{apply(t){return t}}go.className="linear",a.serialization.registerClass(go);class yo extends ho{apply(t){return a.sigmoid(t)}}yo.className="sigmoid",a.serialization.registerClass(yo);class xo extends ho{apply(t){return function(t){return Object(a.tidy)(()=>{const e=a.add(.5,a.mul(.2,t));return a.clipByValue(e,0,1)})}(t)}}xo.className="hardSigmoid",a.serialization.registerClass(xo);class vo extends ho{apply(t){return a.softplus(t)}}vo.className="softplus",a.serialization.registerClass(vo);class Oo extends ho{apply(t){return function(t){return Object(a.tidy)(()=>a.div(t,a.abs(t).add(1)))}(t)}}Oo.className="softsign",a.serialization.registerClass(Oo);class wo extends ho{apply(t){return a.tanh(t)}}wo.className="tanh",a.serialization.registerClass(wo);class ko extends ho{apply(t,e=-1){return a.softmax(t,e)}}ko.className="softmax",a.serialization.registerClass(ko);class Io extends ho{apply(t,e=-1){return a.logSoftmax(t,e)}}Io.className="logSoftmax",a.serialization.registerClass(Io);class No extends ho{apply(t,e=1){return Object(a.tidy)(()=>a.sigmoid(t.mul(e)).mul(t))}}function jo(t){return t.getClassName()}function So(t,e={}){return sa(t,a.serialization.SerializationMap.getMap().classNameMap,e,"activation")}function Co(t){if(null==t){const t={className:"linear",config:{}};return So(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},So(e)}return t instanceof ho?t:So(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function To(t){if(null!=t&&"object"!=typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+t)}No.className="swish",a.serialization.registerClass(No);class Eo extends a.serialization.Serializable{}class Ao extends Eo{constructor(t){super(),To(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(a.tidy)(()=>{let e=Object(a.zeros)([1]);return this.hasL1&&(e=Object(a.add)(e,Object(a.sum)(a.mul(this.l1,Object(a.abs)(t))))),this.hasL2&&(e=Object(a.add)(e,Object(a.sum)(a.mul(this.l2,ts(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Ao.className="L1L2",a.serialization.registerClass(Ao);const $o={l1l2:"L1L2"};function Ro(t){return aa(t)}function _o(t,e={}){return sa(t,a.serialization.SerializationMap.getMap().classNameMap,e,"regularizer")}function Do(t){if(null==t)return null;if("string"==typeof t){return _o({className:t in $o?$o[t]:t,config:{}})}return t instanceof Eo?t:_o(t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fo extends Us{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Rs(t);let n=Object(a.relu)(t);return null!=this.maxValue&&(n=Object(a.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Fo.className="ReLU",a.serialization.registerClass(Fo);class Mo extends Us{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Rs(t);return Object(a.leakyRelu)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Mo.className="LeakyReLU",a.serialization.registerClass(Mo);class Lo extends Us{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=js(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Do(t.alphaRegularizer),this.alphaConstraint=wa(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new qr("Expected sharedAxes to be a number or an array of numbers, but got "+t.sharedAxes);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=_s(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new zs({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Rs(t),Object(a.prelu)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ns(this.alphaInitializer),alphaRegularizer:Ro(this.alphaRegularizer),alphaConstraint:va(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Lo.className="PReLU",a.serialization.registerClass(Lo);class zo extends Us{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new Kr(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Rs(t);return Object(a.elu)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}zo.className="ELU",a.serialization.registerClass(zo);class Po extends Us{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Rs(t);return n.mul(Va(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Po.className="ThresholdedReLU",a.serialization.registerClass(Po);class Bo extends Us{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new ko).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Rs(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Wo(t,e,n){if("number"==typeof t)return Yr(t,e);if(t.length!==e)throw new qr(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let a=0;a<e;++a){const s=t[a];if((r=s)!==parseInt(r.toString(),10))throw new qr(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number `+s)}return t;var r}function Vo(t,e,n,r,a=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Uo(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Ba([n-e,0]);else{if("same"!==r)throw new qr(`Unsupport padding mode: ${r}.`);t*=e}return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Go(t,e){return Object(a.tidy)(()=>(Ta(e),"channelsFirst"===e?a.transpose(t,[0,2,3,1]):t))}function Ho(t,e){return Object(a.tidy)(()=>(Ta(e),"channelsFirst"===e?a.transpose(t,[0,2,3,4,1]):t))}function qo(t,e,n,r=1,s="valid",i,o=1){return Object(a.tidy)(()=>{if(null==i&&(i="channelsLast"),Ta(i),3!==t.shape.length)throw new qr("The input of a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead.");if(3!==e.shape.length)throw new qr("The kernel for a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new qr("The bias for a conv1dWithBias operation should be 1, but is "+e.shape.length+" instead");if("channelsFirst"===i&&(t=a.transpose(t,[0,2,1])),"causal"===s)throw new Kr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let u=a.conv1d(t,e,r,"same"===s?"same":"valid","NWC",o);return null!=n&&(u=ns(u,n)),u})}function Ko(t,e,n,r=[1,1],s="valid",i,o,u=null){return Object(a.tidy)(()=>{if(null==i&&(i="channelsLast"),Ta(i),3!==t.rank&&4!==t.rank)throw new qr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new qr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let c=Go(t,i);if("causal"===s)throw new Kr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=a.fused.conv2d({x:c,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:u}),"channelsFirst"===i&&(c=a.transpose(c,[0,3,1,2])),c})}function Xo(t,e,n,r=[1,1,1],s="valid",i,o){return Object(a.tidy)(()=>{if(null==i&&(i="channelsLast"),Ta(i),4!==t.rank&&5!==t.rank)throw new qr("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==e.rank&&5!==e.rank)throw new qr("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let u=Ho(t,i);if("causal"===s)throw new Kr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return u=a.conv3d(u,e,r,"same"===s?"same":"valid","NDHWC",o),null!=n&&(u=ns(u,n)),"channelsFirst"===i&&(u=a.transpose(u,[0,4,1,2,3])),u})}Bo.className="Softmax",a.serialization.registerClass(Bo);class Yo extends Us{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Yo.verifyArgs(e),this.rank=t,da(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Kr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Wo(e.kernelSize,t,"kernelSize"),this.strides=Wo(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Ea(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ta(this.dataFormat),this.activation=Co(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=js(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=wa(e.biasConstraint),this.biasRegularizer=Do(e.biasRegularizer),this.activityRegularizer=Do(e.activityRegularizer),this.dilationRate=Wo(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new qr("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new qr("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new qr("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(t){if(Jr("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!la(t.kernelSize,"number",1,3))throw new qr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:jo(this.activation),useBias:this.useBias,biasInitializer:Ns(this.biasInitializer),biasRegularizer:Ro(this.biasRegularizer),activityRegularizer:Ro(this.activityRegularizer),biasConstraint:va(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Jo extends Yo{constructor(t,e){super(t,e),this.kernel=null,Jo.verifyArgs(e),this.filters=e.filters,da(this.filters,"filters"),this.kernelInitializer=js(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=wa(e.kernelConstraint),this.kernelRegularizer=Do(e.kernelRegularizer)}build(t){t=_s(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new qr("The channel dimension of the input should be defined. Found "+t[e]);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(a.tidy)(()=>{let e;t=Rs(t);const n=null==this.bias?null:this.bias.read(),r=ha(this.activation.getClassName());if(null!=r&&2===this.rank)e=Ko(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=qo(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Ko(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Kr("convolutions greater than 3D are not implemented yet.");e=Xo(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=_s(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Vo(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ns(this.kernelInitializer),kernelRegularizer:Ro(this.kernelRegularizer),kernelConstraint:va(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new qr("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(t.filters))}}class Zo extends Jo{constructor(t){super(2,t),Zo.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!la(t.kernelSize,"number",1,2))throw new qr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Zo.className="Conv2D",a.serialization.registerClass(Zo);class Qo extends Jo{constructor(t){super(3,t),Qo.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new qr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Qo.className="Conv3D",a.serialization.registerClass(Qo);class tu extends Zo{constructor(t){if(super(t),this.inputSpec=[new zs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new qr("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(t){if(4!==(t=_s(t)).length)throw new qr("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new qr("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zs({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return a.tidy(()=>{let e=Rs(t);if(4!==e.shape.length)throw new qr("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);const n=e.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const o=n[s],u=n[i],c=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],p=[r,Uo(o,d,c,this.padding),Uo(u,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=a.transpose(e,[0,2,3,1]));let f=a.conv2dTranspose(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=a.transpose(f,[0,3,1,2])),null!=this.bias&&(f=ns(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f})}computeOutputShape(t){const e=(t=_s(t)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=Uo(e[r],o,s,this.padding),e[a]=Uo(e[a],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}tu.className="Conv2DTranspose",a.serialization.registerClass(tu);class eu extends Jo{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new qr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new qr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new qr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(e.padding));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=js(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Do(e.depthwiseRegularizer),this.depthwiseConstraint=wa(e.depthwiseConstraint),this.pointwiseInitializer=js(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Do(e.pointwiseRegularizer),this.pointwiseConstraint=wa(e.pointwiseConstraint)}build(t){if((t=_s(t)).length<this.rank+2)throw new qr(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new qr("The channel dimension of the inputs should be defined, but found "+JSON.stringify(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let t=0;t<this.rank;++t)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new zs({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(a.tidy)(()=>{let e;if(t=Rs(t),1===this.rank)throw new Kr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=a.transpose(t,[0,2,3,1])),e=a.separableConv2d(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=ns(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=a.transpose(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ns(this.depthwiseInitializer),t.pointwiseInitializer=Ns(this.pointwiseInitializer),t.depthwiseRegularizer=Ro(this.depthwiseRegularizer),t.pointwiseRegularizer=Ro(this.pointwiseRegularizer),t.depthwiseConstraint=va(this.depthwiseConstraint),t.pointwiseConstraint=va(this.pointwiseConstraint),t}}eu.className="SeparableConv";class nu extends eu{constructor(t){super(2,t)}}nu.className="SeparableConv2D",a.serialization.registerClass(nu);class ru extends Jo{constructor(t){super(1,t),ru.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!la(t.kernelSize,"number",1,1))throw new qr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}ru.className="Conv1D",a.serialization.registerClass(ru);class au extends Us{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(a.tidy)(()=>{if(t=Rs(t),"channelsLast"===this.dataFormat){const e=qa(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qa(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=qa(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qa(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}au.className="Cropping2D",a.serialization.registerClass(au);class su extends Us{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ta(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,ca(Ia,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return a.tidy(()=>{let e=Rs(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=a.transpose(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return a.transpose(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}su.className="UpSampling2D",a.serialization.registerClass(su);class iu extends Yo{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=js(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=wa(t.depthwiseConstraint),this.depthwiseRegularizer=Do(t.depthwiseRegularizer)}build(t){if((t=_s(t)).length<4)throw new qr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new qr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.tidy)(()=>{let e=
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function(t,e,n=[1,1],r="valid",s,i){return Object(a.tidy)(()=>{null==s&&(s="channelsLast"),Ta(s);let o=Go(t,s);if(4!==t.rank)throw new qr("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==e.rank)throw new qr("depthwiseKernel is required to be 4-D, but is instead "+e.rank+"-D");return o=a.depthwiseConv2d(o,e,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(o=a.transpose(o,[0,3,1,2])),o})}(t=Rs(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=ns(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=_s(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=Vo(e,this.kernelSize[0],this.padding,this.strides[0]),s=Vo(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,s]:[t[0],a,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ns(this.depthwiseInitializer),t.depthwiseRegularizer=Ro(this.depthwiseRegularizer),t.depthwiseConstraint=va(this.depthwiseRegularizer),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ou(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new qr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=a(e),constants:n=a(n)}}function uu(t,e,n,r=!1,s,i,o=!1,u=!1){return a.tidy(()=>{const c=e.shape.length;if(c<3)throw new qr(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(Wa(2,c));if(e=a.transpose(e,l),null!=i)throw new Kr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===c-1&&(s=a.expandDims(s,-1)),s=a.transpose(s,l)),r&&(e=a.reverse(e,0),null!=s&&(s=a.reverse(s,0)));const d=[];let h,p=n;const f=e.shape[0],m=a.unstack(e);let b,g;null!=s&&(b=a.unstack(s));for(let e=0;e<f;++e){const n=m[e],r=a.tidy(()=>t(n,p));if(null==s)h=r[0],p=r[1];else{const t=a.tidy(()=>{const t=b[e],n=a.onesLike(t).sub(t);return{output:r[0].mul(t).add(p[0].mul(n)),newStates:p.map((e,a)=>r[1][a].mul(t).add(e.mul(n)))}});h=t.output,p=t.newStates}u&&d.push(h)}if(u){const t=1;g=a.stack(d,t)}return[h,g,p]})}iu.className="DepthwiseConv2D",a.serialization.registerClass(iu);class cu extends Us{constructor(t){let e;if(super(t),null==t.cell)throw new qr("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new gu({cells:t.cell}):t.cell,null==e.stateSize)throw new qr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new zs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Wa(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){As(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return a.tidy(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new Kr("Constants support is not implemented in RNN yet.");As(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new zs({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.util.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),s))throw new qr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=s.map(t=>new zs({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(a.tidy)(()=>{if(!this.stateful)throw new Gr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a.zeros([n,t])):this.states_=[a.zeros([n,this.cell.stateSize])];else if(null==t)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a.zeros([n,t])):this.states_[0]=a.zeros([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new qr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);!0===e?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,s];if(!a.util.arraysEqual(r.shape,i))throw new qr(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map(t=>a.keep(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=ou(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new zs({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Ps){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(a.tidy)(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let a=null==e?null:e.initialState;t=Rs(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new qr(`RNN Layer has ${s} state(s) but was passed `+a.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=uu((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]},t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d})}getInitialState(t){return Object(a.tidy)(()=>{let e=a.zeros(t.shape);return e=a.sum(e,[1,2]),e=Ua(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?Ya(e,[1,t]):e):this.cell.stateSize>1?[Ya(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===cu.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=ai(e.cell,n);return new t(Object.assign(e,{cell:r}))}}cu.className="RNN",a.serialization.registerClass(cu);class lu extends Us{}class du extends lu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,da(this.units,"units"),this.activation=Co(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=js(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=js(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=js(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Do(t.kernelRegularizer),this.recurrentRegularizer=Do(t.recurrentRegularizer),this.biasRegularizer=Do(t.biasRegularizer),this.kernelConstraint=wa(t.kernelConstraint),this.recurrentConstraint=wa(t.recurrentConstraint),this.biasConstraint=wa(t.biasConstraint),this.dropout=Pa([1,Ba([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Pa([1,Ba([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=_s(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.tidy)(()=>{if(2!==(t=t).length)throw new qr(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yu({ones:()=>a.onesLike(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yu({ones:()=>a.onesLike(n),rate:this.recurrentDropout,training:r}));const i=this.dropoutMask,o=this.recurrentDropoutMask;s=Za(null!=i?a.mul(t,i):t,this.kernel.read()),null!=this.bias&&(s=ns(s,this.bias.read())),null!=o&&(n=a.mul(n,o));let u=a.add(s,Za(n,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:jo(this.activation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),recurrentInitializer:Ns(this.recurrentInitializer),biasInitializer:Ns(this.biasInitializer),kernelRegularizer:Ro(this.kernelRegularizer),recurrentRegularizer:Ro(this.recurrentRegularizer),biasRegularizer:Ro(this.biasRegularizer),activityRegularizer:Ro(this.activityRegularizer),kernelConstraint:va(this.kernelConstraint),recurrentConstraint:va(this.recurrentConstraint),biasConstraint:va(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}du.className="SimpleRNNCell",a.serialization.registerClass(du);class hu extends cu{constructor(t){t.cell=new du(t),super(t)}call(t,e){return Object(a.tidy)(()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return new t(e)}}hu.className="SimpleRNN",a.serialization.registerClass(hu);class pu extends lu{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new qr("GRUCell does not support reset_after parameter set to true.");this.units=t.units,da(this.units,"units"),this.activation=Co(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Co(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=js(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=js(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=js(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Do(t.kernelRegularizer),this.recurrentRegularizer=Do(t.recurrentRegularizer),this.biasRegularizer=Do(t.biasRegularizer),this.kernelConstraint=wa(t.kernelConstraint),this.recurrentConstraint=wa(t.recurrentConstraint),this.biasConstraint=wa(t.biasConstraint),this.dropout=Pa([1,Ba([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Pa([1,Ba([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=_s(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.tidy)(()=>{if(2!==(t=t).length)throw new qr("GRUCell expects 2 input Tensors (inputs, h, c), got "+t.length+".");const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yu({ones:()=>a.onesLike(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yu({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c;0<this.dropout&&this.dropout<1&&(t=a.mul(t,s[0]));let l=Za(t,this.kernel.read());this.useBias&&(l=ns(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,i[0]));const d=this.recurrentKernel.read(),[h,p]=a.split(d,[2*this.units,this.units],d.rank-1),f=Za(r,h),[m,b,g]=a.split(l,3,l.rank-1),[y,x]=a.split(f,2,f.rank-1);o=this.recurrentActivation.apply(a.add(m,y)),u=this.recurrentActivation.apply(a.add(b,x));const v=Za(a.mul(u,r),p);c=this.activation.apply(a.add(g,v));const O=a.add(a.mul(o,r),a.mul(a.add(1,a.neg(o)),c));return[O,O]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:jo(this.activation),recurrentActivation:jo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),recurrentInitializer:Ns(this.recurrentInitializer),biasInitializer:Ns(this.biasInitializer),kernelRegularizer:Ro(this.kernelRegularizer),recurrentRegularizer:Ro(this.recurrentRegularizer),biasRegularizer:Ro(this.biasRegularizer),activityRegularizer:Ro(this.activityRegularizer),kernelConstraint:va(this.kernelConstraint),recurrentConstraint:va(this.recurrentConstraint),biasConstraint:va(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}pu.className="GRUCell",a.serialization.registerClass(pu);class fu extends cu{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new pu(t),super(t)}call(t,e){return Object(a.tidy)(()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}fu.className="GRU",a.serialization.registerClass(fu);class mu extends lu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,da(this.units,"units"),this.activation=Co(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Co(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=js(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=js(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=js(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Do(t.kernelRegularizer),this.recurrentRegularizer=Do(t.recurrentRegularizer),this.biasRegularizer=Do(t.biasRegularizer),this.kernelConstraint=wa(t.kernelConstraint),this.recurrentConstraint=wa(t.recurrentConstraint),this.biasConstraint=wa(t.biasConstraint),this.dropout=Pa([1,Ba([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Pa([1,Ba([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=_s(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends os{apply(e,r){const a=t.apply([n]),s=(new cs).apply([n]),i=t.apply([2*n]);return Xa(Xa(a,s),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(a.tidy)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new qr("LSTMCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yu({ones:()=>a.onesLike(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yu({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let u,c,l,d;0<this.dropout&&this.dropout<1&&(t=a.mul(t,i[0]));let h=Za(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,o[0])),h=a.add(h,Za(r,this.recurrentKernel.read())),this.useBias&&(h=ns(h,this.bias.read()));const[p,f,m,b]=a.split(h,4,h.rank-1);u=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),l=a.add(a.mul(c,s),a.mul(u,this.activation.apply(m))),d=this.recurrentActivation.apply(b);const g=a.mul(d,this.activation.apply(l));return[g,g,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:jo(this.activation),recurrentActivation:jo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),recurrentInitializer:Ns(this.recurrentInitializer),biasInitializer:Ns(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ro(this.kernelRegularizer),recurrentRegularizer:Ro(this.recurrentRegularizer),biasRegularizer:Ro(this.biasRegularizer),activityRegularizer:Ro(this.activityRegularizer),kernelConstraint:va(this.kernelConstraint),recurrentConstraint:va(this.recurrentConstraint),biasConstraint:va(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}mu.className="LSTMCell",a.serialization.registerClass(mu);class bu extends cu{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new mu(t),super(t)}call(t,e){return Object(a.tidy)(()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}bu.className="LSTM",a.serialization.registerClass(bu);class gu extends lu{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(a.tidy)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),a.push(s.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[s[0]].concat(n)})}build(t){let e;As(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{Ra("RNNCell_"+r,()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(ai(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Ms(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}Ls(e)}}function yu(t){const{ones:e,rate:n,training:r=!1,count:s=1}=t,i=()=>rs(e(),n),o=()=>as(i,e,r);if(!s||s<=1)return a.keep(o().clone());return Array(s).fill(void 0).map(o).map(t=>a.keep(t.clone()))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */gu.className="StackedRNNCells",a.serialization.registerClass(gu);var xu=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class vu extends cu{constructor(t){if(t.unroll)throw new Kr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Kr("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new zs({ndim:5})]}call(t,e){return a.tidy(()=>{if(null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new qr("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return a.tidy(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=a.zeros(s);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){a.tidy(()=>{if(!this.stateful)throw new Gr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new qr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.zeros(s)):this.states_=[a.zeros(s)];else if(null==t)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.zeros(s)):this.states_[0]=a.zeros(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new qr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: `+t);e?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!a.util.arraysEqual(n.shape,r))throw new qr(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map(t=>a.keep(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],c=t[o?4:3],l=Vo(u,r[0],a,s[0],i[0]),d=Vo(c,r[1],a,s[1],i[1]);return[...t.slice(0,2),...o?[n,l,d]:[l,d,n]]}}vu.className="ConvRNN2D";class Ou extends mu{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,da(this.filters,"filters"),this.kernelSize=Wo(n,2,"kernelSize"),this.kernelSize.forEach(t=>da(t,"kernelSize")),this.strides=Wo(r||1,2,"strides"),this.strides.forEach(t=>da(t,"strides")),this.padding=a||"valid",Ea(this.padding),this.dataFormat=s||"channelsLast",Ta(this.dataFormat),this.dilationRate=Wo(i||1,2,"dilationRate"),this.dilationRate.forEach(t=>da(t,"dilationRate"))}build(t){var e;t=_s(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new qr("The channel dimension of the input should be defined. Found "+t[n]);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends os{apply(t,e){return Ka([n.apply([r]),a.ones([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return a.tidy(()=>{if(3!==t.length)throw new qr("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+t.length+".");const n=e.training||!1,r=t[0],s=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=yu({ones:()=>a.onesLike(r),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,u=(t,e,n)=>e&&e[n]?a.mul(e[n],t):t;let c=u(r,o,0),l=u(r,o,1),d=u(r,o,2),h=u(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=yu({ones:()=>a.onesLike(s),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let f=u(s,p,0),m=u(s,p,1),b=u(s,p,2),g=u(s,p,3);const[y,x,v,O]=a.split(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?a.split(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,x,k,this.padding),d=this.inputConv(d,v,I,this.padding),h=this.inputConv(h,O,N,this.padding);const[j,S,C,T]=a.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,j),m=this.recurrentConv(m,S),b=this.recurrentConv(b,C),g=this.recurrentConv(g,T);const E=this.recurrentActivation.apply(a.add(c,f)),A=this.recurrentActivation.apply(a.add(l,m)),$=a.add(a.mul(A,i),a.mul(E,this.activation.apply(a.add(d,b)))),R=a.mul(this.recurrentActivation.apply(a.add(h,g)),this.activation.apply($));return[R,R,$]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=xu(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=a.conv2d(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ns(s,n,this.dataFormat):s}recurrentConv(t,e){return a.conv2d(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ou.className="ConvLSTM2DCell",a.serialization.registerClass(Ou);class wu extends vu{constructor(t){const e=new Ou(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}wu.className="ConvLSTM2D",a.serialization.registerClass(wu);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ku extends Us{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return as(()=>rs(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}ku.className="Dropout",a.serialization.registerClass(ku);class Iu extends ku{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Iu.className="SpatialDropout1D",a.serialization.registerClass(Iu);class Nu extends Us{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,da(this.units,"units"),this.activation=Co(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=js(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=js(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=wa(t.kernelConstraint),this.biasConstraint=wa(t.biasConstraint),this.kernelRegularizer=Do(t.kernelRegularizer),this.biasRegularizer=Do(t.biasRegularizer),this.activityRegularizer=Do(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=_s(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=_s(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t),r=ha(this.activation.getClassName());let a;return null!=r?a=Za(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Za(n,this.kernel.read()),null!=this.bias&&(a=ns(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:jo(this.activation),useBias:this.useBias,kernelInitializer:Ns(this.kernelInitializer),biasInitializer:Ns(this.biasInitializer),kernelRegularizer:Ro(this.kernelRegularizer),biasRegularizer:Ro(this.biasRegularizer),activityRegularizer:Ro(this.activityRegularizer),kernelConstraint:va(this.kernelConstraint),biasConstraint:va(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Nu.className="Dense",a.serialization.registerClass(Nu);class ju extends Us{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=_s(t);for(const e of t.slice(1))if(null==e)throw new qr(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],La(t,1)]}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);let n=Rs(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new qr(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],La(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}ju.className="Flatten",a.serialization.registerClass(ju);class Su extends Us{constructor(t){super(t),this.supportsMasking=!0,this.activation=Co(t.activation)}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t);return this.activation.apply(n)})}getConfig(){const t={activation:jo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Su.className="Activation",a.serialization.registerClass(Su);class Cu extends Us{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(a.tidy)(()=>{return t=Rs(t),e=t,n=this.n,Object(a.tidy)(()=>{if(2!==e.shape.length)throw new qr(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return Ya(Ua(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Cu.className="RepeatVector",a.serialization.registerClass(Cu);class Tu extends Us{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,s=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==s)throw new qr("Can only specifiy one unknown dimension.");s=t}else a*=e}const i=La(t);if(null!==s){if(0===a||i%a!=0)throw new qr(n);r[s]=i/a}else if(i!==a)throw new qr(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Tu.className="Reshape",a.serialization.registerClass(Tu);class Eu extends Us{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+t.dims+" instead.");const e=Wa(1,t.dims.length+1);if(!a.util.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zs({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=_s(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(a.transpose)(Rs(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Eu.className="Permute",a.serialization.registerClass(Eu);class Au extends Us{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Rs(t);return Object(a.any)(Object(a.notEqual)(n,this.maskValue),-1)}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t),r=Object(a.any)(Object(a.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Au.className="Masking",a.serialization.registerClass(Au);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class $u extends Us{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ta(t.inputLength))}this.inputDim=t.inputDim,da(this.inputDim,"inputDim"),this.outputDim=t.outputDim,da(this.outputDim,"outputDim"),this.embeddingsInitializer=js(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Do(t.embeddingsRegularizer),this.activityRegularizer=Do(t.activityRegularizer),this.embeddingsConstraint=wa(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(a.tidy)(()=>this.maskZero?(t=Rs(t),Object(a.notEqual)(t,Object(a.zerosLike)(t))):null)}computeOutputShape(t){if(t=_s(t),null==this.inputLength)return[...t,this.outputDim];const e=ta(this.inputLength);if(e.length!==t.length-1)throw new qr(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);{let n=0;for(let r=0;r<e.length;++r){const a=e[r],s=t[r+1];if(null!=a&&null!=s&&a!==s)throw new qr(`"inputLength" is ${this.inputLength}, but received input shape has shape `+t);null==a&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);let n=Rs(t);"int32"!==n.dtype&&(n=Va(n,"int32"));return Qa(this.embeddings.read(),n.as1D()).reshape(_s(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ns(this.embeddingsInitializer),embeddingsRegularizer:Ro(this.embeddingsRegularizer),activityRegularizer:Ro(this.activityRegularizer),embeddingsConstraint:va(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}$u.className="Embedding",a.serialization.registerClass($u);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ru extends Us{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Kr}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],s=e[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new qr("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[_s(t)]),(t=t).length<2)throw new qr(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=oa(e),e.length>1)throw new qr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===oa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(a.tidy)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=Ba(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=Ua(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],i=t.slice(1).concat([s]);let o=r.reshape([s].concat(La(t.slice(1))));o=a.transpose(o,[1,0]),o=o.reshape(i),e.push(o),n=!0}else if(t>1){const s=Wa(1,t).concat([0]);e.push(a.transpose(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=a.transpose(r.reshape([-1,e]),[1,0]).reshape(n)}else if(s>1){const t=[s-1].concat(Wa(0,s-1));r=a.transpose(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=oa(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return a.tidy(()=>{if(null==e)return null;if(!Array.isArray(e))throw new qr("`mask` should be an Array");if(!Array.isArray(t))throw new qr("`inputs` should be an Array");if(e.length!==t.length)throw new qr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:a.expandDims(t,0)))[0];for(let t=1;t<e.length-1;++t)n=a.logicalAnd(n,e[t]);return n})}}class _u extends Ru{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.add(e,t[n]);return e})}}_u.className="Add",a.serialization.registerClass(_u);class Du extends Ru{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.mul(e,t[n]);return e})}}Du.className="Multiply",a.serialization.registerClass(Du);class Fu extends Ru{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.add(e,t[n]);return a.mul(1/t.length,e)})}}Fu.className="Average",a.serialization.registerClass(Fu);class Mu extends Ru{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.maximum(e,t[n]);return e})}}Mu.className="Maximum",a.serialization.registerClass(Mu);class Lu extends Ru{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.minimum(e,t[n]);return e})}}Lu.className="Minimum",a.serialization.registerClass(Lu);class zu extends Ru{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new qr("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(a.util.arraysEqual(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new qr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(a.tidy)(()=>Ka(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new qr("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new qr("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new qr("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new qr(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return a.tidy(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(a.onesLike(t[n]).asType("bool")):e[n].rank<t[n].rank?r.push(a.expandDims(e[n],-1)):r.push(e[n]);const s=a.concat(r,this.axis);return a.all(s,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Pu(t,e){for(;t<0;)t+=e;return t}zu.className="Concatenate",a.serialization.registerClass(zu);class Bu extends Ru{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){a.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new Kr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new qr(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new qr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>Pu(e,t[n].shape.length)):[Pu(this.axes,n.shape.length),Pu(this.axes,r.shape.length)],this.normalize&&(n=si(n,e[0]),r=si(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new Kr("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, but got "+t.shape.length),a.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, but got "+e.shape.length),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new Kr("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return a.tidy(()=>{let n,a;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,r=i[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[Pu(this.axes,t.length),Pu(this.axes,e.length)],n}computeOutputShape(t){a.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new Kr("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Bu.className="Dot",a.serialization.registerClass(Bu);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Wu extends Us{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t);return as(()=>Ja(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}Wu.className="GaussianNoise",a.serialization.registerClass(Wu);class Vu extends Us{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Rs(t);if(this.rate>0&&this.rate<1){return as(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ja(n.shape,1,t))},()=>n,e.training||!1)}return n})}}Vu.className="GaussianDropout",a.serialization.registerClass(Vu);class Uu extends Us{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Rs(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return as(()=>{const e=Rs(t),r=-1.7580993408473766;let s=Object(a.greaterEqual)(Object(a.randomUniform)(n),this.rate);s=Va(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,o=-i*r*this.rate;return e.mul(s).add(s.add(-1).mul(r)).mul(i).add(o)},()=>Rs(t),e.training||!1)}return t})}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Gu(t,e,n,r,s,i=.001){let o;if(2===t.rank)o=a.batchNorm2d(t,e,n,r,s,i);else if(3===t.rank)o=a.batchNorm3d(t,e,n,r,s,i);else{if(4!==t.rank)throw new Kr(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=a.batchNorm4d(t,e,n,r,s,i)}return o}function Hu(t,e,n,r,s=.001){return a.util.arraysEqual(r.slice().sort(),Wa(0,t.rank-1))?function(t,e,n,r,s=.001){return Object(a.tidy)(()=>{const i=a.moments(t,r),o=i.mean,u=i.variance;return[Gu(t,o,u,n,e,s),o,u]})}(t,e,n,r,s):function(t,e,n,r,s=.001){return Object(a.tidy)(()=>{const i=a.moments(t,r),o=i.mean,u=i.variance,c=[];for(const e of Wa(0,t.rank))-1!==r.indexOf(e)?c.push(1):c.push(t.shape[e]);const l=o.reshape(c),d=u.reshape(c),h=null==e?null:e.reshape(c),p=null==n?null:n.reshape(c);return[Gu(t,l,d,p,h,s),o,u]})}(t,e,n,r,s)}Uu.className="AlphaDropout",a.serialization.registerClass(Uu);class qu extends Us{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=js(t.betaInitializer||"zeros"),this.gammaInitializer=js(t.gammaInitializer||"ones"),this.movingMeanInitializer=js(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=js(t.movingVarianceInitializer||"ones"),this.betaConstraint=wa(t.betaConstraint),this.gammaConstraint=wa(t.gammaConstraint),this.betaRegularizer=Do(t.betaRegularizer),this.gammaRegularizer=Do(t.gammaRegularizer)}build(t){t=_s(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new qr(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(t)+".");this.inputSpec=[new zs({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(a.tidy)(()=>{const n=null!=e.training&&e.training,r=Rs(t),s=r.shape,i=s.length,o=Wa(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const c=Yr(1,i);c[u]=s[u];const l=o.slice();l.sort();const d=!a.util.arraysEqual(l,Wa(0,i).slice(0,i-1));if(!n)return(()=>{if(d){const t=this.movingMean.read().reshape(c),e=this.movingVariance.read().reshape(c),n=this.center?this.beta.read().reshape(c):null,a=this.scale?this.gamma.read().reshape(c):null;return Gu(r,t,e,n,a,this.epsilon)}return Gu(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,f]=Hu(r,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(t,e,n)=>{a.tidy(()=>{const r=1-n,a=t.read(),s=a.sub(e).mul(r);t.write(a.sub(s))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),h})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ns(this.betaInitializer),gammaInitializer:Ns(this.gammaInitializer),movingMeanInitializer:Ns(this.movingMeanInitializer),movingVarianceInitializer:Ns(this.movingVarianceInitializer),betaRegularizer:Ro(this.betaRegularizer),gammaRegularizer:Ro(this.gammaRegularizer),betaConstraint:va(this.betaConstraint),gammaConstraint:va(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}qu.className="BatchNormalization",a.serialization.registerClass(qu);class Ku extends Us{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=js(t.betaInitializer||"zeros"),this.gammaInitializer=js(t.gammaInitializer||"ones"),this.betaRegularizer=Do(t.betaRegularizer),this.gammaRegularizer=Do(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=_s(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error("Invalid axis: "+t);if(this.axis.length!==oa(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Rs(t),r=n.shape,s=r.length;return Object(a.tidy)(()=>{let{mean:t,variance:e}=Object(a.moments)(n,this.axis,!0);const i=Yr(1,s);for(const t of this.axis)i[t]=r[t];const o=t=>null!=t&&t.shape.length!==s&&this.axis!==[s-1]?t.reshape(i):t;let u=o(this.gamma.read()),c=o(this.beta.read());const l=[],d=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(l.push(r[t]),d.push(1)):(l.push(1),d.push(r[t]));return t=t.tile(l),e=e.tile(l),u=u.tile(d),c=c.tile(d),Gu(n,t,e,c,u,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ns(this.betaInitializer),gammaInitializer:Ns(this.gammaInitializer),betaRegularizer:Ro(this.betaRegularizer),gammaRegularizer:Ro(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}Ku.className="LayerNormalization",a.serialization.registerClass(Ku);class Xu extends Us{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new qr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new qr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new qr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new zs({ndim:4})]}computeOutputShape(t){let e,n;return t=_s(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(a.tidy)(()=>{return e=Rs(t),n=this.padding,r=this.dataFormat,Object(a.tidy)(()=>{if(4!==e.rank)throw new qr("temporalPadding expects input tensor to be 4-D, but received a "+e.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new qr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new qr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.pad(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Yu(t,e,n,r,s,i){return Object(a.tidy)(()=>{let o;Ta(s),Aa(i),Ea(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Go(t,s);const u="same"===r?"same":"valid";return o="max"===i?a.maxPool(t,e,n,u):a.avgPool(t,e,n,u),"channelsFirst"===s&&(o=a.transpose(o,[0,3,1,2])),o})}function Ju(t,e,n,r,s,i){return Object(a.tidy)(()=>{let o;Ta(s),Aa(i),Ea(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),t=Ho(t,s);const u="same"===r?"same":"valid";return o="max"===i?a.maxPool3d(t,e,n,u):a.avgPool3d(t,e,n,u),"channelsFirst"===s&&(o=a.transpose(o,[0,4,1,2,3])),o})}Xu.className="ZeroPadding2D",a.serialization.registerClass(Xu);class Zu extends Us{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new qr("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.poolSize));this.poolSize=t.poolSize}if(da(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new qr("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(t.strides));this.strides=t.strides}da(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Ea(this.padding),this.inputSpec=[new zs({ndim:3})]}computeOutputShape(t){const e=Vo((t=_s(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e),t=Ua(Rs(t),2);const n=this.poolingFunction(Rs(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.squeeze(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Qu extends Zu{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ta(a),Ea(r),Yu(t,e,n,r,a,"max")}}Qu.className="MaxPooling1D",a.serialization.registerClass(Qu);class tc extends Zu{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ta(a),Ea(r),Yu(t,e,n,r,a,"avg")}}tc.className="AveragePooling1D",a.serialization.registerClass(tc);class ec extends Us{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new qr("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides];da(this.poolSize,"poolSize"),da(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ta(this.dataFormat),Ea(this.padding),this.inputSpec=[new zs({ndim:4})]}computeOutputShape(t){t=_s(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Vo(e,this.poolSize[0],this.padding,this.strides[0]),n=Vo(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(a.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Rs(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class nc extends ec{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ta(a),Ea(r),Yu(t,e,n,r,a,"max")}}nc.className="MaxPooling2D",a.serialization.registerClass(nc);class rc extends ec{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ta(a),Ea(r),Yu(t,e,n,r,a,"avg")}}rc.className="AveragePooling2D",a.serialization.registerClass(rc);class ac extends Us{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new qr("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+t.strides.length+".");this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];da(this.poolSize,"poolSize"),da(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ta(this.dataFormat),Ea(this.padding),this.inputSpec=[new zs({ndim:5})]}computeOutputShape(t){t=_s(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Vo(e,this.poolSize[0],this.padding,this.strides[0]),n=Vo(n,this.poolSize[1],this.padding,this.strides[1]),r=Vo(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(a.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Rs(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class sc extends ac{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ta(a),Ea(r),Ju(t,e,n,r,a,"max")}}sc.className="MaxPooling3D",a.serialization.registerClass(sc);class ic extends ac{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ta(a),Ea(r),Ju(t,e,n,r,a,"avg")}}ic.className="AveragePooling3D",a.serialization.registerClass(ic);class oc extends Us{constructor(t){super(t),this.inputSpec=[new zs({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Kr}}class uc extends oc{constructor(t){super(t||{})}call(t,e){return Object(a.tidy)(()=>{const e=Rs(t);return a.mean(e,1)})}}uc.className="GlobalAveragePooling1D",a.serialization.registerClass(uc);class cc extends oc{constructor(t){super(t||{})}call(t,e){return Object(a.tidy)(()=>{const e=Rs(t);return a.max(e,1)})}}cc.className="GlobalMaxPooling1D",a.serialization.registerClass(cc);class lc extends Us{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ta(this.dataFormat),this.inputSpec=[new zs({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Kr}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class dc extends lc{call(t,e){return Object(a.tidy)(()=>{const e=Rs(t);return"channelsLast"===this.dataFormat?a.mean(e,[1,2]):a.mean(e,[2,3])})}}dc.className="GlobalAveragePooling2D",a.serialization.registerClass(dc);class hc extends lc{call(t,e){return Object(a.tidy)(()=>{const e=Rs(t);return"channelsLast"===this.dataFormat?a.max(e,[1,2]):a.max(e,[2,3])})}}hc.className="GlobalMaxPooling2D",a.serialization.registerClass(hc);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class pc extends Us{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=ai(e.layer,n);delete e.layer;const a={layer:r};return Object.assign(a,e),new t(a)}}class fc extends pc{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=_s(t)).length<3)throw new qr("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(t));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=_s(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(a.tidy)(()=>uu((t,n)=>[Rs(this.layer.call(t,e)),[]],t=Rs(t),[],!1,null,null,!1,!0)[1])}}fc.className="TimeDistributed",a.serialization.registerClass(fc);class mc extends pc{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ai(n),e.goBackwards=!0!==e.goBackwards;const r={};var a;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=ai(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,a=this.mergeMode,ca(Sa,"BidirectionalMergeMode",a),t.weights)throw new Kr("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):Qr(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=ou(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new qr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map(t=>new zs({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new Kr("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Ps;for(const t of s)if(t instanceof Ps!==o)throw new qr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(a.tidy)(()=>{const n=e.initialState;let r,s,i,o;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=a.reverse(s,1)),"concat"===this.mergeMode?o=Ka([r,s]):"sum"===this.mergeMode?o=a.add(r,s):"ave"===this.mergeMode?o=a.mul(.5,a.add(r,s)):"mul"===this.mergeMode?o=a.mul(r,s):null==this.mergeMode&&(o=[r,s]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ra(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Ra(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ai(e.layer);if(delete e.layer,null!=e.numConstants)throw new Kr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}mc.className="Bidirectional",a.serialization.registerClass(mc);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var bc=n(201),gc=n(192),yc=n(142),xc=n(251);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class vc{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return a.util.assert(t>0,()=>"batchSize needs to be positive, but it is\n      "+t),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Oc(async()=>(await n.iterator()).columnMajorBatch(t,e,wc),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Oc(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Oc(async()=>(await e.iterator()).filter(e=>a.tidy(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Oc(async()=>(await e.iterator()).map(e=>a.tidy(()=>t(e))),this.size)}mapAsync(t){const e=this;return Oc(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Oc(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Oc(async()=>{const n=Object(yc.e)(async()=>({value:await e.iterator(),done:!1}));return Object(yc.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Oc(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=gc.alea(e||a.util.now().toString());return Oc(async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Oc(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Oc(t,e=null){return new class extends vc{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function wc(t){if(null===t)return null;const e=t[0];if(Object(xc.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof a.Tensor?a.stack(t):a.tensor(t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */(t),recurse:!1}}return{value:null,recurse:!0}}vc.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
yc.a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */yc.a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var kc=n(358);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */kc.a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ic(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a.util.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the CPU backend.")})}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nc=a.kernel_impls.whereImpl;class jc extends a.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.DataStorage(this,Object(a.engine)())}nextDataId(){return jc.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(a.env)().get("IS_NODE")&&a.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&a.util.isString(n[0])){const s=n.map(t=>a.util.encodeString(t));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r,a){this.data.set(t,{values:e,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return a.backend_util.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a.util.decodeString(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.buffer)(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(a.engine)().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=a.util.now();t();return{kernelMs:a.util.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ic([t],"where");const e=this.readSync(t.dataId);return Nc(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}jc.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sc(t,e,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if(Ic(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,c=u.data.get(o.dataId).values,l=a.util.sizeFromShape(o.shape),d=n||o.dtype,h=a.util.getArrayFromDType(d,l);for(let t=0;t<l;++t)h[t]=e(c[t],s);return u.makeTensorInfo(o.shape,d,h)}}function Cc(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Ic(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=e(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(a.registerBackend)("cpu",()=>new jc,1);const Tc=Sc(a.Elu,t=>t>=0?t:Math.exp(t)-1),Ec={kernelName:a.Elu,backendName:"cpu",kernelFunc:Tc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ac(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const $c={kernelName:a.Identity,backendName:"cpu",kernelFunc:Ac};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r;Ic([s],"leakyRelu");const o=a.util.sizeFromShape(s.shape),u=n.data.get(s.dataId).values,c=a.util.getTypedArrayFromDType("float32",o);for(let t=0;t<u.length;t++)c[t]=u[t]<0?i*u[t]:u[t];return n.makeTensorInfo(s.shape,"float32",c)}const _c={kernelName:a.LeakyRelu,backendName:"cpu",kernelFunc:Rc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dc(t){return(e,n,r,s,i)=>{const o=a.backend_util.assertAndGetBroadcastShape(e,n),u=o.length,c=a.util.computeStrides(o),l=a.util.sizeFromShape(o),d=a.util.getTypedArrayFromDType(i,l),h=e.length,p=n.length,f=a.util.computeStrides(e),m=a.util.computeStrides(n),b=a.backend_util.getBroadcastDims(e,o),g=a.backend_util.getBroadcastDims(n,o);if(b.length+g.length===0)for(let e=0;e<d.length;++e)d[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<d.length;++e){const n=a.util.indexToLoc(e,u,c),i=n.slice(-h);b.forEach(t=>i[t]=0);const o=a.util.locToIndex(i,h,f),l=n.slice(-p);g.forEach(t=>l[t]=0);const y=a.util.locToIndex(l,p,m);d[e]=t(r[o],s[y])}return[d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fc=Dc((t,e)=>t<0?e*t:t);function Mc(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;Ic([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Fc(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Lc={kernelName:a.Prelu,backendName:"cpu",kernelFunc:Mc},zc=Sc(a.Relu,t=>Math.max(0,t)),Pc={kernelName:a.Relu,backendName:"cpu",kernelFunc:zc},Bc=Sc(a.Relu6,t=>Math.min(Math.max(0,t),6)),Wc={kernelName:a.Relu6,backendName:"cpu",kernelFunc:Bc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vc(t,e,n,r,a){if("linear"===n)return Ac({inputs:{x:e},backend:t});if("relu"===n)return zc({inputs:{x:e},backend:t});if("elu"===n)return Tc({inputs:{x:e},backend:t});if("relu6"===n)return Bc({inputs:{x:e},backend:t});if("prelu"===n)return Mc({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return Rc({inputs:{x:e},backend:t,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uc(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Gc={kernelName:a.Complex,backendName:"cpu",kernelFunc:Uc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hc(t,e,n="float32"){if("complex64"===n){return Uc({inputs:{real:Hc(t,e,"float32"),imag:Hc(t,e,"float32")},backend:t})}const r=a.util.makeZerosTypedArray(a.util.sizeFromShape(e),n);return t.makeTensorInfo(e,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qc(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Kc={kernelName:a.Real,backendName:"cpu",kernelFunc:qc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xc(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return Ac({inputs:{x:s},backend:n});const t=Hc(n,s.shape,s.dtype),e=Xc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Uc({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=qc({inputs:{input:s},backend:n}),e=Xc({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!a.util.hasEncodingLoss(s.dtype,i)){const t=Ac({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===i){const t=n.data.get(s.dataId).values,e=a.util.toTypedArray([0],s.dtype),[r,i]=Dc((t,e)=>t!==e?1:0)(s.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const Yc={kernelName:a.Cast,backendName:"cpu",kernelFunc:Xc};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jc(t,e,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;Ic([s,i],t);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=e(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:t,backend:a})=>{const{a:s,b:i}=t,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const t=Xc({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=Xc({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),x=o.makeTensorInfo(y,"float32",b),v=o.makeTensorInfo(y,"float32",g),O=Uc({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),O}{const t=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=e(s.shape,i.shape,t,n,a);return o.makeTensorInfo(c,a,u)}}}function Zc(t){return(e,n,r,s,i,o)=>{const u=a.backend_util.assertAndGetBroadcastShape(e,n),c=a.util.sizeFromShape(u),l=u.length,d=a.util.computeStrides(u),h=a.util.getTypedArrayFromDType("float32",c),p=a.util.getTypedArrayFromDType("float32",c),f=a.backend_util.getBroadcastDims(e,u),m=a.backend_util.getBroadcastDims(n,u),b=a.backend_util.mergeRealAndImagArrays(r,s),g=a.backend_util.mergeRealAndImagArrays(i,o),y=e.length,x=a.util.computeStrides(e),v=n.length,O=a.util.computeStrides(n);if(f.length+m.length===0)for(let e=0;e<h.length;e++){const n=e%b.length,r=e%g.length,a=t(b[2*n],b[2*n+1],g[2*r],g[2*r+1]);h[e]=a.real,p[e]=a.imag}else for(let e=0;e<h.length;e++){const n=a.util.indexToLoc(e,l,d),r=n.slice(-y);f.forEach(t=>r[t]=0);const s=a.util.locToIndex(r,y,x),i=n.slice(-v);m.forEach(t=>i[t]=0);const o=a.util.locToIndex(i,v,O),u=t(b[2*s],b[2*s+1],g[2*o],g[2*o+1]);h[e]=u.real,p[e]=u.imag}return[h,p,u]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qc=Dc((t,e)=>t+e),tl=Zc((t,e,n,r)=>({real:t+n,imag:e+r})),el=Jc(a.Add,Qc,tl),nl={kernelName:a.Add,backendName:"cpu",kernelFunc:el};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,o=a.util.sizeFromShape(s.shape),u=a.util.inferFromImplicitShape(i,o),c=a.util.sizeFromShape(u);a.util.assert(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=u,e.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const al={kernelName:a.Reshape,backendName:"cpu",kernelFunc:rl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:i}=e,{transposeA:o,transposeB:u}=r;Ic([s,i],"matMul");const c=s.shape.length,l=i.shape.length,d=o?s.shape[c-2]:s.shape[c-1],h=u?i.shape[l-1]:i.shape[l-2],p=o?s.shape[c-1]:s.shape[c-2],f=u?i.shape[l-2]:i.shape[l-1],m=s.shape.slice(0,-2),b=i.shape.slice(0,-2),g=a.util.sizeFromShape(m),y=a.util.sizeFromShape(b),x=g===y||1===g||1===y;a.util.assert(c>=2&&l>=2&&x,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`);const v=(g>y?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);a.util.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`);const O=u?[y,f,h]:[y,h,f],w=rl({inputs:{x:s},backend:n,attrs:{shape:o?[g,d,p]:[g,p,d]}}),k=rl({inputs:{x:i},backend:n,attrs:{shape:O}}),I=o?w.shape[1]:w.shape[2],N=o?w.shape[2]:w.shape[1],j=u?k.shape[1]:k.shape[2],S=Math.max(g,y),C=n.data.get(w.dataId).values,T=n.data.get(k.dataId).values,E=a.util.computeStrides(w.shape),A=a.util.computeStrides(k.shape),[$,R,_]=o?[E[0],1,E[1]]:[E[0],E[1],1],[D,F,M]=u?[1,A[1],A[0]]:[A[1],1,A[0]],L=N*j,z=Object(a.buffer)([S,N,j],w.dtype),P=z.values,B=n.blockSize;for(let t=0;t<S;t++)for(let e=0;e<N;e+=B)for(let n=0;n<j;n+=B)for(let r=0;r<I;r+=B){const a=Math.min(e+B,N),s=Math.min(n+B,j),i=Math.min(r+B,I);for(let o=e;o<a;o++)for(let e=n;e<s;e++){let n=0;for(let a=r;a<i;a++){const r=Math.min(t,g-1)*$,s=Math.min(t,y-1)*M;n+=C[r+o*R+a*_]*T[a*D+e*F+s]}P[t*L+(o*j+e)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(v,z.dtype,z.values)}const il={kernelName:a.BatchMatMul,backendName:"cpu",kernelFunc:sl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ol={kernelName:a._FusedMatMul,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=sl({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(p=el({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=Vc(n,h,l,o,d),m.push(h),h=f);for(const t of m)n.disposeIntermediateTensorInfo(t);return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ul(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const cl={kernelName:a.Abs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Ic(e,"abs");let r=new Float32Array(a.util.sizeFromShape(e.shape));return r=ul(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,"float32")}},ll=Sc(a.Acos,t=>Math.acos(t)),dl={kernelName:a.Acos,backendName:"cpu",kernelFunc:ll},hl=Sc(a.Acosh,t=>Math.acosh(t)),pl={kernelName:a.Acosh,backendName:"cpu",kernelFunc:hl};const fl={kernelName:a.AddN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,r=e;Ic(e,"addN");const s=r.map(t=>n.data.get(t.dataId).values),i=Object(a.buffer)(r[0].shape,r[0].dtype),o=i.values;for(let t=0;t<r.length;t++){const e=s[t];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ml(t,e,n,r,s){const i=e.length,o=a.util.sizeFromShape(e),u=a.util.computeStrides(e),c=a.util.computeStrides(s),l=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(s));for(let e=0;e<o;++e){const n=a.util.indexToLoc(e,i,u),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];l[a.util.locToIndex(s,i,c)]=t[e]}return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:s}=n;Ic(a,"transpose");const i=a.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=a.shape[s[t]];const u=ml(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const gl={kernelName:a.Transpose,backendName:"cpu",kernelFunc:bl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yl={kernelName:a.All,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;Ic(s,"all");const u=a.util.parseAxisParam(i,s.shape);let c=u;const l=a.backend_util.getAxesPermutation(c,s.shape.length);let d=s;null!=l&&(d=bl({inputs:{x:s},backend:n,attrs:{perm:l}}),c=a.backend_util.getInnerMostAxes(c.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("all",c,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,c),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let t=0;t<m.length;++t){const e=t*f;let n=b[e];for(let t=0;t<f;++t){const r=b[e+t];n=n&&r}m[t]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(o){const t=rl({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(g),t}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xl={kernelName:a.Any,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;Ic(s,"any");const u=a.util.parseAxisParam(i,s.shape);let c=u;const l=a.backend_util.getAxesPermutation(c,s.shape.length);let d=s;null!=l&&(d=bl({inputs:{x:s},backend:n,attrs:{perm:l}}),c=a.backend_util.getInnerMostAxes(c.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("any",c,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,c),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let t=0;t<m.length;++t){const e=t*f;let n=b[e];for(let t=0;t<f;++t){const r=b[e+t];n=n||r}m[t]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(o){const t=rl({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(g),t}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vl={kernelName:a.ArgMax,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;Ic(s,"argMax");let o=a.util.parseAxisParam(i,s.shape);const u=a.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=bl({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=a.backend_util.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],a.backend_util.assertAxesAreInnerMostDims("argMax",o,c.shape.length);const[d,h]=a.backend_util.computeOutAndReduceShapes(c.shape,o),p=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(p,"int32"),m=a.util.sizeFromShape(h),b=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*m;let n=b[e],r=0;for(let t=0;t<m;++t){const a=b[e+t];a>n&&(n=a,r=t)}f[t]=r}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ol={kernelName:a.ArgMin,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;Ic(s,"argMin");let o=a.util.parseAxisParam(i,s.shape);const u=a.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=bl({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=a.backend_util.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],a.backend_util.assertAxesAreInnerMostDims("argMin",o,c.shape.length);const[d,h]=a.backend_util.computeOutAndReduceShapes(c.shape,o),p=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(p,"int32"),m=a.util.sizeFromShape(h),b=n.data.get(c.dataId).values;for(let t=0;t<f.length;++t){const e=t*m;let n=b[e],r=0;for(let t=0;t<m;++t){const a=b[e+t];a<n&&(n=a,r=t)}f[t]=r}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}},wl=Sc(a.Asin,t=>Math.asin(t)),kl={kernelName:a.Asin,backendName:"cpu",kernelFunc:wl},Il=Sc(a.Asinh,t=>Math.asinh(t)),Nl={kernelName:a.Asinh,backendName:"cpu",kernelFunc:Il},jl=Sc(a.Atan,t=>Math.atan(t)),Sl={kernelName:a.Atan,backendName:"cpu",kernelFunc:jl},Cl=Dc((t,e)=>Math.atan2(t,e)),Tl=Jc(a.Atan2,Cl),El={kernelName:a.Atan2,backendName:"cpu",kernelFunc:Tl},Al=Sc(a.Atanh,t=>Math.atanh(t)),$l={kernelName:a.Atanh,backendName:"cpu",kernelFunc:Al};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rl(t,e,n,r,s,i){const o=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(a.buffer)(s.outShape,n),g=b.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let e=0;e<s.batchSize;++e){const n=e*y,a=e*r[0];for(let e=0;e<s.inChannels;++e)for(let b=0;b<s.outHeight;++b){const y=b*o-p,O=Math.max(0,y),w=Math.min(s.inHeight,d+y),k=n+b*x;for(let n=0;n<s.outWidth;++n){const o=n*u-f,d=Math.max(0,o),p=Math.min(s.inWidth,h+o);let b=m,y=0,x=0;for(let n=O;n<w;n+=c){const s=a+n*r[1];for(let n=d;n<p;n+=l){const a=t[s+n*r[2]+e];"max"===i&&a>b?b=a:"avg"===i&&(y+=a,x++)}if(isNaN(b))break}g[k+n*v+e]="avg"===i?y/x:b}}}return b}function _l(t,e,n,r,s=!1,i=!1){const o=Object(a.buffer)(r.outShape,"int32"),u=r.strideHeight,c=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(a.buffer)(e,n,t);for(let t=0;t<r.batchSize;++t)for(let e=0;e<r.inChannels;++e)for(let n=0;n<r.outHeight;++n){const a=n*u-f;let g=a;for(;g<0;)g+=l;const y=Math.min(r.inHeight,h+a);for(let u=0;u<r.outWidth;++u){const h=u*c-m;let f=h;for(;f<0;)f+=d;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,O=-1;for(let n=g;n<y;n+=l){const o=n-a;for(let a=f;a<x;a+=d){const u=a-h,c=b.get(t,n,a,e);c>v&&(v=c,O=s?i?((t*r.inHeight+n)*r.inWidth+a)*r.inChannels+e:(n*r.inWidth+a)*r.inChannels+e:o*p+u)}}o.set(O,t,n,u,e)}}return o}function Dl(t,e,n,r,s,i){const o=s.strideDepth,u=s.strideHeight,c=s.strideWidth,l=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,b=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Object(a.buffer)(s.outShape,n),O=v.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let e=0;e<s.batchSize;++e){const n=e*w,a=e*r[0];for(let e=0;e<s.inChannels;++e)for(let v=0;v<s.outDepth;++v){const w=v*o-b;let j=w;for(;j<0;)j+=l;const S=Math.min(s.inDepth,p+w),C=n+v*k;for(let n=0;n<s.outHeight;++n){const o=n*u-g;let p=o;for(;p<0;)p+=d;const b=Math.min(s.inHeight,f+o),v=C+n*I;for(let n=0;n<s.outWidth;++n){const o=n*c-y;let u=o;for(;u<0;)u+=h;const f=Math.min(s.inWidth,m+o),g=v+n*N;let w=x,k=0,I=0;for(let n=j;n<S;n+=l){const s=a+n*r[1];for(let n=p;n<b;n+=d){const a=s+n*r[2];for(let n=u;n<f;n+=h){const s=t[a+n*r[3]+e];if("max"===i&&s>w?w=s:"avg"===i&&(k+=s,I++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}O[g+e]="avg"===i?k/I:w}}}}return v}const Fl={kernelName:a.AvgPool,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Ic(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=a.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))d=Ac({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=a.util.computeStrides(s.shape),r=Rl(t,s.shape,s.dtype,e,l,"avg");d=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ml={kernelName:a.AvgPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:u,dimRoundingMode:c,dataFormat:l}=r;Ic(s,"avgPool3d");const d=a.backend_util.computePool3DInfo(s.shape,i,o,1,u,c,l),h=Dl(n.data.get(s.dataId).values,s.shape,s.dtype,a.util.computeStrides(s.shape),d,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ll={kernelName:a.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r;Ic([s,i],"avgPool3DGrad");const d=a.backend_util.computePool3DInfo(i.shape,o,u,1,c,l),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,b=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,x=d.dilationHeight,v=d.dilationWidth,O=d.effectiveFilterDepth,w=d.effectiveFilterHeight,k=d.effectiveFilterWidth,I=O-1-d.padInfo.front,N=k-1-d.padInfo.left,j=w-1-d.padInfo.top,S=Object(a.buffer)(i.shape,"float32"),C=1/(m*b*g),T=n.bufferSync(s);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-I,i=r-j,o=a-N;let u=0;for(let n=0;n<O;n+=y){const r=(s+n)/h;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=x){const a=(i+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=v){const s=(o+n)/f;if(s<0||s>=d.outWidth||Math.floor(s)!==s)continue;u+=T.get(t,r,a,s,e)}}}S.set(u*C,t,n,r,a,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zl={kernelName:a.AvgPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i;Ic([s,i],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=a.backend_util.computePool2DInfo(o.shape,u,c,1,l),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,b=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,O=y-1-d.padInfo.top,w=Object(a.buffer)(o.shape,"float32"),k=1/(f*m),I=n.data.get(s.dataId).values,N=Object(a.buffer)(s.shape,"float32",I);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-O,s=r-v;let i=0;for(let n=0;n<y;n+=b){const r=(a+n)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=g){const a=(s+n)/p;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;i+=N.get(t,r,a,e)}}w.set(i*k,t,n,r,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pl={kernelName:a.FusedBatchNorm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:i,offset:o,mean:u,variance:c}=e;a.util.assert(u.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.util.assert(null==o||u.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.util.assert(null==i||u.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ic([s,u,c,i,o],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(s.dataId).values,h=n.data.get(u.dataId).values,p=n.data.get(c.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),g=m.length,y=f.length,x=p.length,v=h.length;let O=0,w=0,k=0,I=0;for(let t=0;t<d.length;++t)b[t]=m[O++]+(d[t]-h[w++])*f[k++]/Math.sqrt(p[I++]+l),O>=g&&(O=0),w>=v&&(w=0),k>=y&&(k=0),I>=x&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(t,e,n,r,s){const i=a.slice_util.isSliceContinous(r,e,n),o=a.util.sizeFromShape(n),u=a.util.computeStrides(r);if(i){const n=a.slice_util.computeFlatOffset(e,u);return"string"===s?t.slice(n,n+o):t.subarray(n,n+o)}const c="string"===s?a.backend_util.fromUint8ToStringArray(t):t,l=Object(a.buffer)(r,s,c),d=Object(a.buffer)(n,s);for(let t=0;t<d.size;++t){const n=d.indexToLoc(t),r=n.map((t,n)=>t+e[n]);d.set(l.get(...r),...n)}return"string"===s?a.backend_util.fromStringArrayToUint8(d.values):d.values}function Wl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:o}=r;Ic(s,"slice");const[u,c]=a.slice_util.parseSliceParams(s,i,o);a.slice_util.assertParamsValid(s,u,c);const l=Bl(n.data.get(s.dataId).values,u,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,l)}const Vl={kernelName:a.Slice,backendName:"cpu",kernelFunc:Wl};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ul={kernelName:a.BatchToSpaceND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:o}=r;Ic([s],"batchToSpaceND");const u=i.reduce((t,e)=>t*e),c=a.backend_util.getReshaped(s.shape,i,u),l=a.backend_util.getPermuted(c.length,i.length),d=a.backend_util.getReshapedPermuted(s.shape,i,u),h=a.backend_util.getSliceBeginCoords(o,i.length),p=a.backend_util.getSliceSize(d,o,i.length),f=rl({inputs:{x:s},backend:n,attrs:{shape:c}}),m=bl({inputs:{x:f},backend:n,attrs:{perm:l}}),b=rl({inputs:{x:m},backend:n,attrs:{shape:d}}),g=Wl({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gl(t,e,n,r,s){const i=a.util.sizeFromShape(r),o=a.util.makeZerosTypedArray(s,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=i>0?e[n]:1)}return o}function Hl(t,e,n,r=!1){const s=t.shape[0],i=t.shape[1],o=Object(a.buffer)([s,n],e.dtype);for(let a=0;a<s;a++)for(let s=0;s<i;s++){const i=t.get(a,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,a,i):e.size>0?o.set(o.get(a,i)+e.get(a,s),a,i):o.set(o.get(a,i)+1,a,i))}return o}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ql={kernelName:a.Bincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i}=r,o=Gl(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kl(t){return(e,n,r)=>{const s=a.util.getTypedArrayFromDType(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xl=Kl(t=>Math.ceil(t)),Yl=Cc(a.Ceil,Xl),Jl={kernelName:a.Ceil,backendName:"cpu",kernelFunc:Yl},Zl=Sc(a.ClipByValue,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),Ql={kernelName:a.ClipByValue,backendName:"cpu",kernelFunc:Zl},td={kernelName:a.ComplexAbs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(a.util.sizeFromShape(e.shape)),s=n.data.get(e.dataId),i=s.complexTensorInfos.real,o=s.complexTensorInfos.imag,u=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values;for(let t=0;t<u.length;t++){const e=u[t],n=c[t];r[t]=Math.hypot(e,n)}return n.makeOutput(r,e.shape,"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ed(t,e,n,r){const s=a.util.getArrayFromDType(n,a.util.sizeFromShape(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=a.util.sizeFromShape(t.shape);s.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const i="string"===n?a.backend_util.fromUint8ToStringArray(t.vals):t.vals;let o=0;for(let n=0;n<t.shape[0];++n){const a=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[a+e]=i[o++]}r+=t.shape[1]})}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nd(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const rd={kernelName:a.Imag,backendName:"cpu",kernelFunc:nd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ad(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=a.util.parseAxisParam(s,e[0].shape)[0];let o=a.backend_util.computeOutShape(e.map(t=>t.shape),i);if(0===a.util.sizeFromShape(o))return n.makeTensorInfo(o,e[0].dtype,[]);const u=e.filter(t=>a.util.sizeFromShape(t.shape)>0);if(1===u.length)return Ac({inputs:{x:u[0]},backend:n});const c=u.map(t=>t.shape);if(a.backend_util.assertParamsConsistent(c,i),"complex64"===u[0].dtype){const t=u.map(t=>qc({inputs:{input:t},backend:n})),e=u.map(t=>nd({inputs:{input:t},backend:n})),r=ad({inputs:t,backend:n,attrs:{axis:i}}),a=ad({inputs:e,backend:n,attrs:{axis:i}}),s=Uc({inputs:{real:r,imag:a},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const l=u.map(t=>{const e=a.util.sizeFromShape(t.shape.slice(i));return rl({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),d=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));o=a.backend_util.computeOutShape(l.map(t=>t.shape),1);const h=1===l[0].shape[0],p=ed(d,o,e[0].dtype,h),f=a.backend_util.computeOutShape(u.map(t=>t.shape),i),m=n.makeTensorInfo(f,e[0].dtype,p);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}const sd={kernelName:a.Concat,backendName:"cpu",kernelFunc:ad};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function id(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r;Ic([s,i],"conv2d");const h=a.backend_util.convertConv2DDataFormat(c),p=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,l,u,d,!1,h),f=p.filterHeight,m=p.filterWidth,b=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,v="channelsLast"===p.dataFormat,O=new a.TensorBuffer(p.outShape,s.dtype),w=a.util.computeStrides(s.shape),k=a.util.computeStrides(i.shape),I=w[0],N=v?w[1]:w[2],j=v?w[2]:1,S=v?1:w[1],C=O.strides[0],T=v?O.strides[1]:O.strides[2],E=v?O.strides[2]:1,A=v?1:O.strides[1],$=n.data.get(s.dataId).values,R=n.data.get(i.dataId).values,_=O.values;for(let t=0;t<p.batchSize;++t){const e=t*I,n=t*C;for(let t=0;t<p.outHeight;++t){const r=n+t*T,a=t*p.strideHeight-x;for(let t=0;t<f;++t){const n=a+t*b;if(n<0||n>=p.inHeight)continue;const s=t*k[0],i=e+n*N;for(let t=0;t<p.outWidth;++t){const e=r+t*E,n=t*p.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const a=i+r*j;let o=s+t*k[1];for(let t=0;t<p.inChannels;++t){const n=$[a+t*S];for(let t=0;t<p.outChannels;++t)_[e+t*A]+=n*R[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(O.shape,O.dtype,_)}const od={kernelName:a.Conv2D,backendName:"cpu",kernelFunc:id};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ud={kernelName:a.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r;Ic([s,i],"conv2dBackpropFilter");const h=a.backend_util.convertConv2DDataFormat(c),p=a.backend_util.computeConv2DInfo(s.shape,d,o,1,u,l,!1,h),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y="channelsLast"===p.dataFormat,x=new a.TensorBuffer(p.filterShape,"float32"),v=p.padInfo.left,O=p.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new a.TensorBuffer(s.shape,s.dtype,w),N=new a.TensorBuffer(i.shape,i.dtype,k);for(let t=0;t<b;++t){const e=Math.max(0,Math.ceil((O-t)/f)),n=Math.min(p.outHeight,(p.inHeight+O-t)/f);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((v-r)/m)),s=Math.min(p.outWidth,(p.inWidth+v-r)/m);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let c=0;c<p.batchSize;++c)for(let l=e;l<n;++l){const e=t+l*f-O;for(let t=a;t<s;++t){const n=r+t*m-v;u+=y?I.get(c,e,n,i)*N.get(c,l,t,o):I.get(c,i,e,n)*N.get(c,o,l,t)}}x.set(u,t,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cd={kernelName:a.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:o,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r;Ic([s,i],"conv2dBackpropInput");const h=a.util.computeStrides(i.shape),p=a.util.computeStrides(s.shape);let f=a.backend_util.convertConv2DDataFormat(l);const m=a.backend_util.computeConv2DInfo(o,i.shape,u,1,c,d,!1,f),b=new a.TensorBuffer(m.inShape,"float32"),g=b.values,y=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[v,O,w]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:j,inHeight:S,inWidth:C,outChannels:T,outHeight:E,outWidth:A,strideHeight:$,strideWidth:R}=m;f=m.dataFormat;const _=I-1-m.padInfo.top,D=N-1-m.padInfo.left,F="channelsLast"===f,M=b.strides[0],L=F?b.strides[1]:b.strides[2],z=F?b.strides[2]:1,P=F?1:b.strides[1],B=p[0],W=F?p[1]:p[2],V=F?p[2]:1,U=F?1:p[1];for(let t=0;t<k;++t)for(let e=0;e<j;++e)for(let n=0;n<S;++n){const r=n-_,a=Math.max(0,Math.ceil(r/$)),s=Math.min(E,(I+r)/$);for(let i=0;i<C;++i){const o=i-D,u=Math.max(0,Math.ceil(o/R)),c=Math.min(A,(N+o)/R);let l=0;for(let n=a;n<s;++n){const a=n*$-r;for(let r=u;r<c;++r){const s=B*t+W*n+V*r,i=v*(I-1-a)+O*(N-1-(r*R-o))+w*e;for(let t=0;t<T;++t){l+=y[s+U*t]*x[i+t]}}}g[M*t+L*n+z*i+P*e]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ld={kernelName:a.Conv3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dilations:c}=r;Ic([s,i],"conv3d");const l=a.backend_util.computeConv3DInfo(s.shape,i.shape,o,c,u),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=l,y=g.front,x=g.left,v=g.top,O=new a.TensorBuffer(l.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=O.values,N=a.util.computeStrides(s.shape),j=a.util.computeStrides(i.shape);for(let t=0;t<l.batchSize;++t){const e=t*N[0],n=t*O.strides[0];for(let t=0;t<l.outDepth;++t){const r=n+t*O.strides[1],a=t*l.strideDepth-y;for(let t=0;t<d;++t){const n=a+t*f;if(n<0||n>=l.inDepth)continue;const s=t*j[0],i=e+n*N[1];for(let t=0;t<l.outHeight;++t){const e=r+t*O.strides[2],n=t*l.strideHeight-v;for(let t=0;t<h;++t){const r=n+t*m;if(r<0||r>=l.inHeight)continue;const a=s+t*j[1],o=i+r*N[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-x;for(let t=0;t<p;++t){const e=r+t*b;if(e<0||e>=l.inWidth)continue;const s=a+t*j[2],i=o+e*l.inChannels;let u=s;for(let t=0;t<l.inChannels;++t){const e=w[i+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*k[u+t];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dd={kernelName:a.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:u,filterShape:c}=r;Ic([s,i],"conv3dBackpropFilterV2");const l=a.util.computeStrides(s.shape),d=a.util.computeStrides(i.shape),h=a.backend_util.computeConv3DInfo(s.shape,c,o,1,u),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,x=new a.TensorBuffer(h.filterShape,"float32"),v=x.values,[O,w,k,I]=x.strides,N=n.data.get(i.dataId).values,[j,S,C,T]=d,E=n.data.get(s.dataId).values,[A,$,R,_]=l,D=h.padInfo.front,F=h.padInfo.left,M=h.padInfo.top;for(let t=0;t<b;++t){const e=Math.max(0,Math.ceil((D-t)/p)),n=Math.min(h.outDepth,(h.inDepth+D-t)/p),r=t*O;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((M-a)/f)),i=Math.min(h.outHeight,(h.inHeight+M-a)/f),o=a*w+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((F-r)/m)),c=Math.min(h.outWidth,(h.inWidth+F-r)/m),l=r*k+o;for(let o=0;o<h.inChannels;++o){const d=o*I+l;for(let l=0;l<h.outChannels;++l){let b=0;for(let d=0;d<h.batchSize;++d){const h=d*A,g=d*j;for(let d=e;d<n;++d){const e=(t+d*p-D)*$+h,n=d*S+g;for(let t=s;t<i;++t){const s=(a+t*f-M)*R+e,i=t*C+n;for(let t=u;t<c;++t){const e=t*T+i;b+=E[(r+t*m-F)*_+s+o]*N[e+l]}}}}v[d+l]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hd={kernelName:a.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:o,strides:u,inputShape:c}=r;Ic([s],"conv3dBackpropInputV2");const l=a.util.computeStrides(s.shape),d=a.util.computeStrides(i.shape),h=a.backend_util.computeConv3DInfo(c,i.shape,u,1,o),p=new a.TensorBuffer(h.inShape,"float32"),f=p.values,[m,b,g,y]=p.strides,x=n.data.get(s.dataId).values,[v,O,w,k]=l,I=n.data.get(i.dataId).values,[N,j,S,C]=d,{batchSize:T,filterDepth:E,filterHeight:A,filterWidth:$,inChannels:R,inDepth:_,inHeight:D,inWidth:F,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=h,U=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=$-1-h.padInfo.left;for(let t=0;t<T;++t)for(let e=0;e<R;++e)for(let n=0;n<_;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),c=Math.min(z,(A+o)/W);for(let l=0;l<F;++l){const d=l-H,h=Math.max(0,Math.ceil(d/V)),p=Math.min(P,($+d)/V);let T=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<c;++r){const s=r*W-o;for(let i=h;i<p;++i){const o=v*t+O*n+w*r+k*i,u=N*(E-1-a)+j*(A-1-s)+S*($-1-(i*V-d))+C*e;for(let t=0;t<M;++t){T+=x[o+t]*I[u+t]}}}}f[m*t+b*n+g*i+y*l+e]=T}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},pd=Sc(a.Cos,t=>Math.cos(t)),fd={kernelName:a.Cos,backendName:"cpu",kernelFunc:pd},md=Sc(a.Cosh,t=>Math.cosh(t)),bd={kernelName:a.Cosh,backendName:"cpu",kernelFunc:md};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gd={kernelName:a.CropAndResize,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:i,boxInd:o}=e,{cropSize:u,method:c,extrapolationValue:l}=r,[d,h,p,f]=s.shape,m=i.shape[0],[b,g]=u,y=Object(a.buffer)([m,b,g,f],"float32"),x=n.data.get(i.dataId).values,v=n.data.get(o.dataId).values,O=n.data.get(s.dataId).values,w=a.util.computeStrides(s.shape),k=a.util.computeStrides(y.shape);for(let t=0;t<m;t++){const e=4*t,n=x[e],r=x[e+1],a=x[e+2],s=x[e+3],i=v[t];if(i>=d)continue;const o=b>1?(a-n)*(h-1)/(b-1):0,u=g>1?(s-r)*(p-1)/(g-1):0;for(let e=0;e<b;e++){const d=b>1?n*(h-1)+e*o:.5*(n+a)*(h-1);if(d<0||d>h-1)for(let n=0;n<g;n++)for(let r=0;r<f;r++){const a=r+n*k[2]+e*k[1]+t*k[0];y.values[a]=l}else if("bilinear"===c){const n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let c=0;c<g;c++){const d=g>1?r*(p-1)+c*u:.5*(r+s)*(p-1);if(d<0||d>p-1){for(let n=0;n<f;n++){const r=n+c*k[2]+e*k[1]+t*k[0];y.values[r]=l}continue}const h=Math.floor(d),m=Math.ceil(d),b=d-h;for(let r=0;r<f;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const u=O[s];s=r+m*w[2]+n*w[1]+i*w[0];const l=O[s];s=r+h*w[2]+a*w[1]+i*w[0];const d=O[s];s=r+m*w[2]+a*w[1]+i*w[0];const p=u+(l-u)*b,f=d+(O[s]-d)*b;s=r+c*k[2]+e*k[1]+t*k[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*u:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<f;r++){const a=r+n*k[2]+e*k[1]+t*k[0];y.values[a]=l}continue}const o=Math.round(a),c=Math.round(d);for(let r=0;r<f;r++){const a=r+o*w[2]+c*w[1]+i*w[0],s=r+n*k[2]+e*k[1]+t*k[0];y.values[s]=O[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yd={kernelName:a.Cumsum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:u}=r;Ic(s,"cumsum");const c=a.backend_util.getAxesPermutation([i],s.shape.length);let l=s;null!=c&&(l=bl({inputs:{x:s},backend:n,attrs:{perm:c}}));const d=a.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const h=Object(a.upcastType)(l.dtype,"int32"),p=a.util.makeZerosTypedArray(a.util.sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],b=u?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let t=0;t<f.length;t+=m)for(let e=0;e<m;e++){const n=b(t,e);if(0===e)p[n]=o?0:f[n];else{const r=b(t,e-1);p[n]=o?f[r]+p[r]:f[n]+p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=c){const t=bl({inputs:{x:g},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xd={kernelName:a.DenseBincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const t=Gl(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,t)}if(2===a.shape.length){const t=Hl(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vd={kernelName:a.DepthToSpace,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:o}=r;a.util.assert("NHWC"===o,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+o),a.util.assert(i>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+i);const u=s.shape[0],c=s.shape[1],l=s.shape[2],d=s.shape[3],h=c*i,p=l*i,f=d/(i*i),m=n.data.get(s.dataId).values,b=new Float32Array(u*h*p*f);let g=0;for(let t=0;t<u;++t)for(let e=0;e<h;++e){const n=Math.floor(e/i),r=e%i;for(let e=0;e<p;++e){const a=Math.floor(e/i),s=(r*i+e%i)*f;for(let e=0;e<f;++e){const r=e+s+d*(a+l*(n+c*t));b[g++]=m[r]}}}return n.makeTensorInfo([u,h,p,f],s.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Od(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dilations:c,dimRoundingMode:l}=r;Ic([s,i],"depthwiseConv2DNative");const d=a.util.computeStrides(s.shape),h=a.util.computeStrides(i.shape);let p=c;null==p&&(p=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`);const f=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,p,u,l,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:x}=f,v=x.left,O=x.top,w=f.outChannels/f.inChannels,k=new a.TensorBuffer(f.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(i.dataId).values,j=k.values;for(let t=0;t<f.batchSize;++t){const e=t*d[0],n=t*k.strides[0];for(let t=0;t<f.outHeight;++t){const r=n+t*k.strides[1],a=t*f.strideHeight-v;for(let t=0;t<m;++t){const n=a+t*g;if(n<0||n>=f.inHeight)continue;const s=t*h[0],i=e+n*d[1];for(let t=0;t<f.outWidth;++t){const e=r+t*k.strides[2],n=t*f.strideWidth-O;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const a=s+t*h[1],o=i+r*f.inChannels;let u=e,c=a;for(let t=0;t<f.inChannels;++t){const e=I[o+t];for(let t=0;t<w;++t)j[u+t]+=e*N[c+t];u+=w,c+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const wd={kernelName:a.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Od};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kd={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r;Ic([s,i],"depthwiseConv2dNativeBackpropFilter");const h=a.backend_util.computeConv2DInfo(s.shape,d,o,u,c,l,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g=new a.TensorBuffer(h.filterShape,"float32"),y=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,O=n.data.get(s.dataId).values,w=new a.TensorBuffer(s.shape,s.dtype,O),k=n.data.get(i.dataId).values,I=new a.TensorBuffer(i.shape,i.dtype,k);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((x-t)/p)),n=Math.min(h.outHeight,(h.inHeight+x-t)/p);for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((y-r)/f)),s=Math.min(h.outWidth,(h.inWidth+y-r)/f);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/v),u=i%v;let c=0;for(let u=0;u<h.batchSize;++u)for(let l=e;l<n;++l){const e=t+l*p-x;for(let t=a;t<s;++t){const n=r+t*f-y;c+=w.get(u,e,n,o)*I.get(u,l,t,i)}}g.set(c,t,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Id={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:o,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r;Ic([s,i],"depthwiseConv2DNativeBackpropInput");const h=a.util.computeStrides(s.shape),p=a.util.computeStrides(i.shape),f=a.backend_util.computeConv2DInfo(d,i.shape,o,u,c,l,!0),m=new a.TensorBuffer(f.inShape,"float32"),b=m.values,[g,y,x]=m.strides,v=n.data.get(s.dataId).values,[O,w,k]=h,I=n.data.get(i.dataId).values,[N,j,S]=p,{batchSize:C,filterHeight:T,filterWidth:E,inChannels:A,inHeight:$,inWidth:R,outChannels:_,outHeight:D,outWidth:F,strideHeight:M,strideWidth:L}=f,z=T-1-f.padInfo.top,P=E-1-f.padInfo.left,B=_/A;for(let t=0;t<C;++t)for(let e=0;e<A;++e)for(let n=0;n<$;++n){const r=n-z,a=Math.max(0,Math.ceil(r/M)),s=Math.min(D,(T+r)/M);for(let i=0;i<R;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),c=Math.min(F,(E+o)/L);let l=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=u;r<c;++r){const s=O*t+w*n+k*r,i=N*(T-1-a)+j*(E-1-(r*L-o))+S*e;for(let t=0;t<B;++t){l+=v[s+(e*B+t)]*I[i+t]}}}b[g*t+y*n+x*i+e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nd={kernelName:a.Diag,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=a.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,o=Object(a.buffer)([s,s],r.dtype),u=o.values;for(let t=0;t<i.length;t++)u[t*s+t]=i[t];const c=[...r.shape,...r.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},jd={kernelName:a.Dilation2D,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,l=c.data.get(r.dataId).values,d=r.shape.length,h=c.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:v,strideHeight:O,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:j,outShape:S}=a.backend_util.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u),C=a.util.sizeFromShape(S),T=S.length,E=a.util.getArrayFromDType(r.dtype,C);for(let t=0;t<f;++t)for(let e=0;e<y;++e){const n=e*O-v.top;for(let i=0;i<x;++i){const o=i*w-v.left;for(let u=0;u<g;++u){let c=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const i=n+e*N;if(i>=0&&i<m)for(let n=0;n<I;++n){const f=o+n*j;if(f>=0&&f<b){const o=a.util.locToIndex([t,i,f,u],d,a.util.computeStrides(r.shape)),m=a.util.locToIndex([e,n,u],p,a.util.computeStrides(s.shape)),b=l[o]+h[m];b>c&&(c=b)}}}E[a.util.locToIndex([t,e,i,u],T,a.util.computeStrides(S))]=c}}}return{dataId:c.write(a.util.toTypedArray(E,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},Sd={kernelName:a.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:c}=n,l=e,d=a.util.toNestedArray(r.shape,l.data.get(r.dataId).values),h=a.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:O,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:j}=a.backend_util.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",c);a.util.assert(i.rank===j.length,()=>`Error in ${a.Dilation2DBackpropFilter}, dy must have the same rank as output ${j.length}, but got `+i.rank);const S=a.util.toNestedArray(j,l.data.get(i.dataId).values),C=a.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*v-x.top;for(let r=0;r<y;++r){const a=r*O-x.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let e=0;e<w;++e){const r=n+e*I;if(r>=0&&r<f)for(let n=0;n<k;++n){const c=a+n*N;if(c>=0&&c<m){const a=d[t][r][c][s]+h[e][n][s];a>i&&(i=a,o=e,u=n)}}}C[o][u][s]+=S[t][e][r][s]}}}return{dataId:l.write(a.util.toTypedArray(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Cd={kernelName:a.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:c}=n,l=e,d=a.util.toNestedArray(r.shape,l.data.get(r.dataId).values),h=a.util.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:v,strideWidth:O,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:j}=a.backend_util.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",c);a.util.assert(i.rank===j.length,()=>`Error in ${a.Dilation2DBackpropInput}, dy must have the same rank as output ${j.length}, but got `+i.rank);const S=a.util.toNestedArray(j,l.data.get(i.dataId).values),C=a.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let t=0;t<p;++t)for(let e=0;e<g;++e){const n=e*v-x.top;for(let r=0;r<y;++r){const a=r*O-x.left;for(let s=0;s<b;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let e=0;e<w;++e){const r=n+e*I;if(r>=0&&r<f)for(let n=0;n<k;++n){const c=a+n*N;if(c>=0&&c<m){const a=d[t][r][c][s]+h[e][n][s];a>i&&(i=a,o=r,u=c)}}}C[t][o][u][s]+=S[t][e][r][s]}}}return{dataId:l.write(a.util.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Td={kernelName:a.EluGrad,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;Ic([r,s],"eluGrad");const i=new Float32Array(a.util.sizeFromShape(s.shape)),o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values;for(let t=0;t<o.length;++t){const e=o[t];i[t]=e>=1?u[t]:u[t]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}},Ed=Dc((t,e)=>t===e?1:0),Ad=Jc(a.Equal,Ed,null,"bool"),$d={kernelName:a.Equal,backendName:"cpu",kernelFunc:Ad},Rd=a.backend_util.ERF_P,_d=a.backend_util.ERF_A1,Dd=a.backend_util.ERF_A2,Fd=a.backend_util.ERF_A3,Md=a.backend_util.ERF_A4,Ld=a.backend_util.ERF_A5,zd=Sc(a.Erf,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+Rd*n);return e*(1-((((Ld*r+Md)*r+Fd)*r+Dd)*r+_d)*r*Math.exp(-n*n))}),Pd={kernelName:a.Erf,backendName:"cpu",kernelFunc:zd},Bd=Kl(t=>Math.exp(t)),Wd=Cc(a.Exp,Bd),Vd={kernelName:a.Exp,backendName:"cpu",kernelFunc:Wd};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ud(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:i}=r,o=s.shape.length,u=s.shape.slice();let c=i;return i<0&&(a.util.assert(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+i+1),u.splice(c,0,1),rl({inputs:{x:s},backend:n,attrs:{shape:u}})}const Gd={kernelName:a.ExpandDims,backendName:"cpu",kernelFunc:Ud},Hd=Kl(t=>Math.expm1(t)),qd=Cc(a.Expm1,Hd),Kd={kernelName:a.Expm1,backendName:"cpu",kernelFunc:qd},Xd=Dc((t,e)=>t*e),Yd=Zc((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),Jd=Jc(a.Multiply,Xd,Yd),Zd={kernelName:a.Multiply,backendName:"cpu",kernelFunc:Jd},Qd=Dc((t,e)=>t/e),th=Jc(a.RealDiv,Qd),eh={kernelName:a.RealDiv,backendName:"cpu",kernelFunc:th},nh=Dc((t,e)=>t-e),rh=Zc((t,e,n,r)=>({real:t-n,imag:e-r})),ah=Jc(a.Sub,nh,rh),sh={kernelName:a.Sub,backendName:"cpu",kernelFunc:ah};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ih(t,e,n){const r=t.shape,s=r[0],i=r[1],o=n.data.get(t.dataId),u=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[s,i],d=a.util.sizeFromShape(l),h=a.util.getTypedArrayFromDType("float32",d),p=a.util.getTypedArrayFromDType("float32",d);for(let t=0;t<s;t++){const r=Wl({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,i]}}),s=Wl({inputs:{x:c},backend:n,attrs:{begin:[t,0],size:[1,i]}}),o=Uc({inputs:{real:r,imag:s},backend:n}),{real:l,imag:d}=oh(o,e,n),f=a.backend_util.mergeRealAndImagArrays(l,d);for(let e=0;e<i;e++){const n=a.backend_util.getComplexWithIndex(f,e);h[t*i+e]=n.real,p[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),b=Uc({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function oh(t,e,n){const r=a.util.sizeFromShape(t.shape),s=n.data.get(t.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=r)&u-1)){const s=function t(e,n,r,s,i){if(1===r)return{real:e,imag:n};const o=a.backend_util.mergeRealAndImagArrays(e,n),u=r/2,c=a.backend_util.complexWithEvenIndex(o),l=c.real,d=c.imag,h=[l.length],p=i.makeTensorInfo(h,"float32",l),f=i.makeTensorInfo(h,"float32",d),m=Uc({inputs:{real:p,imag:f},backend:i}),b=a.backend_util.complexWithOddIndex(o),g=b.real,y=b.imag,x=[g.length],v=i.makeTensorInfo(x,"float32",g),O=i.makeTensorInfo(x,"float32",y),w=Uc({inputs:{real:v,imag:O},backend:i}),k=t(l,d,u,s,i),I=k.real,N=k.imag,j=[I.length],S=i.makeTensorInfo(j,"float32",I),C=i.makeTensorInfo(j,"float32",N),T=Uc({inputs:{real:S,imag:C},backend:i}),E=t(g,y,u,s,i),A=E.real,$=E.imag,R=[A.length],_=i.makeTensorInfo(R,"float32",A),D=i.makeTensorInfo(R,"float32",$),F=Uc({inputs:{real:_,imag:D},backend:i}),M=a.backend_util.exponents(r,s),L=[M.real.length],z=i.makeTensorInfo(L,"float32",M.real),P=i.makeTensorInfo(L,"float32",M.imag),B=Uc({inputs:{real:z,imag:P},backend:i}),W=Jd({inputs:{a:B,b:F},backend:i}),V=el({inputs:{a:T,b:W},backend:i}),U=ah({inputs:{a:T,b:W},backend:i}),G=qc({inputs:{input:V},backend:i}),H=qc({inputs:{input:U},backend:i}),q=nd({inputs:{input:V},backend:i}),K=nd({inputs:{input:U},backend:i}),X=ad({inputs:[G,H],backend:i,attrs:{axis:0}}),Y=ad({inputs:[q,K],backend:i,attrs:{axis:0}}),J=i.data.get(X.dataId).values,Z=i.data.get(Y.dataId).values;return i.disposeIntermediateTensorInfo(p),i.disposeIntermediateTensorInfo(f),i.disposeIntermediateTensorInfo(m),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(w),i.disposeIntermediateTensorInfo(S),i.disposeIntermediateTensorInfo(C),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(_),i.disposeIntermediateTensorInfo(D),i.disposeIntermediateTensorInfo(F),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(q),i.disposeIntermediateTensorInfo(H),i.disposeIntermediateTensorInfo(K),i.disposeIntermediateTensorInfo(X),i.disposeIntermediateTensorInfo(Y),{real:J,imag:Z}}(i,o,r,e,n),u=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(u,"float32",s.real),e=n.makeTensorInfo(u,"float32",s.imag),i=n.makeTensorInfo([],"float32",a.util.createScalarValue(r,"float32")),o=Ac({inputs:{x:i},backend:n}),c=eh.kernelFunc({inputs:{a:t,b:i},backend:n}),l=eh.kernelFunc({inputs:{a:e,b:o},backend:n}),d=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:d,imag:h}}return s}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let s=0;s<e;s++){let i=0,o=0;for(let r=0;r<e;r++){const u=a.backend_util.exponent(s*r,e,n),c=a.backend_util.getComplexWithIndex(t,r);i+=c.real*u.real-c.imag*u.imag,o+=c.real*u.imag+c.imag*u.real}n&&(i/=e,o/=e),a.backend_util.assignToTypedArray(r,i,o,s)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(a.backend_util.mergeRealAndImagArrays(i,o),r,e);return a.backend_util.splitRealAndImagArrays(t)}var u}const uh={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=a.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=rl({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),u=ih(o,!1,n),c=rl({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ch(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:i}=n,o=i||a.util.inferDtype(s),u=a.util.getArrayFromDType(o,a.util.sizeFromShape(r));return function(t,e,n){t.fill(e)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(u,s),e.makeTensorInfo(r,o,u)}const lh={kernelName:a.Fill,backendName:"cpu",kernelFunc:ch};const dh={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,i=a.util.getTypedArrayFromDType(r.dtype,a.util.sizeFromShape(r.shape)),[o,u,c,l]=r.shape,d=s.data.get(r.dataId).values;for(let t=0;t<o;t++){const e=t*c*u*l;for(let t=0;t<u;t++){const n=t*(c*l);for(let r=0;r<c;r++){const a=r*l;for(let s=0;s<l;s++){const u=[o,t,r,s][2],h=Math.round(c-u),p=e+n+a+s;let f=d[p];if(h>=0&&h<c){f=d[e+n+h*l+s]}i[p]=f}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},hh=Kl(t=>Math.floor(t)),ph=Cc(a.Floor,hh),fh={kernelName:a.Floor,backendName:"cpu",kernelFunc:ph},mh=Dc((t,e)=>Math.floor(t/e)),bh=Jc(a.FloorDiv,mh,null,"int32"),gh={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:bh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yh={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=id({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=m;m=el({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Vc(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xh={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Od({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=m;m=el({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=Vc(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vh={kernelName:a.GatherNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=a.util.sizeFromShape(r.shape),o=s.shape,u=o[o.length-1],[c,l,d,h]=a.backend_util.prepareAndValidate(r,s);if(0===l)return n.makeTensorInfo(c,r.dtype,[]);const p=Object(a.buffer)([l,d],r.dtype),f=n.data.get(s.dataId).values,m=n.data.get(r.dataId).values;for(let t=0;t<l;t++){const e=[];let n=0;for(let r=0;r<u;r++){const a=f[t*u+r];n+=a*h[r],e.push(a)}if(n<0||n>=i/d)throw new Error(`Invalid indices: ${e} does not index into ${r.shape}`);for(let e=0;e<d;e++)p.values[t*d+e]=m[n*d+e]}return n.makeTensorInfo(c,p.dtype,p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oh(t,e,n){const r=Object(a.buffer)(n,t.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=e.locToIndex([s,i]);a[2]=e.values[o];const u=t.locToIndex(a);r.values[n]=t.values[u]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wh={kernelName:a.GatherV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:o,batchDims:u}=r;Ic([s,i],"gatherV2");let c=u;null==u&&(c=0);const l=a.util.sizeFromShape(i.shape),d=a.util.parseAxisParam(o,s.shape)[0],h=a.backend_util.segment_util.collectGatherOpShapeInfo(s,i,d,c),p=rl({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=rl({inputs:{x:i},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),m=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],b=n.bufferSync(f),g=Oh(n.bufferSync(p),b,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,g.dtype,g.values)}},kh=Dc((t,e)=>t>e?1:0),Ih=Jc(a.Greater,kh,null,"bool"),Nh={kernelName:a.Greater,backendName:"cpu",kernelFunc:Ih},jh=Dc((t,e)=>t>=e?1:0),Sh=Jc(a.GreaterEqual,jh,null,"bool"),Ch={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:Sh};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Th={kernelName:a.IFFT,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,{input:r}=e,s=a.util.sizeFromShape(r.shape),i=r.shape[r.shape.length-1],o=rl({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),u=ih(o,!0,n),c=rl({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}},Eh=Sc(a.IsFinite,t=>Number.isFinite(t)?1:0,"bool"),Ah={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:Eh},$h=Sc(a.IsInf,t=>Math.abs(t)===1/0?1:0,"bool"),Rh={kernelName:a.IsInf,backendName:"cpu",kernelFunc:$h},_h=Sc(a.IsNan,t=>Number.isNaN(t)?1:0,"bool"),Dh={kernelName:a.IsNan,backendName:"cpu",kernelFunc:_h},Fh=Dc((t,e)=>t<e?1:0),Mh=Jc(a.Less,Fh,null,"bool"),Lh={kernelName:a.Less,backendName:"cpu",kernelFunc:Mh},zh=Dc((t,e)=>t<=e?1:0),Ph=Jc(a.LessEqual,zh,null,"bool"),Bh={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:Ph};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wh(t,e,n){const r=(e-t)/(n-1),s=a.util.makeZerosTypedArray(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vh={kernelName:a.LinSpace,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:s}=n,i=Wh(r,a,s);return e.makeTensorInfo([i.length],"float32",i)}},Uh=Kl(t=>Math.log(t)),Gh=Cc(a.Log,Uh),Hh={kernelName:a.Log,backendName:"cpu",kernelFunc:Gh},qh=Sc(a.Log1p,t=>Math.log1p(t)),Kh={kernelName:a.Log1p,backendName:"cpu",kernelFunc:qh},Xh=Dc((t,e)=>t&&e),Yh=Jc(a.LogicalAnd,Xh,null,"bool"),Jh={kernelName:a.LogicalAnd,backendName:"cpu",kernelFunc:Yh},Zh=Sc(a.LogicalNot,t=>t?0:1,"bool"),Qh={kernelName:a.LogicalNot,backendName:"cpu",kernelFunc:Zh},tp=Dc((t,e)=>t||e),ep=Jc(a.LogicalOr,tp,null,"bool"),np={kernelName:a.LogicalOr,backendName:"cpu",kernelFunc:ep};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rp={kernelName:a.LRN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:o,alpha:u,beta:c}=r;Ic(s,"LRN");const l=s.shape[3],d=l-1,h=n.data.get(s.dataId).values,p=a.util.sizeFromShape(s.shape),f=new Float32Array(p);function m(t){const e=t%l;let n=t-e+Math.max(0,e-i);const r=t-e+Math.min(e+i,d);let a=0;for(;n<=r;n++){const t=h[n];a+=t*t}return a}for(let t=0;t<p;t++){const e=m(t),n=h[t]*Math.pow(o+u*e,-c);f[t]=n}return n.makeTensorInfo(s.shape,s.dtype,f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ap={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:i,dy:o}=e,{depthRadius:u,bias:c,alpha:l,beta:d}=r;Ic(o,"LRNGrad");const h=a.util.sizeFromShape(o.shape),p=o.shape[3],f=n.data.get(o.dataId).values,m=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,g=new Float32Array(h),y=h;for(let t=0;t<y;t++){const e=t%p,n=t-e+Math.max(0,e-u),r=t-e+Math.min(p,e+u+1);let a=0;for(let t=n;t<r;t++)a+=Math.pow(m[t],2);a=l*a+c;for(let e=n;e<r;e++){let n=-2*l*d*m[e]*b[t]/a;t===e&&(n+=Math.pow(a,-d)),n*=f[t],g[e]+=n}}return n.makeTensorInfo(o.shape,s.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sp(t,e,n,r){const s=a.util.getTypedArrayFromDType(r,a.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>a&&(a=e)}s[n]=a}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ip(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:o}=r,u=n;let c=s.shape;const l=c.length,d=a.util.parseAxisParam(i,c);let h=d;const p=a.backend_util.getAxesPermutation(h,l);let f=u.data.get(s.dataId).values;if(null!=p){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=c[p[e]];f=ml(f,c,s.dtype,p,t),h=a.backend_util.getInnerMostAxes(h.length,l),c=t}Ic(s,"max"),a.backend_util.assertAxesAreInnerMostDims("max",h,l);const[m,b]=a.backend_util.computeOutAndReduceShapes(c,h),g=sp(f,a.util.sizeFromShape(b),m,s.dtype),y=u.write(g,m,s.dtype);let x=m;if(o){x=a.backend_util.expandShapeToKeepDim(m,d)}return{dataId:y,shape:x,dtype:s.dtype}}const op={kernelName:a.Max,backendName:"cpu",kernelFunc:ip},up=Dc((t,e)=>Math.max(t,e)),cp=Jc(a.Maximum,up),lp={kernelName:a.Maximum,backendName:"cpu",kernelFunc:cp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dp={kernelName:a.MaxPool,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Ic(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=a.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))d=Ac({inputs:{x:s},backend:n});else{const t=n.data.get(s.dataId).values,e=a.util.computeStrides(s.shape),r=Rl(t,s.shape,s.dtype,e,l,"max");d=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hp={kernelName:a.MaxPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:u,dimRoundingMode:c,dataFormat:l}=r;Ic(s,"maxPool3d");const d=a.backend_util.computePool3DInfo(s.shape,i,o,1,u,c,l),h=Dl(n.data.get(s.dataId).values,s.shape,s.dtype,a.util.computeStrides(s.shape),d,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pp={kernelName:a.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r;Ic([s,i],"maxPool3DGrad");const d=a.backend_util.computePool3DInfo(i.shape,o,u,1,c,l),h=function(t,e){const n=Object(a.buffer)(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let a=0;a<e.batchSize;++a)for(let b=0;b<e.inChannels;++b)for(let g=0;g<e.outDepth;++g){const y=g*r-p;let x=y;for(;x<0;)x+=o;const v=Math.min(e.inDepth,l+y);for(let r=0;r<e.outHeight;++r){const l=r*s-f;let p=l;for(;p<0;)p+=u;const O=Math.min(e.inHeight,d+l);for(let s=0;s<e.outWidth;++s){const f=s*i-m;let w=f;for(;w<0;)w+=c;const k=Math.min(e.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<v;e+=o){const n=e-y;for(let r=p;r<O;r+=u){const s=r-l;for(let i=w;i<k;i+=c){const o=i-f,u=t.get(a,e,r,i,b);u>=I&&(I=u,N=n*d*h+s*d+o)}}}n.set(N,a,g,r,s,b)}}}return n}(n.bufferSync(i),d),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,b=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,O=d.effectiveFilterWidth,w=x-1-d.padInfo.front,k=O-1-d.padInfo.left,I=v-1-d.padInfo.top,N=Object(a.buffer)(i.shape,"float32"),j=n.bufferSync(s);for(let t=0;t<d.batchSize;++t)for(let e=0;e<d.inChannels;++e)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-w,i=r-I,o=a-k;let u=0;for(let n=0;n<x;n+=b){const r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<v;a+=g){const s=(i+a)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<O;i+=y){const c=(o+i)/m;if(c<0||c>=d.outWidth||Math.floor(c)!==c)continue;const l=x*v*O-1-h.get(t,r,s,c,e)===n*v*O+a*O+i?1:0;if(0===l)continue;u+=j.get(t,r,s,c,e)*l}}}N.set(u,t,n,r,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fp={kernelName:a.MaxPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:o}=e,u=i;Ic([i,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=r,p=a.backend_util.computePool2DInfo(u.shape,c,l,1,d,h),f=n.data.get(u.dataId).values,m=Object(a.buffer)(p.outShape,u.dtype,_l(f,u.shape,u.dtype,p).values),b=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterHeight,O=p.effectiveFilterWidth,w=O-1-p.padInfo.left,k=v-1-p.padInfo.top,I=Object(a.buffer)(u.shape,"float32"),N=n.data.get(s.dataId).values,j=Object(a.buffer)(s.shape,"float32",N);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<v;n+=y){const r=(a+n)/b;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<O;a+=x){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=v*O-1-m.get(t,r,o,e)===n*O+a?1:0;if(0===u)continue;i+=j.get(t,r,o,e)*u}}I.set(i,t,n,r,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const mp={kernelName:a.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=e,c=n;Ic(r,"MaxPoolWithArgmax");const l=c.data.get(r.dataId).values,d=a.backend_util.computePool2DInfo(r.shape,s,i,[1,1],o),[h,p]=function(t,e,n,r,s){const i=Rl(t,0,n,a.util.computeStrides(e),s,"max"),o=_l(t,e,n,s,!0,r);return[i.values,o.values]}(l,r.shape,r.dtype,u,d),f=c.write(h,d.outShape,r.dtype),m=c.write(p,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bp(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;let u;Ic(s,"sum"),u="bool"===s.dtype?Xc({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Ac({inputs:{x:s},backend:n});const c=u.shape.length,l=a.util.parseAxisParam(i,u.shape),d=a.backend_util.getAxesPermutation(l,c);let h=l,p=u;null!=d&&(p=bl({inputs:{x:u},backend:n,attrs:{perm:d}}),h=a.backend_util.getInnerMostAxes(h.length,c)),a.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=a.backend_util.computeOutAndReduceShapes(p.shape,h);let b=Hc(n,f,a.backend_util.upcastType(p.dtype,"int32"));const g=a.util.sizeFromShape(m),y=n.data.get(b.dataId).values,x=n.data.get(p.dataId).values;for(let t=0;t<y.length;++t){const e=t*g;let n=0;for(let t=0;t<g;++t)n+=x[e+t];y[t]=n}if(o){const t=b;b=rl({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(b.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(u),null!=d&&n.disposeIntermediateTensorInfo(p),b}const gp={kernelName:a.Sum,backendName:"cpu",kernelFunc:bp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yp={kernelName:a.Mean,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,u=a.util.parseAxisParam(i,s.shape),c=a.backend_util.computeOutAndReduceShapes(s.shape,u)[1],l=a.util.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Xc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=th({inputs:{a:p,b:h},backend:n});d.push(f);const m=bp({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xp={kernelName:a.Min,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;Ic(s,"min");const u=a.util.parseAxisParam(i,s.shape);let c=u;const l=a.backend_util.getAxesPermutation(c,s.shape.length);let d=s;null!=l&&(d=bl({inputs:{x:s},backend:n,attrs:{perm:l}}),c=a.backend_util.getInnerMostAxes(c.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",c,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,c),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let t=0;t<m.length;++t){const e=t*f;let n=b[e];for(let t=0;t<f;++t){const r=b[e+t];r<n&&(n=r)}m[t]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(o){const t=rl({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(g),t}return g}},vp=Dc((t,e)=>Math.min(t,e)),Op=Jc(a.Minimum,vp),wp={kernelName:a.Minimum,backendName:"cpu",kernelFunc:Op};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kp={kernelName:a.MirrorPad,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,mode:o}=r;Ic(s,"mirrorPad");const u=i.map((t,e)=>t[0]+s.shape[e]+t[1]),c=i.map(t=>t[0]),l=i.map((t,e)=>t[0]+s.shape[e]),d="reflect"===o?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,f=a.util.computeStrides(s.shape),m=a.util.sizeFromShape(u),b=u.length,g=a.util.computeStrides(u),y=a.util.getTypedArrayFromDType(s.dtype,m);for(let t=0;t<m;t++){let e=a.util.indexToLoc(t,b,g);for(let t=0;t<b;t++)e[t]<c[t]?e[t]=2*c[t]-e[t]-d:e[t]>=l[t]&&(e[t]=2*(l[t]-1)-e[t]+d);e=e.map((t,e)=>t-c[e]);const n=a.util.locToIndex(e,p,f);y[t]=h[n]}return{dataId:n.write(y,u,s.dtype),shape:u,dtype:s.dtype}}},Ip=Dc((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),Np=Jc(a.Mod,Ip),jp={kernelName:a.Mod,backendName:"cpu",kernelFunc:Np};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sp(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,o=s.shape.length;let u=i;if(-1===u&&(u=o-1),u!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${u}`);const c=a.util.parseAxisParam([u],s.shape),l=ip({inputs:{x:s},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=a.backend_util.expandShapeToKeepDim(l.shape,c),h=rl({inputs:{x:l},backend:n,attrs:{shape:d}}),p=ah({inputs:{a:s,b:h},backend:n}),f=Wd({inputs:{x:p},backend:n}),m=bp({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=rl({inputs:{x:m},backend:n,attrs:{shape:d}}),g=th({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Cp={kernelName:a.Softmax,backendName:"cpu",kernelFunc:Sp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tp={kernelName:a.Multinomial,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:i,seed:o,normalized:u}=r;Ic(s,"multinomial");const c=u?s:Sp({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=c.shape[0],d=c.shape[1],h=n.data.get(c.dataId).values,p=[l,i],f=a.util.makeZerosTypedArray(a.util.sizeFromShape(p),"int32");for(let t=0;t<l;++t){const e=t*d,n=new Float32Array(d-1);n[0]=h[e];for(let t=1;t<n.length;++t)n[t]=n[t-1]+h[e+t];const r=gc.alea(o.toString()),a=t*i;for(let t=0;t<i;++t){const e=r();f[a+t]=n.length;for(let r=0;r<n.length;r++)if(e<n[r]){f[a+t]=r;break}}}return u||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",f)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ep(t,e,n){const r=a.util.createScalarValue(-1,n);return Xd([],e,r,t,n)}const Ap={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;Ic(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=Ep(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},$p=a.kernel_impls.nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rp={kernelName:a.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Ic(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=$p(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},_p=a.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dp={kernelName:a.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;Ic(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=_p(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},Fp=a.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mp={kernelName:a.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;Ic(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=Fp(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},Lp=Dc((t,e)=>t!==e?1:0),zp=Jc(a.NotEqual,Lp,null,"bool"),Pp={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:zp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bp={kernelName:a.OneHot,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:o,offValue:u}=r;Ic(s,"oneHot");const c=a.util.sizeFromShape(s.shape),l=new Float32Array(c*i);l.fill(u);const d=n.data.get(s.dataId).values;for(let t=0;t<c;++t)d[t]>=0&&d[t]<i&&(l[t*i+d[t]]=o);return n.makeTensorInfo([...s.shape,i],"int32",l)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wp(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=qc({inputs:{input:r},backend:n}),e=Wp({inputs:{x:t},backend:n}),a=nd({inputs:{input:r},backend:n}),s=Wp({inputs:{x:a},backend:n}),i=Uc({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return ch({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Vp={kernelName:a.ZerosLike,backendName:"cpu",kernelFunc:Wp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Up={kernelName:a.OnesLike,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const e=qc({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),s=nd({inputs:{input:a},backend:r}),i=Wp({inputs:{x:s},backend:r}),o=Uc({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return ch({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gp(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return Ud({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(t=>{a.util.assertShapesMatch(i,t.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(o===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=ad({inputs:e.map(t=>{const e=Ud({inputs:{input:t},backend:n,attrs:{dim:s}});return u.push(e),e}),backend:n,attrs:{axis:s}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}const Hp={kernelName:a.Pack,backendName:"cpu",kernelFunc:Gp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qp={kernelName:a.PadV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r;Ic(s,"pad");const u=i.map((t,e)=>t[0]+s.shape[e]+t[1]),c=i.map(t=>t[0]),l=n.data.get(s.dataId).values,d=a.util.sizeFromShape(s.shape),h=s.shape.length,p=a.util.computeStrides(s.shape),f=a.util.sizeFromShape(u),m=u.length,b=a.util.computeStrides(u),g=a.util.getTypedArrayFromDType(s.dtype,f);0!==o&&g.fill(o);for(let t=0;t<d;t++){const e=a.util.indexToLoc(t,h,p).map((t,e)=>t+c[e]);g[a.util.locToIndex(e,m,b)]=l[t]}return{dataId:n.write(g,u,s.dtype),shape:u,dtype:s.dtype}}},Kp=Dc((t,e)=>Math.pow(t,e)),Xp=Jc(a.Pow,Kp),Yp={kernelName:a.Pow,backendName:"cpu",kernelFunc:Xp};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jp(t,e,n,r){const[s,i]=a.backend_util.computeOutAndReduceShapes(t,r),o=Object(a.upcastType)(e,"int32"),u=a.util.makeZerosTypedArray(a.util.sizeFromShape(s),o),c=a.util.sizeFromShape(i);for(let t=0;t<u.length;++t){const e=t*c;let r=1;for(let t=0;t<c;++t)r*=n[e+t];u[t]=r}return{outVals:u,outShape:s,outDtype:o}}const Zp={kernelName:a.Prod,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;Ic(s,"prod");const u=s.shape.length,c=a.util.parseAxisParam(i,s.shape),l=a.backend_util.getAxesPermutation(c,u);let d=c,h=s;const p=[];null!=l&&(h=bl({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),d=a.backend_util.getInnerMostAxes(d.length,u));const f=n.data.get(h.dataId).values,{outVals:m,outShape:b,outDtype:g}=Jp(h.shape,h.dtype,f,d);let y=b;return o&&(y=a.backend_util.expandShapeToKeepDim(b,c)),p.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,g,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qp(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return a.util.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((e-t)/n)),i=a.util.makeZerosTypedArray(s,r);e<t&&1===n&&(n=-1),i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+n;return i}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tf={kernelName:a.Range,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,dtype:s,step:i}=n,o=Qp(r,a,i,s);return e.makeTensorInfo([o.length],s,o)}},ef=Sc(a.Reciprocal,t=>1/t),nf={kernelName:a.Reciprocal,backendName:"cpu",kernelFunc:ef};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rf={kernelName:a.ResizeBilinear,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:u}=r;Ic(s,"resizeBilinear");const c=a.util.computeStrides(s.shape),[l,d]=u,[h,p,f,m]=s.shape,b=n.data.get(s.dataId).values,g=new Float32Array(a.util.sizeFromShape([h,l,d,m])),y=[i&&l>1?p-1:p,i&&d>1?f-1:f],x=[i&&l>1?l-1:l,i&&d>1?d-1:d];let v=0;const O=y[0]/x[0],w=y[1]/x[1];for(let t=0;t<h;t++)for(let e=0;e<l;e++){let n;n=o?O*(e+.5)-.5:O*e;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),i=t*c[0]+r*c[1],u=t*c[0]+s*c[1];for(let t=0;t<d;t++){let e;e=o?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,s=Math.min(f-1,Math.ceil(e)),l=i+n*c[2],d=u+n*c[2],h=i+s*c[2],p=u+s*c[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[d+t],s=e+(b[h+t]-e)*r,i=s+(n+(b[p+t]-n)*r-s)*a;g[v++]=i}}}return n.makeTensorInfo([h,l,d,m],"float32",g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const af={kernelName:a.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r;Ic([i,s],"resizeBilinearGrad");const u=a.util.computeStrides(s.shape),[c,l,d,h]=s.shape,[,p,f]=i.shape,m=new Float32Array(c*l*d*h),b=[o&&p>1?l-1:l,o&&f>1?d-1:d],g=[o&&p>1?p-1:p,o&&f>1?f-1:f],y=b[0]/g[0],x=b[1]/g[1],v=n.data.get(i.dataId).values;let O=0;for(let t=0;t<c;t++){const e=t*u[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=e+r*u[1],i=e+a*u[1],o=n-r,c=1-o;for(let t=0;t<f;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),d-1),a=e-n,l=1-a,p=s+n*u[2],f=s+r*u[2],b=i+n*u[2],g=i+r*u[2],y=c*l,w=c*a,k=o*l,I=o*a;for(let t=0;t<h;t++){const e=v[O++];m[p+t]+=e*y,m[f+t]+=e*w,m[b+t]+=e*k,m[g+t]+=e*I}}}}return n.makeTensorInfo([c,d,l,h],"float32",m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sf={kernelName:a.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:u}=r;Ic(s,"resizeNearestNeighbor");const c=a.util.computeStrides(s.shape),[l,d]=u,[h,p,f,m]=s.shape,b=n.data.get(s.dataId).values,g=new Float32Array(h*l*d*m),y=[i&&l>1?p-1:p,i&&d>1?f-1:f],x=[i&&l>1?l-1:l,i&&d>1?d-1:d],v=y[0]/x[0],O=y[1]/x[1];let w=0;for(let t=0;t<h;t++){const e=t*c[0];for(let t=0;t<l;t++){const n=o?v*(t+.5):v*t;let r=Math.min(p-1,i?Math.round(n):Math.floor(n));o&&(r=Math.max(0,r));const a=e+r*c[1];for(let t=0;t<d;t++){const e=o?O*(t+.5):O*t;let n=Math.min(f-1,i?Math.round(e):Math.floor(e));o&&(n=Math.max(0,n));const r=a+n*c[2];for(let t=0;t<m;t++){const e=b[r+t];g[w++]=e}}}}return n.makeTensorInfo([h,l,d,m],s.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const of={kernelName:a.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:i}=e,{alignCorners:o}=r;Ic([i,s],"resizeNearestNeighborGrad");const u=a.util.computeStrides(s.shape),c=a.util.computeStrides(i.shape),[l,d,h,p]=s.shape,[,f,m]=i.shape,b=new Float32Array(l*d*h*p),g=n.data.get(i.dataId).values,y=[o&&f>1?d-1:d,o&&m>1?h-1:h],x=[o&&f>1?f-1:f,o&&m>1?m-1:m],v=y[0]/x[0],O=y[1]/x[1],w=1/v,k=1/O,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let t=0;t<l;t++){const e=t*u[0];for(let t=0;t<d;t++){const n=e+t*u[1],r=Math.floor(t*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*u[2],i=Math.floor(r*k),l=Math.floor(i-N/2);for(let n=0;n<p;n++){let i=0;for(let s=0;s<I;s++){const u=s+a;if(u<0||u>=f)continue;const p=e+u*c[1],b=u*v;if(t===Math.min(d-1,o?Math.round(b):Math.floor(b)))for(let t=0;t<N;t++){const e=t+l;if(e<0||e>=m)continue;const a=p+e*c[2],s=e*O;r===Math.min(h-1,o?Math.round(s):Math.floor(s))&&(i+=g[a+n])}}b[s+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uf={kernelName:a.Reverse,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r;Ic(s,"reverse");const o=s.shape.length,u=a.util.parseAxisParam(i,s.shape);if(0===o)return Ac({inputs:{x:s},backend:n});const c=new a.TensorBuffer(s.shape,s.dtype),l=n.bufferSync(s);for(let t=0;t<c.size;t++){const e=c.indexToLoc(t),n=e.slice();u.forEach(t=>n[t]=s.shape[t]-1-n[t]),c.set(l.get(...n),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},cf={kernelName:a.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:o}=e,u=n,c=a.util.getTypedArrayFromDType(r.dtype,a.util.sizeFromShape(r.shape)),[l,d,h,p]=r.shape,[f,m]=a.backend_util.getImageCenter(o,d,h),b=Math.sin(s),g=Math.cos(s),y=u.data.get(r.dataId).values;for(let t=0;t<l;t++){const e=t*h*d*p;for(let t=0;t<d;t++){const n=t*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let s=0;s<p;s++){const o=[l,t,r,s],u=o[2],x=o[1];let v=(u-f)*g-(x-m)*b,O=(u-f)*b+(x-m)*g;v=Math.round(v+f),O=Math.round(O+m);let w=i;if("number"!=typeof i&&(w=3===s?255:i[s]),v>=0&&v<h&&O>=0&&O<d){w=y[e+O*(h*p)+v*p+s]}c[e+n+a+s]=w}}}}return{dataId:u.write(c,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},lf=Sc(a.Round,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1}),df={kernelName:a.Round,backendName:"cpu",kernelFunc:lf},hf=Kl(t=>1/Math.sqrt(t)),pf=Cc(a.Rsqrt,hf),ff={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:pf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mf(t,e,n,r,s,i,o,u,c,l){const d=[r/s,s],h=t.values,p=e.values;if(0===r)return Object(a.buffer)(n,e.dtype);const f=Object(a.buffer)(d,e.dtype);f.values.fill(c);for(let t=0;t<i;t++){const a=[];let i=0;for(let e=0;e<o;e++){const n=h[t*o+e];a.push(n),i+=n*u[e]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?f.values[i*s+n]+=p[t*s+n]:f.values[i*s+n]=0===e.rank?p[0]:p[t*s+n]}return f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bf={kernelName:a.ScatterNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=a.backend_util.calculateShapes(i,s,o),p=mf(n.bufferSync(s),n.bufferSync(i),o,h,l,c,u,d,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gf={kernelName:a.Select,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e;Ic([r,s,i],"select");const o=r.shape.length,u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,d=Object(a.upcastType)(s.dtype,i.dtype),h=a.util.makeZerosTypedArray(a.util.sizeFromShape(s.shape),d);let p=0;const f=0===o||o>1||1===s.shape.length?1:a.util.sizeFromShape(s.shape.slice(1));for(let t=0;t<u.length;t++)for(let e=0;e<f;e++)1===u[t]?h[p++]=c[t]:h[p++]=l[t];return n.makeTensorInfo(s.shape,d,h)}},yf=a.backend_util.SELU_SCALEALPHA,xf=a.backend_util.SELU_SCALE,vf=Sc(a.Selu,t=>t>=0?xf*t:yf*(Math.exp(t)-1)),Of={kernelName:a.Selu,backendName:"cpu",kernelFunc:vf},wf=Sc(a.Sigmoid,t=>1/(1+Math.exp(-t))),kf={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:wf},If=Sc(a.Sign,t=>t<0?-1:t>0?1:0),Nf={kernelName:a.Sign,backendName:"cpu",kernelFunc:If},jf=Sc(a.Sin,t=>Math.sin(t)),Sf={kernelName:a.Sin,backendName:"cpu",kernelFunc:jf},Cf=Sc(a.Sinh,t=>Math.sinh(t)),Tf={kernelName:a.Sinh,backendName:"cpu",kernelFunc:Cf},Ef=Math.log(1.1920928955078125e-7)+2,Af=Sc(a.Softplus,t=>{const e=t>-Ef,n=t<Ef,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a}),$f={kernelName:a.Softplus,backendName:"cpu",kernelFunc:Af};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rf={kernelName:a.SpaceToBatchND,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;Ic([s],"spaceToBatchND");const u=a.util.sizeFromShape(i),c=[[0,0]];c.push(...o);for(let t=1+i.length;t<s.shape.length;++t)c.push([0,0]);const l=qp.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),d=a.backend_util.getReshaped(l.shape,i,u,!1),h=a.backend_util.getPermuted(d.length,i.length,!1),p=a.backend_util.getReshapedPermuted(l.shape,i,u,!1),f=rl({inputs:{x:l},backend:n,attrs:{shape:d}}),m=bl({inputs:{x:f},backend:n,attrs:{perm:h}}),b=rl({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _f={kernelName:a.SparseToDense,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:u}=r,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=a.backend_util.calculateShapes(i,s,u),f=mf(n.bufferSync(s),n.bufferSync(i),u,p,d,l,c,h,n.data.get(o.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Df={kernelName:a.SplitV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,u=a.util.parseAxisParam(o,s.shape)[0],c=a.backend_util.prepareSplitSize(s,i,u),l=new Array(s.shape.length).fill(0),d=s.shape.slice();return c.map(t=>{const e=[...d];e[u]=t;const r=Wl({inputs:{x:s},backend:n,attrs:{begin:l,size:e}});return l[u]+=t,r})}},Ff=Sc(a.Sqrt,t=>Math.sqrt(t)),Mf={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:Ff},Lf={kernelName:a.Square,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Ic(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let t=0;t<a.length;++t){const e=a[t];s[t]=e*e}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},zf=Dc((t,e)=>{const n=t-e;return n*n}),Pf=Jc(a.SquaredDifference,zf),Bf={kernelName:a.SquaredDifference,backendName:"cpu",kernelFunc:Pf},Wf=Sc(a.Step,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),Vf={kernelName:a.Step,backendName:"cpu",kernelFunc:Wf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uf(t,e,n,r){const s=Object(a.buffer)(t,e.dtype);for(let t=0;t<s.size;t++){const a=s.indexToLoc(t),i=new Array(a.length);for(let t=0;t<i.length;t++)i[t]=a[t]*n[t]+r[t];s.set(e.get(...i),...a)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gf={kernelName:a.StridedSlice,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;Ic(s,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=a.slice_util.sliceInfo(s.shape,i,o,u,c,l,d,h,p),v=rl({inputs:{x:s},backend:n,attrs:{shape:y}});let O;if(f){const t=Wl({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});O=rl({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some(t=>0===t))O=n.makeTensorInfo(x,s.dtype,[]);else{const t=Uf(x,n.bufferSync(v),b,m);O=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=rl({inputs:{x:O},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(O),w}},Hf=Sc(a.Tan,t=>Math.tan(t)),qf={kernelName:a.Tan,backendName:"cpu",kernelFunc:Hf},Kf=Sc(a.Tanh,t=>Math.tanh(t)),Xf={kernelName:a.Tanh,backendName:"cpu",kernelFunc:Kf};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yf(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Object(a.buffer)(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),a=new Array(t.rank);for(let e=0;e<a.length;e++)a[e]=n[e]%t.shape[e];const s=t.locToIndex(a);r.values[e]=t.values[s]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf={kernelName:a.Tile,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:s}=r;Ic(a,"tile");const i=Yf(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(t,e,n,r,s){const i=e[e.length-1],[o,u]=[t.length/i,i],c=a.util.getTypedArrayFromDType(n,o*r),l=a.util.getTypedArrayFromDType("int32",o*r);for(let e=0;e<o;e++){const n=e*u,a=t.subarray(n,n+u),s=[];for(let t=0;t<a.length;t++)s.push({value:a[t],index:t});s.sort((t,e)=>e.value-t.value);const i=e*r,o=c.subarray(i,i+r),d=l.subarray(i,i+r);for(let t=0;t<r;t++)o[t]=s[t].value,d[t]=s[t].index}const d=e.slice();return d[d.length-1]=r,[Object(a.buffer)(d,n,c),Object(a.buffer)(d,"int32",l)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qf={kernelName:a.TopK,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:s,sorted:i}=r;Ic(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=Zf(o,a.shape,a.dtype,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tm={kernelName:a.Transform,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:i}=e,{interpolation:o,fillMode:u,fillValue:c,outputShape:l}=n,[d,h,p,f]=s.shape,[m,b]=null!=l?l:[h,p],g=[d,m,b,f],y=a.util.computeStrides(s.shape),x=y[0],v=y[1],O=y[2],w=a.util.getTypedArrayFromDType(s.dtype,a.util.sizeFromShape(g));w.fill(c);const k=r.data.get(s.dataId).values,I=r.data.get(i.dataId).values;for(let t=0;t<d;++t){const e=1===i.shape[0]?I:I.subarray(8*t,8*t+8);for(let n=0;n<m;++n)for(let r=0;r<b;++r)for(let a=0;a<f;++a){let s;const i=e[6]*r+e[7]*n+1;if(0===i)continue;const l=(e[0]*r+e[1]*n+e[2])/i,d=(e[3]*r+e[4]*n+e[5])/i,f=em(l,p,u),m=em(d,h,u);switch(o){case"nearest":s=rm(k,h,p,x,v,O,t,m,f,a,c);break;case"bilinear":s=am(k,h,p,x,v,O,t,m,f,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+o)}w[t*x+n*v+r*O+a]=s}return r.makeTensorInfo(g,s.dtype,w)}return{dataId:r.write(w,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function em(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return a.util.clamp(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return a.util.clamp(0,n,e-1)}(t,e);case"nearest":return function(t,e){return a.util.clamp(0,t,e-1)}(t,e);case"constant":default:return function(t,e){return t}(t)}}function nm(t,e,n,r,a,s,i,o,u,c,l){return 0<=o&&o<e&&0<=u&&u<n?t[i*r+o*a+u*s+c]:l}function rm(t,e,n,r,a,s,i,o,u,c,l){return nm(t,e,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function am(t,e,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*nm(t,e,n,r,a,s,i,d,h,c,l)+(u-h)*nm(t,e,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*nm(t,e,n,r,a,s,i,p,h,c,l)+(u-h)*nm(t,e,n,r,a,s,i,p,f,c,l))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(t,e,n,r){const s=a.util.parseAxisParam(e,n)[0],i=[1,n[0],1];for(let t=0;t<s;t++)i[0]*=n[t];i[1]=n[s];for(let t=s+1;t<n.length;t++)i[2]*=n[t];const o={},u=new Int32Array(n[s]),c=new a.TensorBuffer(i,r,t),l=[],d=1===i[0]&&1===i[2];for(let e=0;e<n[s];e++){let n;if(d)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)t.push(c.get(n,e,r));n=t.join(",")}if(void 0!==o[n])u[e]=o[n];else{const t=Object.keys(o).length;o[n]=t,u[e]=t,l.push(e)}}const h=i.slice();h[1]=Object.keys(o).length;const p=new a.TensorBuffer(h,r);l.forEach((t,e)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(c.get(n,t,r),n,e,r)});const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:u}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const im={kernelName:a.Unique,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Ic(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=sm(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const om={kernelName:a.Unpack,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let t=0;t<i;t++)t!==s&&(u[c++]=a.shape[t]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let t=0;t<h.length;t++){l[s]=t;const e=Wl({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[t]=rl({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const um={kernelName:a.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:o}=r;Ic(s,"unsortedSegmentSum");const u=[],c=[],l=s.shape.length-i.shape.length;let d=i;for(let t=0;t<l;++t){const e=Ud({inputs:{input:d},backend:n,attrs:{dim:t+1}});d=e,c.push(e)}for(let t=0;t<o;++t){const e=a.util.createScalarValue(t,"int32"),r=n.makeTensorInfo([],"int32",e),i=Ad({inputs:{a:r,b:d},backend:n}),o=Xc({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),l=Jd({inputs:{a:o,b:s},backend:n}),h=bp({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});u.push(h),c.push(r),c.push(i),c.push(o),c.push(l),c.push(h)}const h=Gp({inputs:u,backend:n,attrs:{axis:0}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},cm=[ol,cl,dl,pl,nl,fl,yl,xl,vl,Ol,kl,Nl,Sl,El,$l,Fl,Ml,Ll,zl,il,Pl,Ul,ql,Yc,Jl,Ql,Gc,td,sd,ud,cd,od,dd,hd,ld,fd,bd,gd,yd,xd,vd,wd,kd,Id,Nd,jd,Cd,Sd,eh,Ec,Td,$d,Pd,Vd,Gd,Kd,uh,lh,dh,fh,gh,yh,xh,vh,wh,Nh,Ch,$c,Th,rd,Ah,Rh,Dh,_c,Lh,Bh,Vh,Hh,Kh,Jh,Qh,np,rp,ap,lp,dp,hp,pp,fp,mp,op,yp,xp,wp,kp,jp,Tp,Zd,Ap,Rp,Dp,Mp,Pp,Bp,Up,Hp,qp,Yp,Lc,Zp,tf,Kc,nf,Pc,Wc,al,rf,af,sf,of,uf,cf,df,ff,bf,gf,Of,kf,Nf,Sf,Tf,Vl,Cp,$f,Rf,_f,Df,Mf,Lf,Bf,Vf,Gf,sh,gp,qf,Xf,Jf,Qf,gl,tm,im,om,um,Vp];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const t of cm)Object(a.registerKernel)(t);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lm={},dm={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function hm(t){if(!(t in lm)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete lm[t]},!1),1===t)return e.getContext("webgl",dm)||e.getContext("experimental-webgl",dm);return e.getContext("webgl2",dm)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;lm[t]=e}const e=lm[t];return e.isContextLost()?(delete lm[t],hm(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),lm[t])}var pm,fm,mm;function bm(t,e){return[e,t]}function gm(t){const e=a.util.sizeFromShape(t),n=Math.ceil(e/4);return a.util.sizeToSquarishShape(n)}function ym(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function xm(t,e){const n=t;let r,s,i,o,u,c,l,d,h,p;return 2===Object(a.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,l=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,s=t.RGBA,i=t.RGBA,o=n.RGBA,u=t.RGBA,l=4,d=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),c=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vm(t,e){const n=e();return Object(a.env)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(pm||(pm={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(fm||(fm={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(mm||(mm={}));function Om(t){return!!(Object(a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function wm(t,e){return Am(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function km(t,e){const n=Am(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(vm(t,()=>t.shaderSource(n,e)),vm(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Im.exec(e);if(null==n)return console.log("Couldn't parse line number in error: "+e),void console.log(t);const r=+n[1],s=t.split("\n"),i=s.length.toString().length+2,o=s.map((t,e)=>a.util.rightPad((e+1).toString(),i)+t);let u=0;for(let t=0;t<o.length;t++)u=Math.max(o[t].length,u);const c=o.slice(0,r-1),l=o.slice(r-1,r),d=o.slice(r);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log("%c "+a.util.rightPad(l[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Im=/ERROR: [0-9]+:([0-9]+):/g;function Nm(t,e){if(vm(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function jm(t,e,n,r,a,s,i){const o=t.getAttribLocation(e,n);return-1!==o&&(vm(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),vm(t,()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,s,i)),vm(t,()=>t.enableVertexAttribArray(o)),!0)}function Sm(t,e,n,r){vm(t,()=>function(t,e,n){$m(t,n),vm(t,()=>t.activeTexture(t.TEXTURE0+n)),vm(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),vm(t,()=>t.uniform1i(n,r))}function Cm(t,e,n){vm(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),vm(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Tm(t,e){vm(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),vm(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function Em(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}(t,e))}function Am(t,e,n){const r=vm(t,()=>e());if(null==r)throw new Error(n);return r}function $m(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Rm(t,e=2){return a.util.sizeFromShape(t.slice(0,t.length-e))}function _m(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Dm(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Rm(t),..._m(t)]),e}function Fm(t){return t%2==0}function Mm(t,e){if(t=t.slice(-2),e=e.slice(-2),a.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Fm(n)&&Fm(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Fm(t[0])&&Fm(e[0])}let Lm,zm;function Pm(t,e){return null!=t.getExtension(e)}function Bm(t){try{if(null!=hm(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Wm(t){if(0===t)return!1;const e=hm(t);if(1!==t){if(Pm(e,"EXT_color_buffer_float"))return Vm(e);const t="EXT_color_buffer_half_float";if(Pm(e,t)){const n=e.getExtension(t);return function(t,e){const n=xm(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const s=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),s}(e,n)}return!1}if(!Pm(e,"OES_texture_float"))return!1;if(!Pm(e,"WEBGL_color_buffer_float"))return!1;return Vm(e)}function Vm(t){const e=xm(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function Um(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a.util.assert("complex64"!==t.dtype,()=>e+" does not support complex64 tensors in the WebGL backend.")})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gm=Object(a.env)();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hm(){let t,e,n,r,s,i,o,u,c,l;return 2===Object(a.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(t,e,n="index"){const r=a.util.computeStrides(e);return r.map((e,a)=>`${`int ${t[a]} = ${n} / ${e}`}; ${a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${e}`:`index -= ${t[a]} * ${e}`};`).join("")}function Km(t){const e=a.util.computeStrides(t).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}Gm.registerFlag("HAS_WEBGL",()=>Gm.getNumber("WEBGL_VERSION")>0),Gm.registerFlag("WEBGL_VERSION",()=>Bm(2)?2:Bm(1)?1:0),Gm.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Gm.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Gm.get("WEBGL_VERSION")),Gm.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Gm.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Gm.registerFlag("WEBGL_PACK",()=>Gm.getBool("HAS_WEBGL")),Gm.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_PACK_CLIP",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Gm.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_PACK_REDUCE",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_LAZILY_UNPACK",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_CONV_IM2COL",()=>Gm.getBool("WEBGL_PACK")),Gm.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==Lm){const e=hm(t);Lm=e.getParameter(e.MAX_TEXTURE_SIZE)}return Lm}(Gm.getNumber("WEBGL_VERSION"))),Gm.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==zm){const e=hm(t);zm=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zm)}(Gm.getNumber("WEBGL_VERSION"))),Gm.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=Gm.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=hm(t);return e=Pm(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Pm(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),Gm.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Gm.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.device_util.isMobile()),Gm.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=hm(t);if(1===t){if(!Pm(e,"OES_texture_float"))return!1}else if(!Pm(e,"EXT_color_buffer_float"))return!1;return Vm(e)}(Gm.getNumber("WEBGL_VERSION"))),Gm.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Gm.getBool("WEBGL_FORCE_F16_TEXTURES")&&Gm.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Gm.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Wm(Gm.getNumber("WEBGL_VERSION"))),Gm.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=Gm.getNumber("WEBGL_VERSION"))&&null!=hm(t).fenceSync;var t}),Gm.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Gm.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Gm.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}),Gm.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>a.device_util.isMobile()&&Gm.getBool("IS_CHROME")?1:-1,t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});const Xm="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ym{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=pm.DENSE;const e=gm(t),n=Hm();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${qm(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jm{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=pm.DENSE;const e=gm(t),n=Hm();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${qm(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zm{constructor(t){this.variableNames=["A"],this.outTexUsage=fm.DOWNLOAD;const e=Hm();this.outputShape=t,this.userCode=`\n      ${Xm}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qm{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=fm.DOWNLOAD;const e=Hm();this.outputShape=t,this.userCode=`\n      ${Xm}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tb{constructor(t,e,n=!1){this.variableNames=["A"];const r=Hm(),[a,s]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Km(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eb{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Hm(),[a,s]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Km(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nb(t){const e=Hm();return function(t,e){const n=Am(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(vm(t,()=>t.shaderSource(n,e)),vm(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function rb(t){return function(t,e){const n=Am(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return vm(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),vm(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ab(t){return function(t,e){const n=Am(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return vm(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),vm(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function sb(t,e,n,r,s,i){!function(t,e){const n=Object(a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){throw new Error("Requested texture size "+`[${t}x${e}]`+" is invalid.")}if(t>n||e>n){throw new Error("Requested texture size "+`[${t}x${e}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}(e,n);const o=function(t){return Am(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),u=t.TEXTURE_2D;return vm(t,()=>t.bindTexture(u,o)),vm(t,()=>t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),vm(t,()=>t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),vm(t,()=>t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST)),vm(t,()=>t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST)),vm(t,()=>t.texImage2D(u,0,r,e,n,0,s,i,null)),vm(t,()=>t.bindTexture(t.TEXTURE_2D,null)),o}function ib(t){return t.internalFormatFloat}function ob(t){return t.internalFormatHalfFloat}function ub(t){return t.downloadTextureFormat}function cb(t){return t.internalFormatPackedFloat}function lb(t){return t.internalFormatPackedHalfFloat}function db(t,e,n,r,a,s,i,o){const u=t,c=new Float32Array(function(t,e){const[n,r]=ym(t,e);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hb{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(a.env)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){lm[t]=e}(e,t)):this.gl=hm(e);let n="WEBGL_color_buffer_float";if(1===Object(a.env)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=wm(this.gl,t),Pm(this.gl,e))this.textureHalfFloatExtension=wm(this.gl,e);else if(Object(a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Pm(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=wm(this.gl,"EXT_color_buffer_half_float");else if(Object(a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Pm(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Pm(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=rb(this.gl),this.indexBuffer=ab(this.gl),this.framebuffer=function(t){return Am(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=xm(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(a.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;vm(t,()=>t.finish()),vm(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),vm(t,()=>t.deleteFramebuffer(this.framebuffer)),vm(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),vm(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),vm(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=bm(e,n);return sb(t,a,s,ib(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=bm(e,n);return sb(t,a,s,ob(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=bm(e,n);return sb(t,a,s,ub(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){vm(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?vm(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):vm(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),vm(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,a,s){let i,o,u;vm(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=s.internalFormatPackedFloat),i.set(a),vm(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i)),vm(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=ym(e,n);return sb(t,a,s,lb(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=ym(e,n);return sb(t,a,s,cb(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Tm(this.gl,this.framebuffer),this.outputTexture=null),vm(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[a,s]=bm(e,n),i=new Uint8Array(e*n*4);return vm(t,()=>t.readPixels(0,0,a,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,s){return db(this.gl,t,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const a=t.createBuffer();vm(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const s=16*e*n;return vm(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ)),vm(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),vm(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(a.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return vm(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=km(e,t),r=nb(e),a=function(t){return Am(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return vm(e,()=>e.attachShader(a,r)),vm(e,()=>e.attachShader(a,n)),function(t,e){if(vm(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&Nm(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return vm(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),jm(t,e,"clipSpacePos",n,3,20,0)&&jm(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&vm(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Nm(this.gl,this.program),vm(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Am(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),vm(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Sm(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=ym(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Nm(this.gl,this.program),Em(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),vm(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),vm(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=wm(this.gl,2===Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await a.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||a.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Cm(this.gl,t,this.framebuffer),this.debug&&Em(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Cm(this.gl,this.outputTexture,this.framebuffer),this.debug&&Em(this.gl)):Tm(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Cm(r,t,this.framebuffer),this.debug&&Em(r),this.outputTexture=t,vm(r,()=>r.viewport(0,0,e,n)),vm(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),vm(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:pb}=a.backend_util;function fb(t,e,n,r){const s=[];t.forEach(t=>{const e=a.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?s.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(s.push(`uniform sampler2D ${t.name};`),s.push(`uniform int offset${t.name};`))});const i=s.join("\n"),o=t.map(t=>function(t,e,n=!1){let r="";r+=n?bb(t):mb(t);const s=t.shapeInfo.logicalShape,i=e.logicalShape;s.length<=i.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,u=pb(t.shapeInfo.logicalShape,e.logicalShape),c=Ib(o),l=o-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map(t=>`coords.${h[t+l]} = 0;`).join("\n");let p="";p=o<2&&i>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+h[e+l]).join(", ");let f="return outputValue;";const m=1===a.util.sizeFromShape(t.shapeInfo.logicalShape),b=1===a.util.sizeFromShape(e.logicalShape);if(1!==i||m||b){if(m&&!b)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=i-2,e=i-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?f="return vec4(outputValue.x);":u.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,u=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&u===c&&null==t.shapeInfo.flatOffset&&a.util.arraysEqual(o,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Ib(c),d=pb(t.shapeInfo.logicalShape,e.logicalShape),h=c-u;let p;const f=["x","y","z","w","u","v"];p=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map(t=>`coords.${f[t+h]} = 0;`).join("\n");let m="";m=c<2&&u>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords."+f[e+h]).join(", ");return`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r)).join("\n"),u=e.texShape,c=Hm(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let d,h,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${gb}\n    ${yb}\n    ${xb}\n  `}(c);e.isPacked?(d=function(t,e){switch(t.length){case 0:return Ob();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(a.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let s=a,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)s*=t[t.length-e-1],i=`\n      int b${e} = index / ${s};\n      index -= b${e} * ${s};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,u),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(c)):(d=function(t,e){switch(t.length){case 0:return Ob();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(a.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=qm(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=qm(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=qm(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=qm(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(t.length+"-D output sampling is not yet supported")}}(e.logicalShape,u),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),r&&(p+=vb);return[p,l,h,i,d,o,n].join("\n")}function mb(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[s,i]=t.shapeInfo.texShape,o=wb(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${kb(t)}\n      }\n    `;const r=t.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=wb(e);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape;if(null!=s&&a.util.arraysEqual(e,s)){const t=s[0],e=s[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${e}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=a.util.squeezeShape(e),u=i;if(u.length<e.length){const e=Nb(t,u),n=["row","col"];return`\n      ${mb(e)}\n      float ${r}(int row, int col) {\n        return ${r}(${jb(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${kb(t)}\n      }\n    `;const c=s[0],l=s[1],d=wb(n);if(1===l)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:o,keptDims:u}=a.util.squeezeShape(e),c=o;if(c.length<e.length){const e=Nb(t,c),n=["row","col","depth"];return`\n        ${mb(e)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${jb(n,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${kb(t)}\n      }\n    `;const l=t.shapeInfo.texShape,d=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===s&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===i&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=wb(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,o=e[1]*i,{newShape:u,keptDims:c}=a.util.squeezeShape(e);if(u.length<e.length){const e=Nb(t,u),n=["row","col","depth","depth2"];return`\n      ${mb(e)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${jb(n,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${kb(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=wb(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],i=e[3]*s,o=e[2]*i,u=e[1]*o,{newShape:c,keptDims:l}=a.util.squeezeShape(e);if(c.length<e.length){const e=Nb(t,c),n=["row","col","depth","depth2","depth3"];return`\n      ${mb(e)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${jb(n,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${s})) +\n          depth3;\n        ${kb(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=wb(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=a.util.squeezeShape(e);if(s.length<e.length){const e=Nb(t,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${mb(e)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${jb(n,i)});\n      }\n    `}const o=e[5],u=e[4]*o,c=e[3]*u,l=e[2]*c,d=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${kb(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=wb(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function bb(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Hm();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=Hm();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,i=s[0],o=s[1],u=Hm();if(null!=s&&a.util.arraysEqual(e,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=e.slice(1),a=[1,2],s=Nb(t,n),i=["b","row","col"];return`\n        ${bb(s)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${jb(i,a)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(e[2]/2),c=u*Math.ceil(e[1]/2),l=Hm();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let t=2;t<n-1;t++)d=`int b${t}, `+d,l*=e[n-t-1],h=`b${t} * ${l} + `+h;const p=Hm();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(t)}}const gb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yb="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",xb="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vb="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ob(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function wb(t){return"offset"+t}function kb(t){const e=t.name,n=a.util.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Ib(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Nb(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function jb(t,e){return e.map(e=>t[e]).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sb(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((t,n)=>{const r=t.logicalShape,s=e[n],i=s.shape;if(!a.util.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&s.isUniform)return;const o=t.texShape,u=s.isUniform?null:s.texData.texShape;if(!a.util.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const{addImpl:Cb,bincountImpl:Tb,bincountReduceImpl:Eb,ceilImpl:Ab,concatImpl:$b,expImpl:Rb,expm1Impl:_b,floorImpl:Db,gatherV2Impl:Fb,greaterImpl:Mb,lessImpl:Lb,linSpaceImpl:zb,logImpl:Pb,maxImpl:Bb,maximumImpl:Wb,minimumImpl:Vb,multiplyImpl:Ub,negImpl:Gb,prodImpl:Hb,rangeImpl:qb,rsqrtImpl:Kb,simpleAbsImpl:Xb,sliceImpl:Yb,stridedSliceImpl:Jb,subImpl:Zb,tileImpl:Qb,topKImpl:tg,transposeImpl:eg,uniqueImpl:ng}=r;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rg(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>`${t}.${e}`)}function ag(t,e){return 1===e?[t]:rg(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sg{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=ag("rc",e),r=Ib(e),a=function(t,e,n){if(1===t)return"rc > "+e[0];let r="";for(let a=t-2;a<t;a++)r+=`${n[a]} >= ${e[a]}`,a<t-1&&(r+="||");return r}(e,t,n),s=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<t;n++)s=e[e.length-1-n]+","+s;n.push(s)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class ig{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${qm(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Km(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class og{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=cg(e,n),a=lg(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=ug(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let i;return r===mm.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===mm.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===mm.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===mm.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===mm.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=cg(n,r),i=lg(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=ug(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=Object(a.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[i],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ug(t,e,n,r,a){const s=function(t,e){switch(t){case mm.PACKED_2X2_FLOAT32:return cb(e);case mm.PACKED_2X2_FLOAT16:return lb(e);case mm.UNPACKED_FLOAT32:return ib(e);case mm.UNPACKED_FLOAT16:return ob(e);case mm.PACKED_4X1_UNSIGNED_BYTE:return ub(e);default:throw new Error("Unknown physical texture type "+t)}}(e,r);let i;if(a){const[e,n]=ym(t[0],t[1]);i=e*n}else{const[e,n]=bm(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format "+e)}(n,s)}function cg(t,e){if(t===fm.UPLOAD)return mm.PACKED_2X2_FLOAT32;if(t===fm.RENDER||null==t)return function(t){return Object(a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?mm.PACKED_2X2_FLOAT32:mm.UNPACKED_FLOAT32:t?mm.PACKED_2X2_FLOAT16:mm.UNPACKED_FLOAT16}(e);if(t===fm.DOWNLOAD||t===fm.PIXELS)return mm.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+t)}function lg(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dg{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const hg="return abs(x);";const pg="return x;";class fg{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mg{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=ag("rc",e),r=Ib(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),i=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bg=a.kernel_impls.whereImpl,gg={};class yg extends a.KernelBackend{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(a.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=hm(Object(a.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(a.env)().getNumber("WEBGL_VERSION"))in gg||(gg[e]={}),gg[e]),this.gpgpu=new hb(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new og(this.gpgpu),this.numMBBeforeWarning=null==Object(a.env)().global.screen?1024:Object(a.env)().global.screen.height*Object(a.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.DataStorage(this,Object(a.engine)())}nextDataId(){return yg.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(a.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(a.env)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:fm.UPLOAD,refCount:1}),r}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r,s){if(Object(a.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:fm.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:u}=e;if(null!=i){let e;e=u?new fg(o,pg):new dg(o,pg);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=a.util.now()),"complex64"===r){const t=this.readSync(s.real.dataId),e=this.readSync(s.imag.dataId);d=a.backend_util.mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=a.util.now()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:u}=e;if(null!=s){let e;e=u?new fg(r,pg):new dg(r,pg);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:i}],i),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(a.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,d=null;if("complex64"!==i&&Object(a.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,...gm(r))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),e=t[0],n=t[1];l=a.backend_util.mergeRealAndImagArrays(e,n)}else if(null==d)l=this.getValuesFromTexture(t);else{const t=a.util.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=c&&this.disposeIntermediateTensorInfo(c);const h=this.convertAndCacheOnCPU(t,l),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Object(a.engine)().removeDataId(t,this),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a.util.decodeString(t))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.buffer)(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Om(n)){if(Object(a.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=a.util.sizeFromShape(e);if(Object(a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...gm(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const i=Object(a.env)().getBool("WEBGL_PACK")&&!0===r,o=i?Dm(e):e,u=i?new Qm(o):new Zm(o),c=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=a.util.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),i=a.util.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);o.kernelMs=a.util.sum(t),o.getExtraProfileInfo=()=>t.map((t,e)=>({name:i[e],ms:t})).map(t=>`${t.name}: ${t.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.util.now(),endMs:null}}endTimer(t){return Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=a.util.now(),t)}async getQueryTime(t){if(Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,s)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(a.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(a.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return Object(a.env)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&a.util.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){a.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return bg(t.shape,e)}packedUnaryOp(t,e,n){const r=new fg(t.shape,e),s=this.compileAndRun(r,[t],n);return Object(a.engine)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=Xb(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,hg,t.dtype);const e=new dg(t.shape,hg),n=this.compileAndRun(e,[t]);return Object(a.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&a.util.isString(n[0])){const s=n.map(t=>a.util.encodeString(t));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(a.engine)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new mg(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new sg(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Rm(t.shape),..._m(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[Rm(e),..._m(e)],s=new ig(a,n),i=this.runWebGLProgram(s,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,s=Dm(r);let i;i=n?new Jm(s):new Ym(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const i=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(i.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===pm.DENSE){const e=gm(t.outputShape);o.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===a.util.sizeFromShape(i.shape))return o.values=a.util.getTypedArrayFromDType(i.dtype,0),i;const u=[],c=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&a.util.sizeFromShape(e.shape)<=Object(a.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),u.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!Mm(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),u.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(i.dataId);const l={shape:i.shape,texData:o,isUniform:!1},d=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`});const a=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+a,s}(t,c,l),h=this.getAndSaveBinary(d,()=>function(t,e,n,r){const s=e.userCode,i=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),o=i.map(t=>t.shapeInfo),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},c=fb(i,u,s,e.packedInputs),l=t.createProgram(c);let d=null;const h=t.getUniformLocation(l,"NAN",!1);1===Object(a.env)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],a=!1;p[r]=t.getUniformLocation(l,r,a),p["offset"+r]=t.getUniformLocation(l,"offset"+r,a)}return{program:e,source:c,webGLProgram:l,uniformLocations:p,inShapeInfos:o,outShapeInfo:u,infLoc:d,nanLoc:h}}(this.gpgpu,t,c,l)),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),function(t,e,n,r,s){Sb(e.inShapeInfos,n),Sb([e.outShapeInfo],[r]);const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(i,o[0],o[1]):t.setOutputMatrixTexture(i,o[0],o[1]),t.setProgram(e.webGLProgram),1===Object(a.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const s=e.program.variableNames[r],i=e.uniformLocations[s],o=e.uniformLocations["offset"+s];if(null!=i)if(n.isUniform)if(a.util.sizeFromShape(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,r)}),null!=s&&s(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,c,l,r),u.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)}));const m=Object(a.env)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=a.util.now();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!Object(a.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,r,a=!1){n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,r,a)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(a.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(a.tidy)(()=>{if(!Object(a.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(a.env)().getBool("DEBUG");Object(a.env)().set("DEBUG",!1);const e=this.abs(Object(a.scalar)(1e-8)).dataSync()[0];if(Object(a.env)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:u}=e;if(null!=i)return;const c=null!=this.activeTimers;let l;c&&(l=a.util.now());let d=e.texShape;if(null==d&&(d=function(t,e=!1){let n=Object(a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?a.util.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=a.util.squeezeShape(t);t=e.newShape}let r=a.util.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Rm(t);let n=2,s=2;return t.length&&([n,s]=_m(t)),r=e*(n/2)*(s/2),a.util.sizeToSquarishShape(r).map(t=>2*t)}return a.util.sizeToSquarishShape(r)}(n,u),e.texShape=d),null!=s){const t=Dm(n);let i,o=d[1],h=d[0];const p=s instanceof Uint8Array;u?([o,h]=ym(d[0],d[1]),i=new eb(t,[h,o],p)):i=new tb(t,[h,o],p);const f=this.makeTensorInfo([h,o],r);this.texData.get(f.dataId).usage=p?fm.PIXELS:fm.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,s);const m=!0,b=this.runWebGLProgram(i,[f],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,c&&(this.uploadWaitMs+=a.util.now()-l)}else{const t=this.acquireTexture(d,o,r,u);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype "+e)}
/** @license See the LICENSE file. */(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*a.util.bytesPerElement(e)}}yg.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
a.device_util.isBrowser()&&Object(a.registerBackend)("webgl",()=>new yg,2);class xg{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vg{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.backend_util.assertAndGetBroadcastShape(e,n);const s=this.outputShape.length;let i="";if(r)if(0===s||1===a.util.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${Ib(s)} coords = getOutputCoords();\n        `,1===s)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=ag("coords",s);i+=`\n            bool nextRowOutOfBounds =\n              (${t[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${t[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Og(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const wg={kernelName:a.Identity,backendName:"webgl",kernelFunc:Og};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kg(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Og({inputs:{x:r},backend:n}),u=Og({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const Ig={kernelName:a.Complex,backendName:"webgl",kernelFunc:kg},Ng="return (a < 0.) ? b * a : a;",jg="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sg={kernelName:a.LeakyRelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:i}=r,o=n.makeTensorInfo([],"float32",a.util.createScalarValue(i,"float32")),u=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vg(jg,s.shape,o.shape):new xg(Ng,s.shape,o.shape),c=n.runWebGLProgram(u,[s,o],s.dtype);return n.disposeIntermediateTensorInfo(o),c}},Cg="return (a < 0.) ? b * a : a;",Tg="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eg={kernelName:a.Prelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,i=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vg(Tg,r.shape,s.shape):new xg(Cg,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ag({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:o}=s,u=i,c=r||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const t=u.texData.get(o.dataId),e=n(t.values,c);return u.makeTensorInfo(o.shape,c,e)}let l;return l=Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new fg(o.shape,e):new dg(o.shape,t),u.runWebGLProgram(l,[o],c)}}function $g({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:u})=>{const{a:c,b:l}=o,d=u;if(r&&"complex64"===c.dtype){const e=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[r,s]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{const[n,r]=e,s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new xg(t,c.shape,l.shape);return d.runWebGLProgram(o,[s,i],Object(a.upcastType)(n.dtype,r.dtype))}),i=kg({inputs:{real:r,imag:s},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(s),i}const h=i||Object(a.upcastType)(c.dtype,l.dtype);if(d.shouldExecuteOnCPU([c,l])&&null!=s){const t=d.texData.get(c.dataId),e=d.texData.get(l.dataId),[n,r]=s(c.shape,l.shape,t.values,e.values,h),a=d.makeTensorInfo(r,h);return d.texData.get(a.dataId).values=n,a}let p;return p=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new vg(e,c.shape,l.shape,n):new xg(t,c.shape,l.shape),d.runWebGLProgram(p,[c,l],h)}}function Rg(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?Tg:Cg;if("leakyrelu"===t)return e?jg:Ng;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _g{constructor(t,e,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?t[1]:t[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dg="return areal * breal - aimag * bimag;",Fg="return areal * bimag + aimag * breal;";class Mg{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lg="return a * b;";function zg(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,i=a.backend_util.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),a=new Mg(Dg,r.shape,s.shape),i=new Mg(Fg,r.shape,s.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=kg({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,s])){const t=n.texData.get(r.dataId),e=n.texData.get(s.dataId),[a,o]=Ub(r.shape,s.shape,t.values,e.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=a,u}let o;return o=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vg(Lg,r.shape,s.shape):new xg(Lg,r.shape,s.shape),n.runWebGLProgram(o,[r,s],i)}const Pg={kernelName:a.Multiply,backendName:"webgl",kernelFunc:zg};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bg(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:i}=r,o=n,u=a.util.sizeFromShape(s.shape),c=a.util.inferFromImplicitShape(i,u),l=a.util.sizeFromShape(c);a.util.assert(u===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=o.texData.get(s.dataId);return!d.isPacked||Mm(s.shape,c)||null!==d.texture&&Mm(d.shape,c)?(o.incRef(s.dataId),{dataId:s.dataId,shape:c,dtype:s.dtype}):function(t,e,n){const r=[Rm(t.shape),..._m(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[Rm(e),..._m(e)],i=new ig(s,r),o=n.runWebGLProgram(i,[a],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(s,c,o)}const Wg={kernelName:a.Reshape,backendName:"webgl",kernelFunc:Bg};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vg{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=t;this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c=`sumValue += dot(values * ${a.util.isInt(t)?t.toPrecision(2):t}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ug{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gg(t,e,n,r){const s=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=a.backend_util.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let i=t;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:u,outSize:c}=s[a];let l,d;l="mean"===n?0===a?new Vg({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},o):new Vg({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c}):new Ug({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},n),d=i,i=r.runWebGLProgram(l,[i],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hg{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=Ib(this.rank),a=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class qg{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ib(this.rank),a=rg("rc",this.rank),s=new Array(this.rank);for(let t=0;t<e.length;t++)s[e[t]]=a[t];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kg(t,e,n){const r=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qg(t.shape,e):new Hg(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xg(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r;return function(t,e,n,r){const s=e,i=t.shape.length,o=a.util.parseAxisParam(s,t.shape);let u=o;const c=a.backend_util.getAxesPermutation(u,i),l=null!=c;let d=t;l&&(d=Kg(t,c,r),u=a.backend_util.getInnerMostAxes(u.length,i)),a.backend_util.assertAxesAreInnerMostDims("sum",u,i);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u);let f=h;n&&(f=a.backend_util.expandShapeToKeepDim(h,o));const m=a.util.sizeFromShape(p),b=Bg({inputs:{x:d},attrs:{shape:[a.util.sizeFromShape(t.shape)/m,m]},backend:r}),g=Gg(b,Object(a.sumOutType)(t.dtype),"sum",r),y=Bg({inputs:{x:g},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(d),y}(s,i,o,n)}const Yg={kernelName:a.Sum,backendName:"webgl",kernelFunc:Xg};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jg(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let t=0;t<u.length;t++)u[t]=a.shape[s[t]];let c;if(i.shouldExecuteOnCPU([a])){const t=i.texData.get(a.dataId).values,e=eg(t,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);i.texData.get(c.dataId).values=e}else c=Kg(a,s,i);return c}const Zg={kernelName:a.Transpose,backendName:"webgl",kernelFunc:Jg};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qg({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:c=null}){const l=t.shape.length,d=e.shape.length,h=n?t.shape[l-2]:t.shape[l-1],p=r?e.shape[d-1]:e.shape[d-2],f=n?t.shape[l-1]:t.shape[l-2],m=r?e.shape[d-2]:e.shape[d-1],b=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=a.util.sizeFromShape(b),x=a.util.sizeFromShape(g),v=y===x||1===y||1===x;a.util.assert(l>=2&&d>=2&&v,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const O=(y>x?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([f,m]);a.util.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,h,f]:[y,f,h],k=r?[x,m,p]:[x,p,m],I=Bg({inputs:{x:t},backend:s,attrs:{shape:w}}),N=Bg({inputs:{x:e},backend:s,attrs:{shape:k}}),j=[I,N],S=Math.max(y,x),C=n?I.shape[1]:I.shape[2],T=null!=i,E=null!=o,A="leakyrelu"===c,$=null!=c?Rg(c,!0):null;let R;if((1===f||1===m)&&C>1e3&&!1===(T||E||A||null!=$)){let t=I,e=N;n&&(t=Jg({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),j.push(t)),r&&(e=Jg({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),j.push(e));const a=1===m;let i=t;1!==m&&(i=Bg({inputs:{x:t},backend:s,attrs:{shape:[S,C,1]}}),j.push(i));const o=1===m?2:1;let u=e;a&&(u=Bg({inputs:{x:e},backend:s,attrs:{shape:[S,1,C]}}),j.push(u));const c=zg({inputs:{a:i,b:u},backend:s});R=Xg({inputs:{x:c},backend:s,attrs:{axis:o,keepDims:!0}}),j.push(c)}else{const c=Object(a.upcastType)(t.dtype,e.dtype),l=new _g(w,k,[S,f,m],n,r,T,$,E,A),d=[I,N];if(null!=i&&d.push(i),E&&d.push(o),A){const t=s.makeTensorInfo([],"float32",a.util.createScalarValue(u,"float32"));d.push(t),j.push(t)}R=s.runWebGLProgram(l,d,c)}const _=Bg({inputs:{x:R},backend:s,attrs:{shape:O}});j.push(R);for(const t of j)s.disposeIntermediateTensorInfo(t);return _}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ty={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return Qg({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ey={kernelName:a.Abs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=Xb(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let s;return s=Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fg(r.shape,"return abs(x);"):new dg(r.shape,"return abs(x);"),n.runWebGLProgram(s,[r],r.dtype)}},ny=Ag({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ry={kernelName:a.Acos,backendName:"webgl",kernelFunc:ny},ay=Ag({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sy={kernelName:a.Acosh,backendName:"webgl",kernelFunc:ay},iy="return a + b;",oy=$g({opSnippet:iy,packedOpSnippet:iy,supportsComplex:!0,cpuKernelImpl:Cb}),uy={kernelName:a.Add,backendName:"webgl",kernelFunc:oy};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cy{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`float v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ly{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T"+e);const n=[];this.variableNames.forEach(t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)});const r=this.variableNames.map(t=>"v"+t).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dy={kernelName:a.AddN,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,s=n;if(1===s.length)return Og({inputs:{x:s[0]},backend:r});if(s.length>Object(a.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),n=t({inputs:s.slice(0,e),backend:r}),a=t({inputs:s.slice(e),backend:r});return t({inputs:[n,a],backend:r})}const i=s.map(t=>t.dtype).reduce((t,e)=>Object(a.upcastType)(t,e)),o=s.map(t=>t.shape),u=Object(a.env)().getBool("WEBGL_PACK")?new ly(s[0].shape,o):new cy(s[0].shape,o);return r.runWebGLProgram(u,s,i)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hy={kernelName:a.All,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,u=s.shape.length,c=a.util.parseAxisParam(i,s.shape);let l=c;const d=a.backend_util.getAxesPermutation(l,u);let h=s;null!=d&&(h=Jg({inputs:{x:s},backend:n,attrs:{perm:d}}),l=a.backend_util.getInnerMostAxes(l.length,u)),a.backend_util.assertAxesAreInnerMostDims("all",l,u);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,l),m=Bg({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),b=Gg(m,m.dtype,"all",n);let g;if(o){g=Bg({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,c)}})}else g=Bg({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const py={kernelName:a.Any,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,u=s.shape.length,c=a.util.parseAxisParam(i,s.shape);let l=c;const d=a.backend_util.getAxesPermutation(l,u);let h=s;null!=d&&(h=Jg({inputs:{x:s},backend:n,attrs:{perm:d}}),l=a.backend_util.getInnerMostAxes(l.length,u)),a.backend_util.assertAxesAreInnerMostDims("any",l,u);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,l),m=Bg({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),b=Gg(m,m.dtype,"any",n);let g;if(o){g=Bg({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,c)}})}else g=Bg({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fy{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class my{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.util.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,c=Ib(u),l=ag("coords",u);let d,h;if(1===i){h=u+1;const t=Ib(h);d=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[u-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[u-2]};`}else h=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(t=>"int "+t),b=ag("sourceLocR",h-1).concat("inIdx.r"),g=ag("sourceLocG",h-1).concat("inIdx.g"),y=ag("sourceLocB",h-1).concat("inIdx.b"),x=ag("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",O=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${o[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${O}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function by(t,e,n,r){const s=[n];if(a.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!Object(a.env)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[i,o]=a.backend_util.computeOutAndReduceShapes(e.shape,s),u=a.util.sizeFromShape(o),c=Bg({inputs:{x:e},backend:t,attrs:{shape:[-1,u]}});n.push(c);const l=function t(e,n,r,s=null){let i=n.shape[0],o=n.shape[1];null!=s&&(i=s.shape[0],o=s.shape[1]);const u=a.backend_util.computeOptimalWindowSize(o),c={windowSize:u,inSize:o,batchSize:i,outSize:Math.ceil(o/u)},l=new fy(c,r,null==s),d=[n];null!=s&&d.push(s);const h=e.runWebGLProgram(l,d,"int32");if(1===h.shape[1])return h;const p=t(e,n,r,h);return e.disposeIntermediateTensorInfo(h),p}(t,c,r);n.push(l);const d=Bg({inputs:{x:l},backend:t,attrs:{shape:i}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return function t(e,n,r,s=null){const i=null!=s?s.shape:n.shape,o=i[i.length-1],u=a.backend_util.computeOptimalWindowSize(o),c=new my(i,u,r,null==s),l=null==s?[n]:[n,s],d=e.runWebGLProgram(c,l,"int32");if(d.shape.length===n.shape.length){const a=t(e,n,r,d);return e.disposeIntermediateTensorInfo(d),a}return d}(t,e,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gy={kernelName:a.ArgMax,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let o=a.util.parseAxisParam(i,s.shape);const u=a.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=Jg({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=a.backend_util.getInnerMostAxes(o.length,c.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);const d=by(n,c,o[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yy={kernelName:a.ArgMin,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i}=r;let o=a.util.parseAxisParam(i,s.shape);const u=a.backend_util.getAxesPermutation(o,s.shape.length);let c=s;const l=[];null!=u&&(c=Jg({inputs:{x:s},backend:n,attrs:{perm:u}}),l.push(c),o=a.backend_util.getInnerMostAxes(o.length,c.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);const d=by(n,c,o[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},xy=Ag({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),vy={kernelName:a.Asin,backendName:"webgl",kernelFunc:xy},Oy=Ag({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),wy={kernelName:a.Asinh,backendName:"webgl",kernelFunc:Oy},ky=Ag({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Iy={kernelName:a.Atan,backendName:"webgl",kernelFunc:ky},Ny=$g({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),jy={kernelName:a.Atan2,backendName:"webgl",kernelFunc:Ny},Sy=Ag({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Cy={kernelName:a.Atanh,backendName:"webgl",kernelFunc:Sy};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ty{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const x=4*Math.floor(s/4),v=s%4,O=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${O}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${O}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${O}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${O}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Ey{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const O=4*Math.floor(s/4),w=s%4,k=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${O}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${O};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ay={kernelName:a.AvgPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Um(s,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=a.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))return Og({inputs:{x:s},backend:n});const d=new Ty(l,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $y={kernelName:a.AvgPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:u,dimRoundingMode:c,dataFormat:l}=r,d=a.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],u,c,l),h=new Ey(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ry{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.top,l=u-1-t.padInfo.left,d=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _y{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=h-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dy={kernelName:a.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=a.backend_util.computePool3DInfo(o.shape,u,c,[1,1,1],l,d),p=new _y(h);return n.runWebGLProgram(p,[s],o.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fy={kernelName:a.AvgPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i;Um([s,i],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=r,d=a.backend_util.computePool2DInfo(o.shape,u,c,1,l),h=new Ry(d);return n.runWebGLProgram(h,[s],o.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const My={kernelName:a.BatchMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:o}=r;return Qg({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ly{constructor(t,e,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(t,e),a.backend_util.assertAndGetBroadcastShape(t,n);let o="0.0";null!=r&&(a.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=s&&(a.backend_util.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zy{constructor(t,e,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(t,e),a.backend_util.assertAndGetBroadcastShape(t,n);let o="vec4(0.0)";null!=r&&(a.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(a.backend_util.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Py={kernelName:a.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:i,offset:o,scale:u}=t;a.util.assert(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.util.assert(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.util.assert(null==u||s.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[r,s,i];let d=null;null!=o&&(d=o.shape,l.push(o));let h=null;null!=u&&(h=u.shape,l.push(u));const p=Object(a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new zy(r.shape,s.shape,i.shape,d,h,c):new Ly(r.shape,s.shape,i.shape,d,h,c);return e.runWebGLProgram(p,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class By{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ib(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return Wy.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let a;a=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((t,e)=>`sourceLoc.${Wy[e]} = start[${e}] + coords.${Wy[e]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const Wy=["x","y","z","w","u","v"];class Vy{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Ib(this.rank),n=ag("coords",this.rank),r=ag("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((t,e)=>`start[${e}]`).join()});`:t.map((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uy(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,size:o}=r,[u,c]=a.slice_util.parseSliceParams(s,i,o);if(a.slice_util.assertParamsValid(s,u,c),0===a.util.sizeFromShape(c))return n.makeTensorInfo(c,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const t=n.texData.get(s.dataId),e=Yb(t.values,u,c,s.shape,s.dtype);return n.makeTensorInfo(c,s.dtype,e)}const{isPacked:l}=n.texData.get(s.dataId),d=a.slice_util.isSliceContinous(s.shape,u,c);if(l||!d){const t=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vy(c):new By(c),e=t.getCustomSetupFunc(u);return n.runWebGLProgram(t,[s],s.dtype,e)}return n.uploadToGPU(s.dataId),function(t,e,n,r){const s=r.texData.get(t.dataId),i=r.makeTensorInfo(n,t.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=n,o.dtype=t.dtype;let u=a.slice_util.computeFlatOffset(e,a.util.computeStrides(t.shape));s.slice&&(u+=s.slice.flatOffset),o.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||t.dataId};const c=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,c+1),i}(s,u,c,n)}const Gy={kernelName:a.Slice,backendName:"webgl",kernelFunc:Uy},Hy={kernelName:a.BatchToSpaceND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,crops:o}=r;a.util.assert(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const u=i.reduce((t,e)=>t*e),c=a.backend_util.getReshaped(s.shape,i,u),l=a.backend_util.getPermuted(c.length,i.length),d=a.backend_util.getReshapedPermuted(s.shape,i,u),h=a.backend_util.getSliceBeginCoords(o,i.length),p=a.backend_util.getSliceSize(d,o,i.length),f=[],m=Bg({inputs:{x:s},backend:n,attrs:{shape:c}}),b=Jg({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Bg({inputs:{x:b},backend:n,attrs:{shape:d}}),y=Uy({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qy={kernelName:a.Bincount,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=Tb(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},Ky=$g({opSnippet:"return float(a != b);",dtype:"bool"}),Xy={kernelName:a.NotEqual,backendName:"webgl",kernelFunc:Ky};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yy(t){const{inputs:e,backend:n}=t,{input:r}=e;return Og({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Jy={kernelName:a.Real,backendName:"webgl",kernelFunc:Yy};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zy={kernelName:a.Cast,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function t(e){const{inputs:n,backend:r,attrs:s}=e,{x:i}=n,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return Og({inputs:{x:i},backend:r});const e=a.zeros(i.shape),n=t({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=kg({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const e=Yy({inputs:{input:i},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(e),n}if(!a.util.hasEncodingLoss(i.dtype,o)){const t=Og({inputs:{x:i},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o)return function(t,e){const n=new dg(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===o){const t=r.makeTensorInfo([],"bool",a.util.getTypedArrayFromDType("bool",1)),e=Ky({inputs:{a:i,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},Qy="return ceil(x);",tx=Ag({opSnippet:Qy,packedOpSnippet:Qy,cpuKernelImpl:Ab}),ex={kernelName:a.Ceil,backendName:"webgl",kernelFunc:tx};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nx{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rx{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ax={kernelName:a.ClipByValue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:i,clipValueMax:o}=r;let u;u=Object(a.env)().getBool("WEBGL_PACK_CLIP")?new rx(s.shape):new nx(s.shape);const c=u.getCustomSetupFunc(i,o);return n.runWebGLProgram(u,[s],s.dtype,c)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sx{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ix(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const ox={kernelName:a.ComplexAbs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,a=n.texData.get(r.dataId),s=new sx(r.shape),i=[ix(r,a.complexTensorInfos.real),ix(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ux{constructor(t){this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T"+e);const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const r=e.length,s=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cx{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(t,e);const n=this.outputShape,r=n.length,s=Ib(r),i=ag("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T"+e);const u=new Array(t.length-1);u[0]=t[0][e];for(let n=1;n<u.length;n++)u[n]=u[n-1]+t[n][e];const c=o[e],l=o.slice(-2),d=o.join();let h=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let t=1;t<u.length;t++){const e=u[t-1];h+=`\n        if (${c} < ${u[t]}  && ${c} >= ${u[t-1]}) {\n          return getChannel(\n            getT${t}(${lx(o,c,e)}),\n            vec2(${lx(l,c,e)}));\n        }`}const p=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${p}(${lx(o,c,f)}),\n          vec2(${lx(l,c,f)}));`,this.userCode=`\n      float getValue(${o.map(t=>"int "+t)}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function lx(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?`${t} - ${n}`:t).join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dx(t){const{inputs:e,backend:n}=t,{input:r}=e;return Og({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const hx={kernelName:a.Imag,backendName:"webgl",kernelFunc:dx};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function px(t,e,n){const r=a.backend_util.computeOutShape(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>Bg({inputs:{x:t},attrs:{shape:[-1,a.util.sizeFromShape(t.shape.slice(e))]},backend:n})),outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fx(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,i=a.util.parseAxisParam(s,e[0].shape)[0],o=a.backend_util.computeOutShape(e.map(t=>t.shape),i);if(0===a.util.sizeFromShape(o))return n.makeTensorInfo(o,e[0].dtype,[]);const u=e.filter(t=>a.util.sizeFromShape(t.shape)>0);if(1===u.length)return Og({inputs:{x:u[0]},backend:n});const c=u.map(t=>t.shape);return a.backend_util.assertParamsConsistent(c,i),function t(e,n,r){const s=e[0].dtype;if("complex64"===s){const a=e.map(t=>Yy({inputs:{input:t},backend:r})),s=e.map(t=>dx({inputs:{input:t},backend:r})),i=t(a,n,r),o=t(s,n,r),u=kg({inputs:{real:i,imag:o},backend:r});return a.forEach(t=>r.disposeIntermediateTensorInfo(t)),s.forEach(t=>r.disposeIntermediateTensorInfo(t)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}if("string"===s){const{tensors2D:t,outShape:i}=px(e,n,r),o=t.map(t=>({vals:r.readSync(t.dataId),shape:t.shape})),u=1===t[0].shape[0],c=$b(o,i,s,u),l=a.backend_util.computeOutShape(e.map(t=>t.shape),n),d=r.makeTensorInfo(l,s,c);return t.forEach(t=>r.disposeIntermediateTensorInfo(t)),d}if(e.length>Object(a.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),s=t(e.slice(0,a),n,r),i=t(e.slice(a),n,r),o=t([s,i],n,r);return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}if(Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new cx(e.map(t=>t.shape),n);return r.runWebGLProgram(t,e,s)}const{tensors2D:i,outShape:o}=px(e,n,r),u=new ux(i.map(t=>t.shape)),c=r.runWebGLProgram(u,i,s);i.forEach(t=>r.disposeIntermediateTensorInfo(t));const l=Bg({inputs:{x:c},attrs:{shape:o},backend:r});return r.disposeIntermediateTensorInfo(c),l}(u,i,n)}const mx={kernelName:a.Concat,backendName:"webgl",kernelFunc:fx};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bx{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,o=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const O=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${O}\n        ${v}\n        setOutput(result);\n      }\n    `}}class gx{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yx{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=Hm(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xx({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=t.shape,l=r.texData.get(t.dataId),d=n.inChannels,h=c[0]*c[1]*c[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[],g=(1===h||1===p)&&d>1e3,y=c[2]%2!=0&&!!l.isPacked;if(!g&&Object(a.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const d=f?c[0]*c[1]*(c[2]+1):c[0]*c[2]*(c[3]+1),h={dataId:t.dataId,shape:[1,d,n.inChannels],dtype:t.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,a.util.assert(Mm(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn't free`);const g=Bg({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(g);const y=Qg({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),x=r.texData.get(y.dataId);a.util.assert(x.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=p,x.shape=n.outShape,m=Og({inputs:{x:y},backend:r}),m.shape=n.outShape,b.push(y)}else{const a=Bg({inputs:{x:t},backend:r,attrs:{shape:[1,f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],n.inChannels]}}),l=Bg({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Qg({a:a,b:l,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=Bg({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),b.push(a),b.push(l),b.push(d)}for(const t of b)r.disposeIntermediateTensorInfo(t);return m}function vx({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,b=c*l*d,g=p*h,y=[b,g],x=[],v=Bg({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),O=Bg({inputs:{x:e},backend:r,attrs:{shape:[1,b,a.util.sizeFromShape(e.shape)/b]}});x.push(v),x.push(O);const w=new yx(y,v.shape,n),k=r.runWebGLProgram(w,[v],"float32"),I=Bg({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(k),x.push(I);const N=null!=s,j=null!=i,S="leakyrelu"===u,C=u?Rg(u,!0):null,T=new _g(I.shape,O.shape,[1,g,n.outChannels],!0,!1,N,C,j,S),E=[I,O];if(s&&E.push(s),j&&E.push(i),S){const t=r.makeTensorInfo([],"float32",a.util.createScalarValue(o,"float32"));E.push(t),x.push(t)}const A=r.runWebGLProgram(T,E,"float32"),$=Bg({inputs:{x:A},backend:r,attrs:{shape:m?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});x.push(A);for(const t of x)r.disposeIntermediateTensorInfo(t);return $}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ox={kernelName:a.Conv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=r,h=a.backend_util.convertConv2DDataFormat(c),p=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,l,u,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(a.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=vx({x:s,filter:i,convInfo:p,backend:n});else{const t=new bx(p);f=n.runWebGLProgram(t,[s,i],"float32")}else f=xx({x:s,filter:i,convInfo:p,backend:n});const m=Bg({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wx{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kx{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ix{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,s=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${a};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nx{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jx={kernelName:a.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=r,h=a.backend_util.convertConv2DDataFormat(c),p=a.backend_util.computeConv2DInfo(s.shape,d,o,1,u,l,!1,h),f=new wx(p);return n.runWebGLProgram(f,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sx={kernelName:a.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{inputShape:o,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=r,h=a.backend_util.convertConv2DDataFormat(l),p=a.backend_util.computeConv2DInfo(o,i.shape,u,1,c,d,!1,h),f=new kx(p);return n.runWebGLProgram(f,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cx={kernelName:a.Conv3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dilations:c}=r,l=a.backend_util.computeConv3DInfo(s.shape,i.shape,o,c,u),d=new gx(l);return n.runWebGLProgram(d,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tx={kernelName:a.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,pad:u,filterShape:c}=r,l=a.backend_util.computeConv3DInfo(s.shape,c,o,1,u),d=new Ix(l);return n.runWebGLProgram(d,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ex={kernelName:a.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{pad:o,strides:u,inputShape:c}=r,l=a.backend_util.computeConv3DInfo(c,i.shape,u,1,o),d=new Nx(l);return n.runWebGLProgram(d,[s,i],"float32")}},Ax=Ag({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),$x={kernelName:a.Cos,backendName:"webgl",kernelFunc:Ax},Rx=Ag({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),_x={kernelName:a.Cosh,backendName:"webgl",kernelFunc:Rx};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Dx{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=t,[c]=e,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[y,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fx={kernelName:a.CropAndResize,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:s,boxInd:i}=e,{cropSize:o,method:u,extrapolationValue:c}=r,l=new Dx(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};class Mx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":`getX(${Lx(r,"coords")})`,s=t[t.length-1];let i="",o="";e?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+s:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Ib(r)} coords = getOutputCoords();\n        int end = ${zx(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${zx(r,"coords")} = idx;\n          val += getX(${Lx(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function Lx(t,e){if(1===t)return""+e;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function zx(t,e){if(1===t)return""+e;if(2===t)return e+".y";if(3===t)return e+".z";if(4===t)return e+".w";throw Error(`Cumulative sum for rank ${t} is not yet supported`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Px={kernelName:a.Cumsum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,exclusive:o,reverse:u}=r,c=s.shape.length,l=a.backend_util.getAxesPermutation([i],c);let d=s;null!=l&&(d=Jg({inputs:{x:s},backend:n,attrs:{perm:l}}));const h=a.backend_util.getInnerMostAxes(1,c)[0];if(h!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=`+i);const p=d.shape[h];let f=Og({inputs:{x:d},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){const e=new Mx(d.shape,!1,u),r=e.getCustomSetupFunc(t),a=f;f=n.runWebGLProgram(e,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const t=new Mx(d.shape,o,u),e=f;f=n.runWebGLProgram(t,[f],f.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=Jg({inputs:{x:f},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),t}return f}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx={kernelName:a.DenseBincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const t=n.readSync(a.dataId),e=n.readSync(s.dataId),r=Tb(t,e,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const t=n.bufferSync(a),e=n.bufferSync(s),r=Eb(t,e,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wx{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vx={kernelName:a.DepthToSpace,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:i,dataFormat:o}=r;a.util.assert(i>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+i);const u=s.shape[0],c="NHWC"===o?s.shape[1]:s.shape[2],l="NHWC"===o?s.shape[2]:s.shape[3],d="NHWC"===o?s.shape[3]:s.shape[1],h=c*i,p=l*i,f=d/(i*i),m=new Wx("NHWC"===o?[u,h,p,f]:[u,f,h,p],i,o);return n.runWebGLProgram(m,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ux{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,o=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gx{constructor(t,e=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const i=t.inHeight,o=t.inWidth,u=t.padInfo.top,c=t.padInfo.left,l=t.strideHeight,d=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,b=m;let g="int xR; int xC; int xCOffset;";for(let t=0;t<f;t++)for(let e=0;e<m;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<f;t++)for(let e=0;e<b;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===d){if(n<m&&(g+=c%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${o}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<m)){const e=c%2==0?a.util.nearestLargerEven(p):p;p%2==0&&c%2==1||p%2!=0&&c%2!=1?(g+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${i} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${i} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<m&&(g+=`\n              if(xR >= 0 && xR < ${i}) {\n            `,c%2==1?(g+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<m&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<m&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<m&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<m&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<f;t++)for(let e=0;e<m;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hx={kernelName:a.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dilations:c,dimRoundingMode:l}=r;let d=c;null==d&&(d=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const h=a.backend_util.computeConv2DInfo(s.shape,i.shape,o,d,u,l,!0);let p;return p=Object(a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Gx(h):new Ux(h),n.runWebGLProgram(p,[s,i],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qx{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Kx{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xx={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:i}=e,{strides:o,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=r,h=a.backend_util.computeConv2DInfo(s.shape,d,o,u,c,l,!0),p=new qx(h);return n.runWebGLProgram(p,[s,i],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yx={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:i}=e,{strides:o,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=r,h=a.backend_util.computeConv2DInfo(d,i.shape,o,u,c,l,!0),p=new Kx(h);return n.runWebGLProgram(p,[s,i],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jx{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zx={kernelName:a.Diag,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],i=a.util.sizeFromShape(r.shape),o=Bg({inputs:{x:r},backend:n,attrs:{shape:[i]}}),u=new Jx(i),c=n.runWebGLProgram(u,[o],o.dtype),l=Bg({inputs:{x:c},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qx{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=t,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tv={kernelName:a.Dilation2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i}=e,{strides:o,pad:u,dilations:c}=r,l=a.backend_util.computeDilation2DInfo(s.shape,i.shape,o,u,"NHWC",c);let d;const h=new Qx(l);d=n.runWebGLProgram(h,[s,i],"float32");const p=Bg({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),p}},ev=Ag({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),nv={kernelName:a.Elu,backendName:"webgl",kernelFunc:ev},rv={kernelName:a.EluGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,i=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new vg("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new xg("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},av=$g({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),sv={kernelName:a.Equal,backendName:"webgl",kernelFunc:av},iv=Ag({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.backend_util.ERF_P};\n  float a1 = ${a.backend_util.ERF_A1};\n  float a2 = ${a.backend_util.ERF_A2};\n  float a3 = ${a.backend_util.ERF_A3};\n  float a4 = ${a.backend_util.ERF_A4};\n  float a5 = ${a.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ov={kernelName:a.Erf,backendName:"webgl",kernelFunc:iv},uv="return exp(x);",cv=Ag({opSnippet:uv,packedOpSnippet:uv,cpuKernelImpl:Rb}),lv={kernelName:a.Exp,backendName:"webgl",kernelFunc:cv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dv(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:i}=e,o=i.shape.length,u=i.shape.slice();let c=s;return s<0&&(a.util.assert(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),c=o+s+1),u.splice(c,0,1),Bg({inputs:{x:i},backend:r,attrs:{shape:u}})}const hv={kernelName:a.ExpandDims,backendName:"webgl",kernelFunc:dv},pv="return exp(x) - 1.0;",fv=Ag({opSnippet:pv,packedOpSnippet:pv,cpuKernelImpl:_b}),mv={kernelName:a.Expm1,backendName:"webgl",kernelFunc:fv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bv{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(t,e,n){const r=n.texData.get(t.dataId),s=a.util.sizeFromShape(t.shape),i=t.shape[t.shape.length-1],o=Bg({inputs:{x:t},backend:n,attrs:{shape:[s/i,i]}}),u=o.shape,c=new bv("real",u,e),l=new bv("imag",u,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=kg({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=Bg({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yv={kernelName:a.FFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return gv(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xv{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||a.util.inferDtype(s),"string"===i){const t=a.util.getArrayFromDType(i,a.util.sizeFromShape(r));return t.fill(s),e.makeTensorInfo(r,i,t)}{const t=new xv(r,s),n=t.getCustomSetupFunc(s);return e.runWebGLProgram(t,[],i,n)}}const Ov={kernelName:a.Fill,backendName:"webgl",kernelFunc:vv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wv{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kv={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,a=new wv(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Iv="return floor(x);",Nv=Ag({opSnippet:Iv,packedOpSnippet:Iv,cpuKernelImpl:Db}),jv={kernelName:a.Floor,backendName:"webgl",kernelFunc:Nv},Sv=$g({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Cv={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:Sv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Tv{constructor(t){this.variableNames=["A"];const e=Hm(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ev{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Hm(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Av={kernelName:a.FromPixels,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[c,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[l,c],h=[l,c,i];(u||o)&&(null==$v&&($v=document.createElement("canvas").getContext("2d")),$v.canvas.width=c,$v.canvas.height=l,$v.drawImage(s,0,0,c,l),s=$v.canvas);const p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=fm.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const f=Object(a.env)().getBool("WEBGL_PACK")?new Ev(h):new Tv(h),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let $v;const Rv={kernelName:a.FusedConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:u}=e,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,b=a.backend_util.convertConv2DDataFormat(d),g=a.backend_util.computeConv2DInfo(s.shape,i.shape,c,h,l,p,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(a.env)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=vx({x:s,filter:i,convInfo:g,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const t=null!=o,e=null!=u,r="leakyrelu"===f,c=f?Rg(f,!1):null,l=new bx(g,t,c,e,r),d=[s,i];if(o&&d.push(o),u&&d.push(u),r){const t=n.makeTensorInfo([],"float32",a.util.createScalarValue(m,"float32"));d.push(t),x.push(t)}y=n.runWebGLProgram(l,d,"float32")}else y=xx({x:s,filter:i,convInfo:g,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=Bg({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _v={kernelName:a.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:i,bias:o,preluActivationWeights:u}=e,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let b=d;null==b&&(b=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(c,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`);const g=a.backend_util.computeConv2DInfo(s.shape,i.shape,c,b,l,h,!0),y=Object(a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,x=p?Rg(p,y):null,v=[s,i],O=null!=o,w=null!=u,k="leakyrelu"===p;if(O&&v.push(o),w&&v.push(u),k){const t=n.makeTensorInfo([],"float32",a.util.createScalarValue(f,"float32"));v.push(t),m.push(t)}let I;I=y?new Gx(g,O,x,w,k):new Ux(g,O,x,w,k);const N=n.runWebGLProgram(I,v,"float32");return m.forEach(t=>n.disposeIntermediateTensorInfo(t)),N}};class Dv{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Ib(e.length),a=Ib(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fv={kernelName:a.GatherNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,i=s.shape,o=i[i.length-1],[u,c,l,d]=a.backend_util.prepareAndValidate(r,s),h=Bg({inputs:{x:s},backend:n,attrs:{shape:[c,o]}}),p=Bg({inputs:{x:r},backend:n,attrs:{shape:[a.util.sizeFromShape(r.shape)/l,l]}}),f=new Dv(o,d,[c,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),b=Bg({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mv{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Ib(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[e]);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const Lv={kernelName:a.GatherV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:i}=e,{axis:o,batchDims:u}=r,c=a.util.parseAxisParam(o,s.shape)[0],l=a.backend_util.segment_util.collectGatherOpShapeInfo(s,i,c,u),d=a.util.sizeFromShape(i.shape),h=[],p=Bg({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Bg({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),r=Fb(e,t,m);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new Mv(p.shape,m),g=n.runWebGLProgram(b,[p,f],p.dtype);h.push(g);const y=Bg({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},zv=$g({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Mb,dtype:"bool"}),Pv={kernelName:a.Greater,backendName:"webgl",kernelFunc:zv},Bv=$g({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Wv={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:Bv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vv={kernelName:a.IFFT,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n}=t,{input:r}=e;return gv(r,!0,n)}},Uv=Ag({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Gv={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:Uv},Hv=Ag({opSnippet:"return float(isinf(x));",dtype:"bool"}),qv={kernelName:a.IsInf,backendName:"webgl",kernelFunc:Hv},Kv=Ag({opSnippet:"return float(isnan(x));",dtype:"bool"}),Xv={kernelName:a.IsNan,backendName:"webgl",kernelFunc:Kv},Yv=$g({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Lb,dtype:"bool"}),Jv={kernelName:a.Less,backendName:"webgl",kernelFunc:Yv},Zv=$g({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Qv={kernelName:a.LessEqual,backendName:"webgl",kernelFunc:Zv};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tO={kernelName:a.LinSpace,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:s}=n,i=zb(r,a,s);return e.makeTensorInfo([i.length],"float32",i)}},eO=Ag({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Pb}),nO={kernelName:a.Log,backendName:"webgl",kernelFunc:eO},rO=Ag({opSnippet:"return log(1.0 + x);"}),aO={kernelName:a.Log1p,backendName:"webgl",kernelFunc:rO},sO=$g({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),iO={kernelName:a.LogicalAnd,backendName:"webgl",kernelFunc:sO},oO=Ag({opSnippet:"return float(!(x >= 1.0));"}),uO={kernelName:a.LogicalNot,backendName:"webgl",kernelFunc:oO},cO=$g({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),lO={kernelName:a.LogicalOr,backendName:"webgl",kernelFunc:cO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dO{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hO{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO={kernelName:a.LRN,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:i,bias:o,alpha:u,beta:c}=r,l=Object(a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new hO(s.shape,i,o,u,c):new dO(s.shape,i,o,u,c);return n.runWebGLProgram(l,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fO{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a,y:s,dy:i}=e,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new fO(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bO(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:i,keepDims:o}=r,u=s.shape.length,c=a.util.parseAxisParam(i,s.shape);let l=c;const d=a.backend_util.getAxesPermutation(l,u),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const t=n.texData.get(f.dataId).values,e=new Array(u);for(let t=0;t<e.length;t++)e[t]=s.shape[d[t]];const r=eg(t,s.shape,s.dtype,d,e);f=n.makeTensorInfo(e,s.dtype);n.texData.get(f.dataId).values=r}else f=Kg(s,d,n);l=a.backend_util.getInnerMostAxes(l.length,u)}a.backend_util.assertAxesAreInnerMostDims("max",l,u);const[m,b]=a.backend_util.computeOutAndReduceShapes(f.shape,l);let g,y=m;if(o&&(y=a.backend_util.expandShapeToKeepDim(m,c)),p){const t=n.texData.get(f.dataId).values,e=Bb(t,a.util.sizeFromShape(b),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);n.texData.get(g.dataId).values=e}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,r){const s=a.util.sizeFromShape(e),i=Bg({inputs:{x:t},attrs:{shape:[a.util.sizeFromShape(t.shape)/s,s]},backend:r}),o=Gg(i,t.dtype,"max",r),u=Bg({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}(f,b,y,n);return h&&n.disposeIntermediateTensorInfo(f),g}const gO={kernelName:a.Max,backendName:"webgl",kernelFunc:bO},yO=$g({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Wb}),xO={kernelName:a.Maximum,backendName:"webgl",kernelFunc:yO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO={kernelName:a.MaxPool,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Um(s,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=a.backend_util.computePool2DInfo(s.shape,i,o,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))return Og({inputs:{x:s},backend:n});const d=new Ty(l,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OO={kernelName:a.MaxPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=a.backend_util.computePool3DInfo(s.shape,i,o,[1,1,1],u,l,c),h=new Ey(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wO{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,s=t.effectiveFilterWidth,i=a-1-t.padInfo.top,o=s-1-t.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kO{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=o-1-t.padInfo.front,d=u-1-t.padInfo.top,h=c-1-t.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IO={kernelName:a.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i}=e,o=i,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=a.backend_util.computePool3DInfo(o.shape,u,c,[1,1,1],l,d),p=new Ey(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new kO(h),b=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NO={kernelName:a.MaxPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:i,output:o}=e,u=i;Um([i,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=r,p=a.backend_util.computePool2DInfo(u.shape,c,l,1,d,h),f=new Ty(p,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),b=new wO(p),g=n.runWebGLProgram(b,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const jO={kernelName:a.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=e,c=n;a.util.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=a.backend_util.computePool2DInfo(r.shape,s,i,l,o),[h,p]=function(t,e,n,r){let a=new Ty(n,"max",!1);const s=r.runWebGLProgram(a,[t],"float32");return a=new Ty(n,"max",!0,!0,e),[s,r.runWebGLProgram(a,[t],"float32")]}(r,u,d,c);return[h,p]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SO={kernelName:a.Mean,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:i}=e,o=n,u=r.shape.length,c=a.util.parseAxisParam(i,r.shape);let l=c;const d=a.backend_util.getAxesPermutation(l,u),h=null!=d,p=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const t=o.texData.get(m.dataId).values,e=new Array(u);for(let t=0;t<e.length;t++)e[t]=r.shape[d[t]];const n=eg(t,r.shape,r.dtype,d,e);m=o.makeTensorInfo(e,r.dtype);o.texData.get(m.dataId).values=n}else m=Kg(r,d,o);f.push(m),l=a.backend_util.getInnerMostAxes(l.length,u)}a.backend_util.assertAxesAreInnerMostDims("sum",l,u);const[b,g]=a.backend_util.computeOutAndReduceShapes(m.shape,l);let y=b;s&&(y=a.backend_util.expandShapeToKeepDim(b,c));const x=function(t,e,n,r){const s=a.util.sizeFromShape(e),i=Bg({inputs:{x:t},attrs:{shape:[a.util.sizeFromShape(t.shape)/s,s]},backend:r}),o=Gg(i,"float32","mean",r),u=Bg({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}(m,g,y,o);for(const t of f)o.disposeIntermediateTensorInfo(t);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CO={kernelName:a.Min,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,u=s.shape.length,c=a.util.parseAxisParam(i,s.shape);let l=c;const d=a.backend_util.getAxesPermutation(l,u);let h=s;null!=d&&(h=Jg({inputs:{x:s},backend:n,attrs:{perm:d}}),l=a.backend_util.getInnerMostAxes(l.length,s.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",l,u);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,l),m=Bg({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),b=Gg(m,m.dtype,"min",n);let g;if(o){g=Bg({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,c)}})}else g=Bg({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}},TO=$g({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Vb}),EO={kernelName:a.Minimum,backendName:"webgl",kernelFunc:TO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AO{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Ib(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $O{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Ib(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=ag("rc",r),u=ag("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const t=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RO={kernelName:a.MirrorPad,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:i}=n,o=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $O(r.shape,s,i):new AO(r.shape,s,i);return e.runWebGLProgram(o,[r],r.dtype)}},_O=$g({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),DO={kernelName:a.Mod,backendName:"webgl",kernelFunc:_O};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class FO{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MO=$g({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),LO={kernelName:a.RealDiv,backendName:"webgl",kernelFunc:MO},zO="return a - b;",PO=$g({opSnippet:zO,packedOpSnippet:zO,supportsComplex:!0,cpuKernelImpl:Zb}),BO={kernelName:a.Sub,backendName:"webgl",kernelFunc:PO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WO(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:i}=r,o=a.util.parseAxisParam([i],s.shape),u=bO({inputs:{x:s},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=a.backend_util.expandShapeToKeepDim(u.shape,o),l=Bg({inputs:{x:u},backend:n,attrs:{shape:c}}),d=PO({inputs:{a:s,b:l},backend:n}),h=cv({inputs:{x:d},backend:n}),p=Xg({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=Bg({inputs:{x:p},backend:n,attrs:{shape:c}}),m=MO({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const VO={kernelName:a.Softmax,backendName:"webgl",kernelFunc:WO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO={kernelName:a.Multinomial,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:s,seed:i,normalized:o}=r,u=o?a:WO({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new FO(c,l,s),h=d.getCustomSetupFunc(i),p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},GO="return -x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HO={kernelName:a.Neg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,a]=Gb(t.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,e)}let s;return s=Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fg(r.shape,GO):new dg(r.shape,GO),n.runWebGLProgram(s,[r],r.dtype)}},qO=a.kernel_impls.nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KO={kernelName:a.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(t){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c}=r,l=n.readSync(s.dataId),d=n.readSync(i.dataId),{selectedIndices:h}=qO(l,d,o,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},XO=a.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO={kernelName:a.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(t){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r,d=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:p,validOutputs:f}=XO(d,h,o,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},JO=a.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZO={kernelName:a.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(t){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r,d=n.readSync(s.dataId),h=n.readSync(i.dataId),p=o,f=u,m=c,b=l,{selectedIndices:g,selectedScores:y}=JO(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QO{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tw={kernelName:a.OneHot,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{depth:i,onValue:o,offValue:u}=r,c=a.util.sizeFromShape(s.shape),l=new QO(c,i,o,u),d=Bg({inputs:{x:s},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(l,[d],s.dtype);n.disposeIntermediateTensorInfo(d);const p=Bg({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(h),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ew(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=Yy({inputs:{input:r},backend:n}),e=ew({inputs:{x:t},backend:n}),a=dx({inputs:{input:r},backend:n}),s=ew({inputs:{x:a},backend:n}),i=kg({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return vv({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const nw={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:ew};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw={kernelName:a.OnesLike,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const e=Yy({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),s=dx({inputs:{input:a},backend:r}),i=ew({inputs:{x:s},backend:r}),o=kg({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return vv({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aw={kernelName:a.Pack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(1===e.length)return dv({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(t=>{a.util.assertShapesMatch(i,t.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(o===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=fx({inputs:e.map(t=>{const e=dv({inputs:{input:t},backend:n,attrs:{dim:s}});return u.push(e),e}),backend:n,attrs:{axis:s}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),c}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sw{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Ib(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iw{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Ib(r),s=e.map(t=>t[0]).join(","),i=e.map((e,n)=>e[0]+t[n]).join(","),o=ag("rc",r),u=ag("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===r?2:4;t<e;t++)p+=`\n        ${d[t]}\n        if (${h}) {\n          result[${t}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ow=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:i,constantValue:o}=r,u=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iw(s.shape,i,o):new sw(s.shape,i,o),c=u.getCustomSetupFunc(o);return n.runWebGLProgram(u,[s],s.dtype,c)},uw={kernelName:a.PadV2,backendName:"webgl",kernelFunc:ow},cw=$g({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),lw={kernelName:a.Pow,backendName:"webgl",kernelFunc:cw};const dw={kernelName:a.Prod,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:i,keepDims:o}=r,u=s.shape.length,c=[],l=a.util.parseAxisParam(i,s.shape);let d=l;const h=a.backend_util.getAxesPermutation(d,u);let p,f=s;if(null!=h&&(f=Jg({inputs:{x:s},backend:n,attrs:{perm:h}}),d=a.backend_util.getInnerMostAxes(d.length,u),c.push(f)),a.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:r,outDtype:a}=Hb(f.shape,f.dtype,t,d);p=n.makeTensorInfo(r,a,e)}else{const[t,e]=a.backend_util.computeOutAndReduceShapes(f.shape,d),r=a.util.sizeFromShape(e),i=Bg({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Gg(i,Object(a.sumOutType)(s.dtype),"prod",n);p=Bg({inputs:{x:o},backend:n,attrs:{shape:t}}),c.push(i),c.push(o)}if(o){c.push(p);const t=a.backend_util.expandShapeToKeepDim(p.shape,l);p=Bg({inputs:{x:p},backend:n,attrs:{shape:t}})}return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}},hw=t=>{const{backend:e,attrs:n}=t,{start:r,stop:a,step:s,dtype:i}=n,o=qb(r,a,s,i);return e.makeTensorInfo([o.length],i,o)},pw={kernelName:a.Range,backendName:"webgl",kernelFunc:hw},fw=Ag({opSnippet:"return 1.0 / x;"}),mw={kernelName:a.Reciprocal,backendName:"webgl",kernelFunc:fw},bw=Ag({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gw={kernelName:a.Relu,backendName:"webgl",kernelFunc:bw},yw=Ag({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xw={kernelName:a.Relu6,backendName:"webgl",kernelFunc:yw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vw{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ow{constructor(t,e,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ww={kernelName:a.ResizeBilinear,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:u}=r,[c,l]=u,d=Object(a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ow(s.shape,c,l,i,o):new vw(s.shape,c,l,i,o);return n.runWebGLProgram(d,[s],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kw{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,s,i]=t,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iw={kernelName:a.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r,o=new kw(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nw{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw={kernelName:a.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=new Nw(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sw{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,s,i]=t,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cw={kernelName:a.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r,o=new Sw(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tw{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=Ib(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ew{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=ag("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ib(n);function o(n){const r=t.map((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${a}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aw={kernelName:a.Reverse,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:i}=r,o=s.shape.length,u=a.util.parseAxisParam(i,s.shape);if(0===o)return Og({inputs:{x:s},backend:n});const c=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ew(s.shape,u):new Tw(s.shape,u);return n.runWebGLProgram(c,[s],s.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $w{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],r=t[2];this.outputShape=t;let a="";a="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,t,e,n,r)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rw={kernelName:a.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:i,center:o}=e,u=n,c=new $w(r.shape,i),[l,d]=a.backend_util.getImageCenter(o,r.shape[1],r.shape[2]),h=c.getCustomSetupFunc(l,d,Math.sin(s),Math.cos(s));return u.runWebGLProgram(c,[r],r.dtype,h)}},_w=Ag({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Dw={kernelName:a.Round,backendName:"webgl",kernelFunc:_w},Fw=Ag({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Kb}),Mw={kernelName:a.Rsqrt,backendName:"webgl",kernelFunc:Fw};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lw{constructor(t,e,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Ib(a.length),u=Ib(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zw={kernelName:a.ScatterNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=a.backend_util.calculateShapes(i,s,o),p=[h/l,l];if(0===h)return n.makeTensorInfo(o,s.dtype);const f=Bg({inputs:{x:s},backend:n,attrs:{shape:[c,u]}}),m=Bg({inputs:{x:i},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Lw(c,u,f.shape.length,m.shape.length,d,p),y=n.runWebGLProgram(g,[m,f,b],m.dtype),x=Bg({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pw{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<e.length;r++)i.push(""+n[r]),r<t&&s.push(""+n[r]);r=s.join(),a=i.join()}const s=Ib(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bw={kernelName:a.Select,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:i}=e,o=new Pw(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(o,[r,s,i],Object(a.upcastType)(s.dtype,i.dtype))}},Ww=Ag({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.backend_util.SELU_SCALEALPHA};\n  float scale = ${a.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Vw={kernelName:a.Selu,backendName:"webgl",kernelFunc:Ww},Uw=Ag({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Gw={kernelName:a.Sigmoid,backendName:"webgl",kernelFunc:Uw},Hw=Ag({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),qw={kernelName:a.Sign,backendName:"webgl",kernelFunc:Hw},Kw=Ag({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Xw={kernelName:a.Sin,backendName:"webgl",kernelFunc:Kw},Yw=Ag({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Jw={kernelName:a.Sinh,backendName:"webgl",kernelFunc:Yw},Zw=Ag({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Qw={kernelName:a.Softplus,backendName:"webgl",kernelFunc:Zw},tk={kernelName:a.SpaceToBatchND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:i,paddings:o}=r;a.util.assert(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const u=i.reduce((t,e)=>t*e),c=[[0,0]];c.push(...o);for(let t=1+i.length;t<s.shape.length;++t)c.push([0,0]);const l=[],d=ow({inputs:{x:s},backend:n,attrs:{paddings:c,constantValue:0}}),h=a.backend_util.getReshaped(d.shape,i,u,!1),p=a.backend_util.getPermuted(h.length,i.length,!1),f=a.backend_util.getReshapedPermuted(d.shape,i,u,!1),m=Bg({inputs:{x:d},backend:n,attrs:{shape:h}}),b=Jg({inputs:{x:m},backend:n,attrs:{perm:p}}),g=Bg({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ek={kernelName:a.SparseToDense,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:u}=r,{sliceRank:c,numUpdates:l,strides:d,outputSize:h}=a.backend_util.calculateShapes(i,s,u),p=new Lw(l,c,s.shape.length,i.shape.length,d,[h,1],!1),f=n.runWebGLProgram(p,[i,s,o],i.dtype),m=Bg({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk={kernelName:a.SplitV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,u=a.util.parseAxisParam(o,s.shape)[0],c=a.backend_util.prepareSplitSize(s,i,u),l=s.shape.length,d=new Array(l).fill(0),h=s.shape.slice();return c.map(t=>{const e=[...h];e[u]=t;const r=Uy({inputs:{x:s},backend:n,attrs:{begin:d,size:e}});return d[u]+=t,r})}},rk=Ag({opSnippet:"return sqrt(x);"}),ak={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:rk},sk=Ag({opSnippet:"return x * x;"}),ik={kernelName:a.Square,backendName:"webgl",kernelFunc:sk},ok=$g({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),uk={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:ok};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck={kernelName:a.Step,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function({inputs:t,attrs:e,backend:n}){const{x:r}=t,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,s=new dg(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lk{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Ib(n.length),s=Ib(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk={kernelName:a.StridedSlice,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:i,end:o,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=a.slice_util.sliceInfo(s.shape,i,o,u,c,l,d,h,p),v=Bg({inputs:{x:s},backend:n,attrs:{shape:y}});let O;if(f){const t=Uy({inputs:{x:v},backend:n,attrs:{begin:m,size:g}});O=Bg({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some(t=>0===t))O=n.makeTensorInfo(x,s.dtype,[]);else{if(n.shouldExecuteOnCPU([v])){const t=n.texData.get(v.dataId).values,e=Object(a.buffer)(v.shape,v.dtype,t),r=Jb(x,e,b,m);O=n.makeTensorInfo(x,v.dtype,r.values)}else{const t=new lk(m,b,x);O=n.runWebGLProgram(t,[v],v.dtype)}}const w=Bg({inputs:{x:O},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(O),w}},hk=Ag({opSnippet:"return tan(x);"}),pk={kernelName:a.Tan,backendName:"webgl",kernelFunc:hk},fk=Ag({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),mk={kernelName:a.Tanh,backendName:"webgl",kernelFunc:fk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bk{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=Ib(this.rank),a=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function gk(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:i}=r;if("string"===s.dtype){const t=n.readSync(s.dataId).map(t=>a.util.decodeString(t)),e=Object(a.buffer)(s.shape,s.dtype,t),r=Qb(e,i);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const o=new bk(s.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}const yk={kernelName:a.Tile,backendName:"webgl",kernelFunc:gk};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk={kernelName:a.TopK,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,c]=tg(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vk{constructor(t,e,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ok={kernelName:a.Transform,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:a,transforms:s}=e,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new vk(d,h,i,o,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Um(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=ng(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let t=0;t<o;t++)t!==s&&(c[l++]=i.shape[t]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let t=0;t<f.length;t++){h[s]=t;const e=Uy({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=Bg({inputs:{x:e},backend:n,attrs:{shape:c}});f[t]=r,d.push(e)}return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ik{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,s=t.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk=[pO,mO,ty,ey,ry,sy,uy,dy,hy,py,gy,yy,vy,wy,jy,Iy,Cy,$y,Ay,Dy,Fy,My,Py,Hy,qy,Zy,ex,ax,ox,Ig,mx,jx,Sx,Ox,Tx,Ex,Cx,$x,_x,Fx,Px,Bx,Vx,Xx,Yx,Hx,Zx,tv,nv,rv,sv,ov,lv,hv,mv,yv,Ov,kv,jv,Cv,Av,Rv,_v,Fv,Lv,Pv,Wv,wg,Vv,hx,Gv,qv,Xv,Sg,Jv,Qv,tO,aO,nO,iO,uO,lO,gO,OO,vO,IO,NO,jO,xO,SO,CO,EO,RO,DO,UO,Pg,HO,KO,YO,ZO,Xy,tw,rw,aw,uw,lw,Eg,dw,pw,Jy,LO,mw,xw,gw,Wg,ww,Iw,jw,Cw,Aw,Rw,Dw,Mw,zw,Bw,Vw,Gw,qw,Xw,Jw,Gy,VO,Qw,tk,ek,nk,ak,ik,uk,ck,dk,BO,Yg,pk,mk,yk,xk,Ok,Zg,wk,kk,{kernelName:a.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:i}=e,{numSegments:o}=r,u=s.shape.length,c=[];let l=0;const d=a.backend_util.getAxesPermutation([l],u);let h=s;null!=d&&(h=Jg({inputs:{x:s},backend:n,attrs:{perm:d}}),c.push(h),l=a.backend_util.getInnerMostAxes(1,u)[0]);const p=a.backend_util.segment_util.computeOutShape(h.shape,l,o),f=a.util.sizeFromShape([h.shape[l]]),m=Bg({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});c.push(m);const b=Object(a.sumOutType)(s.dtype),g=(t,e,r,s,i)=>{const o=t.shape[0],u=t.shape[1],l=a.backend_util.segment_util.segOpComputeOptimalWindowSize(u,i),d=new Ik({windowSize:l,inSize:u,batchSize:o,numSegments:i},e),h=n.compileAndRun(d,[t,r],s);if(c.push(h),h.shape[1]===i)return h;const p=hw({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=gk({inputs:{x:p},backend:n,attrs:{reps:[u/l]}});c.push(p),c.push(f);return g(h,e,f,s,i)},y=Bg({inputs:{x:g(m,"unsortedSegmentSum",i,b,o)},backend:n,attrs:{shape:p}});let x=y;if(null!=d){c.push(y);const t=a.backend_util.getUndoAxesPermutation(d);x=Jg({inputs:{x:x},backend:n,attrs:{perm:t}})}return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),x}},nw];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const t of Nk)Object(a.registerKernel)(t);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/** @license See the LICENSE file. */a.version_core,bc.version_converter;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(t,e,n){"use strict";(function(t,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function s(){if(null==a){let e;if("undefined"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==r)e=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function i(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}))}).call(this,n(264),n(257))},function(t,e,n){"use strict";function r(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return a}))},function(t,e,n){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(329),a=n(330),s=n(331);function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(t,e){if(i()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,n);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return d(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=h(t,e);return t}(t,e,n,r):"string"==typeof e?function(t,e,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(e,n),a=(t=o(t,r)).write(e,n);a!==r&&(t=t.slice(0,a));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|p(e.length);return 0===(t=o(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||(r=e.length)!=r?o(t,0):h(t,e);if("Buffer"===e.type&&s(e.data))return h(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e){if(l(e),t=o(t,e<0?0:0|p(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function h(t,e){var n=e.length<0?0:0|p(e.length);t=o(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|t}function f(t,e){if(u.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return P(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return B(t).length;default:if(r)return P(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return T(this,e,n);case"utf8":case"utf-8":return j(this,e,n);case"ascii":return S(this,e,n);case"latin1":case"binary":return C(this,e,n);case"base64":return N(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function b(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,a){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,a);if("number"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,a){var s,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function c(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(a){var l=-1;for(s=n;s<o;s++)if(c(t,s)===c(e,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*i}else-1!==l&&(s-=s-l),l=-1}else for(n+u>o&&(n=o-u),s=n;s>=0;s--){for(var d=!0,h=0;h<u;h++)if(c(t,s+h)!==c(e,h)){d=!1;break}if(d)return s}return-1}function x(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=e.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function v(t,e,n,r){return W(P(e,t.length-n),t,n,r)}function O(t,e,n,r){return W(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function w(t,e,n,r){return O(t,e,n,r)}function k(t,e,n,r){return W(B(e),t,n,r)}function I(t,e,n,r){return W(function(t,e){for(var n,r,a,s=[],i=0;i<t.length&&!((e-=2)<0);++i)n=t.charCodeAt(i),r=n>>8,a=n%256,s.push(a),s.push(r);return s}(e,t.length-n),t,n,r)}function N(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function j(t,e,n){n=Math.min(t.length,n);for(var r=[],a=e;a<n;){var s,i,o,u,c=t[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(s=t[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=t[a+1],i=t[a+2],128==(192&s)&&128==(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=t[a+1],i=t[a+2],o=t[a+3],128==(192&s)&&128==(192&i)&&128==(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=i(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?o(t,e):void 0!==n?"string"==typeof r?o(t,e).fill(n,r):o(t,e).fill(n):o(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return d(null,t)},u.allocUnsafeSlow=function(t){return d(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,s=Math.min(n,r);a<s;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!s(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var i=t[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?j(this,0,t):m.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,r,a){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(this===t)return 0;for(var s=(a>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(s,i),c=this.slice(r,a),l=t.slice(e,n),d=0;d<o;++d)if(c[d]!==l[d]){s=c[d],i=l[d];break}return s<i?-1:i<s?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return x(this,t,e,n);case"utf8":case"utf-8":return v(this,t,e,n);case"ascii":return O(this,t,e,n);case"latin1":case"binary":return w(this,t,e,n);case"base64":return k(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function S(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function C(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function T(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=e;s<n;++s)a+=z(t[s]);return a}function E(t,e,n){for(var r=t.slice(e,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function A(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function $(t,e,n,r,a,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<s)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function R(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,s=Math.min(t.length-n,2);a<s;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function _(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,s=Math.min(t.length-n,4);a<s;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function D(t,e,n,r,a,s){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function F(t,e,n,r,s){return s||D(t,0,n,4),a.write(t,e,n,r,23,4),n+4}function M(t,e,n,r,s){return s||D(t,0,n,8),a.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var a=e-t;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t+--e],a=1;e>0&&(a*=256);)r+=this[t+--e]*a;return r},u.prototype.readUInt8=function(t,e){return e||A(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||A(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||A(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||A(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||A(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=e,a=1,s=this[t+--r];r>0&&(a*=256);)s+=this[t+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return e||A(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||A(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||A(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||A(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||A(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||$(this,t,e,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[e]=255&t;++s<n&&(a*=256);)this[e+s]=t/a&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||$(this,t,e,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[e+a]=255&t;--a>=0&&(s*=256);)this[e+a]=t/s&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):_(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):_(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);$(this,t,e,n,a-1,-a)}var s=0,i=1,o=0;for(this[e]=255&t;++s<n&&(i*=256);)t<0&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);$(this,t,e,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[e+s]=255&t;--s>=0&&(i*=256);)t<0&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):_(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||$(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):_(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return F(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return F(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return M(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return M(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,s=r-n;if(this===t&&n<e&&e<r)for(a=s-1;a>=0;--a)t[a+e]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+s),e);return s},u.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var s;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(s=e;s<n;++s)this[s]=t;else{var i=u.isBuffer(t)?t:P(new u(t,r).toString()),o=i.length;for(s=0;s<n-e;++s)this[s+e]=i[s%o]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function z(t){return t<16?"0"+t.toString(16):t.toString(16)}function P(t,e){var n;e=e||1/0;for(var r=t.length,a=null,s=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function B(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(L,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function W(t,e,n,r){for(var a=0;a<r&&!(a+n>=e.length||a>=t.length);++a)e[a+n]=t[a];return a}}).call(this,n(264))},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({all_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","all","bool")},o={axis:e,keepDims:n};return r.a.runKernel(a.f,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({any_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","any","bool")},o={axis:e,keepDims:n};return r.a.runKernel(a.g,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({argMax_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n={x:Object(s.a)(t,"x","argMax")},i={axis:e};return r.a.runKernel(a.h,n,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({argMin_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n={x:Object(s.a)(t,"x","argMin")},i={axis:e};return r.a.runKernel(a.i,n,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({atan2_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","atan2"),o=Object(i.a)(e,"b","atan2");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.m,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({tanh_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","tanh")};return r.a.runKernel(a.Sc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(75),a=n(169),s=n(124),i=n(99),o=n(74),u=n(79);const c=Object(o.b)({conv1d_:function(t,e,n,o,c="NWC",l=1,d){const h=Object(r.a)(t,"x","conv1d"),p=Object(r.a)(e,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),a.b(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+p.rank+"."),null!=d&&a.b(a.v(o),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`),a.b(f.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`),a.b(i.h(n,l),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`),a.b("NWC"===c,()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`);const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],v=Object(s.a)(g,b,y,o,"NHWC",x,d);return m?Object(u.a)(v,[v.shape[2],v.shape[3]]):Object(u.a)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(75),a=n(221),s=n(74);const i=Object(s.b)({conv2dTranspose_:function(t,e,n,s,i,o){const u=Object(r.a)(t,"x","conv2dTranspose"),c=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(169),i=n(74),o=n(79);const u=Object(i.b)({conv2DBackpropInput_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i,u,c="NHWC",l){s.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let d=t,h=e,p=!1;3===e.rank&&(p=!0,h=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),s.b(4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+d.length+"."),s.b(4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+h.rank),s.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?h.shape[3]:h.shape[1];s.b(f===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`),s.b(m===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`),null!=l&&s.b(s.v(u),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const b={dy:h,filter:n},g={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,b,g);return p?Object(o.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({cosh_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","cosh")};return r.a.runKernel(a.J,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({depthToSpace_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n="NHWC"){const o=Object(s.a)(t,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i.b(u*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${o.shape}`),i.b(c*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${o.shape}`),i.b(l%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${o.shape}`);const d={x:o},h={blockSize:e,dataFormat:n};return r.a.runKernel(a.N,d,h)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74),u=n(79);const c=Object(o.b)({dilation2d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(t,"x","dilation2d"),h=Object(s.a)(e,"filter","dilation2d");i.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+d.rank+"."),i.b(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+h.rank+"."),i.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+l);let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r.a.runKernel(a.S,m,b);return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(88),a=n(75),s=n(83),i=n(152),o=n(74),u=n(101),c=n(87);const l=Object(o.b)({divNoNan_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(a.a)(t,"a","div"),o=Object(a.a)(e,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(75),a=n(169),s=n(108),i=n(74),o=n(79);const u=Object(i.b)({dot_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(r.a)(t,"t1","dot"),i=Object(r.a)(e,"t2","dot");a.b(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`);const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`),1===n.rank&&1===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[-1,1]),r=Object(s.a)(t,e);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(t,e);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const t=Object(o.a)(i,[-1,1]),e=Object(s.a)(n,t);return Object(o.a)(e,[e.size])}{const t=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,t)}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74),u=n(79);const c=Object(o.b)({localResponseNormalization_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=5,n=1,o=1,c=.5){const l=Object(s.a)(t,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`),i.b(i.v(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:e,bias:n,alpha:o,beta:c},m=r.a.runKernel(a.vb,p,f);return h?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({log1p_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","log1p")};return r.a.runKernel(a.Cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({softplus_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","softplus")};return r.a.runKernel(a.Gc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(75),a=n(86),s=n(127),i=n(156),o=n(184),u=n(74);const c=Object(u.b)({logicalXor_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),u=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(o.a)(t,e),Object(i.a)(Object(s.a)(t,e)))}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({mirrorPad_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){i.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const o=Object(s.a)(t,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(e.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`);const u="reflect"===n?1:0;for(let t=0;t<o.rank;t++)i.b(2===e[t].length,()=>"Invalid number of paddings. Must be length of 2 each."),i.b(e[t][0]>=0&&e[t][0]<=o.shape[t]-u&&e[t][1]>=0&&e[t][1]<=o.shape[t]-u,()=>`Padding in dimension ${t} cannot be greater than or equal to ${o.shape[t]-u} or less than 0 for input of shape `+o.shape);const c={paddings:e,mode:n},l={x:o};return r.a.runKernel(a.Rb,l,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(88),i=n(75),o=n(74);const u=Object(o.b)({mod_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){let n=Object(i.a)(t,"a","mod"),o=Object(i.a)(e,"b","mod");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Sb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n(75),a=n(169),s=n(174),i=n(150),o=n(99),u=n(185),c=n(74),l=n(79),d=n(158);const h=Object(c.b)({pool_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,c,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(o.h(p,h),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);const g=o.e(m.shape,e,p,h,c),y=[g.dilationHeight,g.dilationWidth];let x;x="same"===c?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const v=1===y[0]&&1===y[1],[O,w]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),s=t.concat(r,a),i=e.map((t,e)=>(t-s[e]%t)%t),o=a.map((t,e)=>t+i[e]),u=e.map((t,e)=>[r[e],o[e]]),c=e.map((t,e)=>[0,i[e]]);return[u,c]}([g.inHeight,g.inWidth],y,x),k=v?c:"valid",I=v?m:Object(d.a)(m,y,O),N=("avg"===n?()=>Object(s.a)(I,e,p,k):()=>Object(u.a)(I,e,p,k))(),j=v?N:Object(i.a)(N,y,w);return b?Object(l.a)(j,[j.shape[1],j.shape[2],j.shape[3]]):j}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(82),o=n(74);const u=Object(o.b)({prod_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=null,n=!1){let o=Object(s.a)(t,"x","prod");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:e,keepDims:n};return r.a.runKernel(a.hc,u,c)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return o})),n.d(e,"expectArraysClose",(function(){return u})),n.d(e,"testEpsilon",(function(){return c})),n.d(e,"expectPromiseToFail",(function(){return d})),n.d(e,"expectArraysEqual",(function(){return h})),n.d(e,"expectNumbersClose",(function(){return p})),n.d(e,"expectValuesInRange",(function(){return m})),n.d(e,"expectArrayBuffersEqual",(function(){return b})),n.d(e,"encodeStrings",(function(){return g}));var r=n(76),a=n(75),s=n(169),i=n(78);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=.1;function u(t,e,n){return null==n&&(n=c()),l(t,e,(t,e)=>f(t,e,n))}function c(){return 32===r.a.backend.floatPrecision()?.001:o}function l(t,e,n){let r=!0;if((Object(s.A)(t)||Object(s.A)(e))&&(r=!1),Object(s.A)(t)&&Object(s.A)(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(a.c)(t),r=Object(a.c)(e);if(!Object(s.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s.A)(t)?t:Object(s.m)(t),o=Object(s.A)(e)?e:Object(s.m)(e);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let t=0;t<o.length;++t){const e=i[t],r=o[t];if(!n(e,r))throw new Error(`Arrays differ: actual[${t}] = ${e}, expected[${t}] = ${r}.\nActual:   ${i}.\nExpected: ${o}.`)}}function d(t,e){t().then(()=>e.fail(),()=>e())}function h(t,e){const n="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return Object(s.z)(t)||Object(s.z)(t[0])||Object(s.z)(e)||Object(s.z)(e[0])?l(t,n,(t,e)=>t==e):l(t,e,(t,e)=>f(t,e,0))}function p(t,e,n){if(null==n&&(n=c()),!f(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function f(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function m(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function b(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function g(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?g(n):t[e]=Object(i.encodeString)(n)}return t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(110),a=n(74),s=n(191);const i=Object(a.b)({randomUniform_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0,n=1,a="float32",i){const o=Object(r.a)(t,a),u=new s.c(e,n,null,i);for(let t=0;t<o.values.length;t++)o.values[t]=u.nextValue();return o.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(76),a=n(73);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:t,stop:e,step:n,dtype:s};return r.a.runKernel(a.ic,{},i)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({rsqrt_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","rsqrt")};return r.a.runKernel(a.wc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({selu_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","selu")};return r.a.runKernel(a.zc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(75),a=n(169),s=n(124),i=n(151),o=n(74),u=n(79);const c=Object(o.b)({separableConv2d_:function(t,e,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(t,"x","separableConv2d"),p=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),a.b(4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),a.b(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),a.b(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),a.b(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`);const x=Object(i.a)(m,p,o,c,d,l),v=Object(s.a)(x,f,1,"valid",d);return b?Object(u.a)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({sin_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","sin")};return r.a.runKernel(a.Cc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({sinh_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","sinh")};return r.a.runKernel(a.Dc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n(122),a=n(98),s=n(180),i=n(80),o=n(74),u=n(193),c=n(79),l=n(112),d=n(85),h=n(96),p=n(196);const f=Object(o.b)({irfft_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let o;if(e<=2){const r=Object(c.a)(t,[n,e]);o=Object(p.a)(r)}else{const f=[n,2*(e-1)],m=Object(c.a)(Object(u.a)(t),[n,e]),b=Object(c.a)(Object(s.a)(t),[n,e]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,e-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),v=Object(a.a)([b,y],1),O=Object(c.a)(Object(r.a)(x,v),[f[0],f[1]]);o=Object(p.a)(O)}if(o=Object(u.a)(o),3===t.rank&&0!==t.shape[0]){const e=o,n=t.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),e.dispose()}return o}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(75),a=n(169),s=n(115);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(t,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(t,e,i,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({topk_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=1,n=!0){const i=Object(s.a)(t,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+e);const u={x:i},c={k:e,sorted:n},[l,d]=r.a.runKernel(a.Uc,u,c);return{values:l,indices:d}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({unique_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0){const n=Object(s.a)(t,"x","unique","string_or_numeric");Object(i.b)(n.rank>0,()=>"The input tensor must be at least 1D");const o={x:n},u={axis:e},[c,l]=r.a.runKernel(a.Xc,o,u);return{values:c,indices:l}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(248),a=n(75);const s=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),s=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),s}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(110);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const a=Object(r.a)(t,"int32"),s=Object(r.a)([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const r=a.indexToLoc(n[e]),i=e*t.length;s.values.set(r,i)}return s.toTensor()}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(169),i=n(74),o=n(79);const u=Object(i.b)({conv2DBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i,u,c="NHWC",l){let d=t;3===t.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),s.b(4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+d.shape+"."),s.b(4===h.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+h.shape+"."),s.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const p="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?h.shape[3]:h.shape[1];s.b(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),s.b(f===n[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`),null!=l&&s.b(s.v(u),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:d,dy:h},b={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,b)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"a",(function(){return a}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=1.7580993408473768,a=1.0507009873554805},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return l}));var r=n(72);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function a(t,e){return s(t,e)}function s(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(c(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=s(t[i],e,n,r);a[i]=o}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: "+t)}return n.set(t,a.value),a.value}function i(t,e=o){return function t(e,n,r=new Set){const a=e[0];if(r.has(a))throw new Error("Circular references are not supported.");const s=n(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(c(a)){const s=Array.isArray(a)?[]:{};r.add(a);for(const i in a){const a=e.map(t=>t[i]),o=t(a,n,r);s[i]=o}return r.delete(a),s}throw new Error("Can't recurse into non-iterable type: "+a)}return s.value}(t,e)}function o(t){return null===t?null:c(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function u(t,e){const n=new Map;s(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(r.util.isPromise(e)){const r=await e;n.set(t,r)}}return s(t,e,n)}function c(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof r.Tensor))}function l(t){return null==t||(null===(e=t)||"object"!=typeof e&&"function"!=typeof e)||Array.isArray(t)||"object"==typeof t&&t instanceof r.Tensor||r.util.isTypedArray(t);var e}},,function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(2),a=n(266),s=n(113),i=n(321),o=n(255),u=n(259),c=function(t,e,n,r){var a,s=arguments.length,i=s<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var o=t.length-1;o>=0;o--)(a=t[o])&&(i=(s<3?a(i):s>3?a(e,n,i):a(e,n))||i);return s>3&&i&&Object.defineProperty(e,n,i),i};let l=class extends o.a{constructor(){super(),this.mask=null,this.mode="edit",this.maskVisuMode=i.b.SEMANTIC,this.densePolygons=new Array,this.opacity=.6,this._selectedId={value:null},this._editionMode={value:a.c.NEW_INSTANCE},this._targetClass={value:1},this.gmask=new s.d,this.keyDownHandler=t=>{"Alt"===t.key&&this.switchMode()},this.renderer.labelLayer.addChild(this.gmask),this.renderer.labelLayer.alpha=this.opacity,this._editionMode.value=a.c.NEW_INSTANCE,this.modes={create:new a.b(Object.assign({},this)),"create-brush":new a.a(Object.assign({},this)),edit:new a.e(Object.assign({},this)),lock:new a.d(Object.assign({},this))},this.showroi=this.modes.create.showRoi,this.addEventListener("load",this.onImageChanged.bind(this))}connectedCallback(){super.connectedCallback(),window.addEventListener("keydown",this.keyDownHandler)}disconnectedCallback(){window.removeEventListener("keydown",this.keyDownHandler),super.disconnectedCallback()}get selectedId(){return this._selectedId.value}set selectedId(t){this._selectedId.value=t}get editionMode(){return this._editionMode.value}set editionMode(t){this._editionMode.value===t?this._editionMode.value=a.c.NEW_INSTANCE:this._editionMode.value=t,this.modes[this.mode]instanceof a.a&&this.modes[this.mode].reset()}get targetClass(){return this._targetClass.value}set targetClass(t){this._targetClass.value=t}get clsMap(){return this.gmask.clsMap}set clsMap(t){t instanceof Map?this.gmask.clsMap=t:"object"==typeof t&&(this.gmask.clsMap=new Map(Object.entries(t).map(([t,e])=>[Number(t),e])))}getMask(){return this.gmask.getBase64()}setMask(t){try{this.modes[this.mode].deselect()}catch(t){console.warn("deselect failed")}return this.gmask.setBase64(t)}setEmpty(){if(0!==this.renderer.imageWidth&&0!==this.renderer.imageHeight){this.gmask.empty(this.renderer.imageWidth,this.renderer.imageHeight),this.selectedId=[-1,-1,-1];try{this.modes[this.mode].deselect()}catch(t){console.warn("deselect failed")}}}updated(t){if(super.updated(t),t.has("mask")&&this.mask&&this.mask instanceof ImageData){this.gmask.initialize(this.mask),this.selectedId=[-1,-1,-1];try{this.modes[this.mode].deselect()}catch(t){console.warn("deselect failed")}}if(t.has("mode")&&this.mode){const e=t.get("mode");this.setMode(e,this.mode)}if(t.has("maskVisuMode")&&this.maskVisuMode){this.gmask.maskVisuMode=this.maskVisuMode;this.gmask.getValue()instanceof ImageData&&this.gmask.recomputeColor()}if(t.has("showroi")){this.modes.create.showRoi=this.showroi}}setMode(t,e){var n;t!==e&&(t=null===t?"edit":t,this.modes[t]&&this.modes[t].deactivate(),null===(n=this.modes[e])||void 0===n||n.activate(),this.mode=e,this.dispatchEvent(new CustomEvent("mode",{detail:this.mode})))}fillSelection(t){this.selectedId&&(this.gmask.replaceValue(this.selectedId,t),this.selectedId=t)}fillSelectionWithClass(t){if(this.selectedId){const e=this.selectedId,n=this.selectedId[2];let r=[this.selectedId[0],this.selectedId[1],t];if(this.clsMap.get(t)[3]&&!this.clsMap.get(n)[3]){const t=this.gmask.getNextId();r=[t[0],t[1],r[2]]}else this.clsMap.get(t)[3]||(r=[0,0,r[2]]);this.fillSelection(r),this.gmask.fusedIds.delete(Object(u.e)(e)),this.gmask.fusedIds.add(Object(u.e)(r))}}setOpacity(t){this.renderer.labelLayer.alpha=t}toggleLabels(){this.toggleMask()}toggleMask(){this.renderer.labelLayer.alpha===this.opacity?(this.renderer.labelLayer.alpha=0,this.renderer.backgroundSprite.visible=!0):0===this.renderer.labelLayer.alpha?(this.renderer.labelLayer.alpha=1,this.renderer.backgroundSprite.visible=!1):(this.renderer.backgroundSprite.visible=!0,this.renderer.labelLayer.alpha=this.opacity)}onTabulation(t){if(0!==this.gmask.fusedIds.size){if(t.preventDefault(),this.selectedId){const e=Array.from(this.gmask.fusedIds),n=Object(u.e)(this.selectedId),r=e.findIndex(t=>t===n)||0,a=e[t.shiftKey?(r-1+e.length)%e.length:(r+1+e.length)%e.length];this.selectedId=Object(u.i)(a)}else for(const t of this.gmask.fusedIds){this.selectedId=Object(u.i)(t);break}this.setMode(this.mode,"edit"),this.modes[this.mode].select(this.selectedId)}}filterLittle(t=10){this.gmask.fusedIds.forEach(e=>{this.filterId(Object(u.i)(e),t)}),this.dispatchEvent(new CustomEvent("update",{detail:this.selectedId}))}filterId(t,e){const n=this.gmask.getBlobs(t);for(const[,r]of n)r.nbPixels<e&&r.contours.forEach(e=>{const n=Object(u.b)(e.points,this.gmask.canvas.width+1);"external"===e.type?this.gmask.updateByPolygon(n,t,"remove"):this.gmask.updateByPolygon(n,t,"add")})}switchMode(){const t=Object.keys(this.modes),e=t.findIndex(t=>t===this.mode);this.mode=t[(e+1)%t.length],this.dispatchEvent(new CustomEvent("mode",{detail:this.mode}))}setController(t,e){return t===this.mode&&this.modes[t]?(this.modes[t].deactivate(),this.modes[t]=e,this.modes[t].activate()):this.modes[t]=e,this}onImageChanged(){this.gmask.canvas.width===this.renderer.imageWidth&&this.gmask.canvas.height===this.renderer.imageHeight||this.setEmpty()}onCopy(){return this.getMask()}onPaste(t){if(t){this.setMask(t).then(()=>{this.dispatchEvent(new Event("update"))});try{this.modes[this.mode].deselect()}catch(t){console.warn("deselect failed")}}}};c([Object(r.g)({type:String})],l.prototype,"mask",void 0),c([Object(r.g)({type:String})],l.prototype,"mode",void 0),c([Object(r.g)({type:String})],l.prototype,"maskVisuMode",void 0),c([Object(r.g)({type:Array})],l.prototype,"densePolygons",void 0),c([Object(r.g)({type:Boolean})],l.prototype,"showroi",void 0),l=c([Object(r.c)("pxn-segmentation")],l)},,,,,,,,,,,,,function(t,e,n){"use strict";n.d(e,"c",(function(){return r})),n.d(e,"e",(function(){return h})),n.d(e,"d",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return m})),n.d(e,"f",(function(){return b})),n.d(e,"g",(function(){return g}));var r,a=n(100),s=n(120),i=n(207),o=n(113),u=n(259),c=n(167),l=n(265);!function(t){t.ADD_TO_INSTANCE="add_to_instance",t.REMOVE_FROM_INSTANCE="remove_from_instance",t.NEW_INSTANCE="new_instance"}(r||(r={}));class d extends l.a{constructor(t={}){super(t),this.contours=new c.e,this.densePolygons=new Array,this.renderer=t.renderer||new i.a,this.densePolygons=t.densePolygons||new Array,this.gmask=t.gmask||new o.d,this._selectedId=t._selectedId||{value:null},this.renderer.stage.addChild(this.contours),this.onKeyDown=this.onKeyDown.bind(this)}activate(){this.contours.visible=!0,this._selectedId.value?(this.densePolygons=b(this.gmask,this._selectedId.value),g(this.contours,this.densePolygons)):(this.densePolygons=[],this.contours.clear()),window.addEventListener("keydown",this.onKeyDown,!1)}deactivate(){this.contours.visible=!1,this.contours.clear(),window.removeEventListener("keydown",this.onKeyDown,!1)}onKeyDown(t){"Escape"===t.key&&this.deselect()}deselect(){this._selectedId.value&&(this.densePolygons=[],g(this.contours,this.densePolygons),this._selectedId.value=null,this.dispatchEvent(new CustomEvent("selection",{detail:null})))}select(t){t&&(this._selectedId.value=t,this.densePolygons=b(this.gmask,t),g(this.contours,this.densePolygons),this.dispatchEvent(new CustomEvent("selection",{detail:t})))}}class h extends d{constructor(t={}){super(t),this.onPointerDownSelectInstance=this.onPointerDownSelectInstance.bind(this)}activate(){super.activate(),this.renderer.stage.on("mousedown",this.onPointerDownSelectInstance)}deactivate(){super.deactivate(),this.renderer.stage.removeListener("mousedown",this.onPointerDownSelectInstance)}onPointerDownSelectInstance(t){const{x:e,y:n}=this.renderer.getPosition(t.data),r=this.gmask.pixelId(e+n*this.gmask.canvas.width);0!==r[0]||0!==r[1]||0!==r[2]?this.select(r):this.deselect()}onKeyDown(t){super.onKeyDown(t),"Delete"===t.key&&(this._selectedId.value&&(this.gmask.deleteInstance(this._selectedId.value),this.gmask.fusedIds.delete(Object(u.e)(this._selectedId.value)),this.dispatchEvent(new CustomEvent("delete",{detail:this._selectedId.value}))),this.deselect())}}class p extends h{constructor(t={}){super(t),this.lockType=t.lockType||"class",this.onPointerDownLock=this.onPointerDownLock.bind(this)}activate(){super.activate(),this.renderer.stage.on("mousedown",this.onPointerDownLock)}deactivate(){super.deactivate(),this.renderer.stage.removeListener("mousedown",this.onPointerDownLock)}onPointerDownLock(t){const{x:e,y:n}=this.renderer.getPosition(t.data),r=this.gmask.pixelId(e+n*this.gmask.canvas.width);if("instance"===this.lockType){const t=Object(u.e)(r);this.gmask.lockedInstances.has(t)?this.gmask.lockedInstances.delete(t):this.gmask.lockedInstances.add(t)}else if("class"===this.lockType){const t=r[2];[...this.gmask.lockedInstances].map(t=>Object(u.i)(t)[2]).includes(t)?this.gmask.fusedIds.forEach(e=>{Object(u.i)(e)[2]===t&&this.gmask.lockedInstances.delete(e)}):this.gmask.fusedIds.forEach(e=>{Object(u.i)(e)[2]===t&&this.gmask.lockedInstances.add(e)})}this.gmask.recomputeColor()}}class f extends d{constructor(t={}){super(t),this.tempPolygon=null,this.roi=new c.e,this.roiMatrix=new Float32Array,this.roiRadius=-1,this.isActive=!1,this._targetClass=t._targetClass||{value:0},this._editionMode=t._editionMode||{value:r.NEW_INSTANCE},this.nextId=t._selectedId||{value:null},this.renderer.stage.addChild(this.roi),this.onPointerMoveBrush=this.onPointerMoveBrush.bind(this),this.onPointerDownBrush=this.onPointerDownBrush.bind(this),this.onPointerUpBrush=this.onPointerUpBrush.bind(this),this.onKeyUp=this.onKeyUp.bind(this)}activate(){super.activate(),this.renderer.stage.on("mousedown",this.onPointerDownBrush),this.renderer.stage.on("pointermove",this.onPointerMoveBrush),this.renderer.stage.on("pointerupoutside",this.onPointerUpBrush),window.addEventListener("keyup",this.onKeyUp,!1),this.initRoi(),this.contours.visible=!0,this._selectedId.value?(this.densePolygons=b(this.gmask,this._selectedId.value),g(this.contours,this.densePolygons)):(this.densePolygons=[],this.contours.clear())}deactivate(){super.deactivate(),this.renderer.stage.removeListener("mousedown",this.onPointerDownBrush),this.renderer.stage.removeListener("pointermove",this.onPointerMoveBrush),this.renderer.stage.removeListener("pointerupoutside",this.onPointerUpBrush),window.removeEventListener("keyup",this.onKeyUp,!1),this.roi.cacheAsBitmap=!1,this.roi.clear(),this.roi.cacheAsBitmap=!0}initRoi(){if(-1===this.roiRadius&&(this.roiRadius=Math.trunc(Math.min(this.renderer.imageHeight,this.renderer.imageWidth)/144)),this.roi.cacheAsBitmap=!1,this.roi.clear(),this._editionMode.value===r.NEW_INSTANCE){const t=this.gmask.pixelToColor(...this.getNextTargetValue()),e=Object(s.rgbToHex)(...t);this.roi.beginFill(parseInt(e,16))}else if(this._editionMode.value===r.ADD_TO_INSTANCE){const t=this.gmask.pixelToColor(...this.getTargetValue()),e=Object(s.rgbToHex)(...t);this.roi.beginFill(parseInt(e,16))}else if(this._editionMode.value===r.REMOVE_FROM_INSTANCE){const t=this.gmask.pixelToColor(...this.getTargetValue()),e=Object(s.rgbToHex)(...t);this.roi.lineStyle(1,parseInt(e,16),1,.5,!0)}this.roi.drawCircle(0,0,this.roiRadius),this.roi.endFill(),this.roi.x=this.renderer.mouse.x,this.roi.y=this.renderer.mouse.y,this.roi.cacheAsBitmap=!0,this.roiMatrix=new Float32Array(2*this.roiRadius*(2*this.roiRadius)),this.roiMatrix.fill(0);const t=this.roiRadius*this.roiRadius;for(let e=0;e<2*this.roiRadius;e++)for(let n=0;n<2*this.roiRadius;n++){let r=Math.abs(this.roiRadius-e-.5),a=Math.abs(this.roiRadius-n-.5);r*=r,a*=a,this.roiMatrix[e+2*this.roiRadius*n]=r+a<=t?1:0}}getTargetValue(){return this._selectedId.value&&this._selectedId.value.toString()!==[-1,-1,-1].toString()?this._selectedId.value:[0,0,0]}getNextTargetValue(){const t=this.gmask.clsMap.get(this._targetClass.value),e=t&&t[3]?this.gmask.getNextId():[0,0];return[e[0],e[1],this._targetClass.value]}onPointerDownBrush(t){if(1===t.data.button)return;this._editionMode.value===r.NEW_INSTANCE&&(this._selectedId.value=this.getNextTargetValue()),this.isActive=!0,this.roi.x=this.renderer.mouse.x,this.roi.y=this.renderer.mouse.y;const e=this._editionMode.value===r.REMOVE_FROM_INSTANCE?"remove":"add";this.gmask.updateByMaskInRoi(this.roiMatrix,[this.roi.x-this.roiRadius,this.roi.y-this.roiRadius,this.roi.x+this.roiRadius,this.roi.y+this.roiRadius],this.getTargetValue(),e)}onPointerMoveBrush(t){const e=this.renderer.getPosition(t.data);if(this.isActive){const t=this._editionMode.value===r.REMOVE_FROM_INSTANCE?"remove":"add";this.gmask.updateByMaskInRoi(this.roiMatrix,[e.x-this.roiRadius,e.y-this.roiRadius,e.x+this.roiRadius,e.y+this.roiRadius],this.getTargetValue(),t);const n=Math.atan2(e.y-this.roi.y,e.x-this.roi.x),a=Math.trunc(-Math.cos(n)*this.roiRadius),s=Math.trunc(Math.sin(n)*this.roiRadius);this.gmask.updateByPolygon([new c.f(this.roi.x+s,this.roi.y+a),new c.f(this.roi.x-s,this.roi.y-a),new c.f(e.x-s,e.y-a),new c.f(e.x+s,e.y+a)],this.getTargetValue(),t)}this.roi.x=e.x,this.roi.y=e.y}onPointerUpBrush(){this.isActive&&(this.densePolygons=b(this.gmask,this._selectedId.value),g(this.contours,this.densePolygons),this.gmask.fusedIds.add(Object(u.e)(this._selectedId.value)),this.dispatchEvent(new CustomEvent("update",{detail:this._selectedId.value}))),this.isActive=!1,this.initRoi()}onKeyDown(t){super.onKeyDown(t),"NumpadAdd"===t.code||"+"===t.key?(this.roiRadius+=1,this.initRoi()):"NumpadSubtract"===t.code||"-"===t.key?(this.roiRadius=Math.max(this.roiRadius-1,1),this.initRoi()):t.shiftKey?(this._editionMode.value=r.ADD_TO_INSTANCE,this.initRoi()):t.ctrlKey&&(this._editionMode.value=r.REMOVE_FROM_INSTANCE,this.initRoi())}onKeyUp(){this._editionMode.value=r.NEW_INSTANCE,this.initRoi()}}class m extends d{constructor(t={}){super(t),this.showRoi=!1,this.roiRatio={height:.15,width:.05},this.roi=new c.e,this.isActive=!1,this.tempPolygon=null,this._targetClass=t._targetClass||{value:0},this._editionMode=t._editionMode||{value:r.NEW_INSTANCE},this.renderer.stage.addChild(this.roi),this.renderer.stage.addChild(this.contours),this.onPointerMoveTempPolygon=this.onPointerMoveTempPolygon.bind(this),this.onPointerDownSelectionPolygon=this.onPointerDownSelectionPolygon.bind(this)}activate(){super.activate(),this.renderer.stage.on("mousedown",this.onPointerDownSelectionPolygon),this.renderer.stage.on("pointermove",this.onPointerMoveTempPolygon),this.initRoi()}deactivate(){super.deactivate(),this.renderer.stage.removeListener("mousedown",this.onPointerDownSelectionPolygon),this.renderer.stage.removeListener("pointermove",this.onPointerMoveTempPolygon),this.roi.clear(),this.removeTempPolygon()}initRoi(){const t=Math.min(this.renderer.imageHeight,this.renderer.imageWidth);this.roi.lineStyle(1,16777215,1,.5,!0),this.roi.drawRect(-t*this.roiRatio.width/2,-t*this.roiRatio.height/2,t*this.roiRatio.width,t*this.roiRatio.height),this.roi.endFill(),this.roi.x=this.renderer.mouse.x,this.roi.y=this.renderer.mouse.y,this.roi.visible=this.showRoi}onPointerDownSelectionPolygon(t){const e=this.renderer.getPosition(t.data),{x:n,y:r}=this.renderer.normalize(e);this.tempPolygon?(this.tempPolygon.popNode(),this.tempPolygon.pushNode(n,r),this.tempPolygon.pushNode(n,r)):(this.isActive=!0,this.tempPolygon=new o.f(Object(a.c)({id:"",color:"red",geometry:{type:"polygon",vertices:[]}})),this.tempPolygon.pushNode(n,r),this.tempPolygon.pushNode(n,r),this.tempPolygon.scaleX=this.renderer.imageWidth,this.tempPolygon.scaleY=this.renderer.imageHeight,this.renderer.stage.addChild(this.tempPolygon),this.roi.clear())}onPointerMoveTempPolygon(t){const e=this.renderer.getPosition(t.data);if(this.tempPolygon){const{x:t,y:n}=this.renderer.normalize(e);this.tempPolygon.popNode(),this.tempPolygon.pushNode(t,n)}else this.roi.x=e.x,this.roi.y=e.y}onKeyDown(t){if(super.onKeyDown(t),this.isActive&&"Enter"===t.key&&this.tempPolygon){this.tempPolygon.popNode();const t=new Array(.5*this.tempPolygon.data.geometry.vertices.length).fill(0).map(()=>({x:0,y:0}));if(this.tempPolygon.data.geometry.vertices.forEach((e,n)=>{n%2==0?t[Math.floor(n/2)].x=Math.round(e*this.renderer.imageWidth):t[Math.floor(n/2)].y=Math.round(e*this.renderer.imageHeight)}),this.tempPolygon.destroy(),this.renderer.stage.removeChild(this.tempPolygon),this.tempPolygon=null,t.length>2){const e=this._editionMode.value===r.REMOVE_FROM_INSTANCE?"remove":"add",n=this.getTargetValue();let a;this.gmask.fusedIds.add(Object(u.e)(n)),"remove"!==e&&(a=Object(u.g)(t),a=Object(u.d)(a,Object(u.f)(this.densePolygons))),this.gmask.updateByPolygon(t,n,e),this.densePolygons=b(this.gmask,n,a),g(this.contours,this.densePolygons),this.dispatchEvent(new CustomEvent("update",{detail:this._selectedId.value})),this.initRoi()}}}removeTempPolygon(){this.tempPolygon&&(this.tempPolygon.destroy(),this.renderer.stage.removeChild(this.tempPolygon),this.tempPolygon=null,this.initRoi())}deselect(){this.removeTempPolygon(),super.deselect()}getTargetValue(){if(this._editionMode.value===r.NEW_INSTANCE){const t=this.gmask.clsMap.get(this._targetClass.value),e=t&&t[3]?this.gmask.getNextId():[0,0],n=[e[0],e[1],this._targetClass.value];return this._selectedId.value=n,n}return this._editionMode.value!==r.ADD_TO_INSTANCE&&this._editionMode.value!==r.REMOVE_FROM_INSTANCE||!this._selectedId.value?[0,0,0]:this._selectedId.value}}function b(t,e,n){if(Object(u.a)(e,[0,0,0]))return[];const r=t.getBlobs(e,n),a=[];for(const[,e]of r)e.contours.forEach(e=>{const n=Object(u.b)(e.points,t.canvas.width+1);a.push({type:e.type,data:n})});return a}function g(t,e){t.clear(),t.lineStyle(1,4353791,1,.5,!0),e.forEach(e=>{!function(t,e){e.drawPolygon(t)}(e.data,t)})}},,,function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({acos_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","acos")};return r.a.runKernel(a.b,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({acosh_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","acosh")};return r.a.runKernel(a.c,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({addN_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){i.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),i.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+t.length);const e=t.map((t,e)=>Object(s.a)(t,"tensors"+e,"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!i.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const o=e;return r.a.runKernel(a.e,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({asin_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","asin")};return r.a.runKernel(a.j,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({asinh_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","asinh")};return r.a.runKernel(a.k,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({atan_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","atan")};return r.a.runKernel(a.l,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({atanh_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","atanh")};return r.a.runKernel(a.n,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(82),u=n(74),c=n(79);const l=Object(u.b)({avgPool3d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,u,l,d="NDHWC"){const h=Object(s.a)(t,"x","avgPool3d","float32");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===p.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${p.rank}.`),i.b("NDHWC"===d,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+d),null!=l&&i.b(i.v(u),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`);const m={x:p},b={filterSize:e,strides:n,pad:u,dimRoundingMode:l,dataFormat:d};let g=r.a.runKernel(a.p,m,b);return g=Object(o.a)(g,p.dtype),f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({bincount_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const o=Object(s.a)(t,"x","bincount"),u=Object(s.a)(e,"weights","bincount");i.b("int32"===o.dtype,()=>"Error in bincount: input dtype must be int32, but got "+o.dtype),i.b(n>=0,()=>`size must be non-negative, but got ${n}.`),i.b(u.size===o.size||0===u.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: `+u.shape+".");const c={x:o,weights:u},l={size:n};return r.a.runKernel(a.u,c,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({ceil_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","ceil")};return r.a.runKernel(a.x,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({clipByValue_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const o=Object(s.a)(t,"x","clipByValue");i.b(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`);const u={x:o},c={clipValueMin:e,clipValueMax:n};return r.a.runKernel(a.y,u,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(99),u=n(74),c=n(79);const l=Object(u.b)({conv3d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(t,"x","conv3d"),p=Object(s.a)(e,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),i.b(5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+p.rank+"."),i.b(f.shape[4]===p.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`),i.b(Object(o.h)(n,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`),i.b("NDHWC"===l,()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`);const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(169),i=n(74),o=n(79);const u=Object(i.b)({conv3DBackpropInput_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i,u){s.b(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let c=t,l=e,d=!1;4===e.rank&&(d=!0,l=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),c=[1,t[0],t[1],t[2],t[3]]);const h=c[4],p=l.shape[4];s.b(5===c.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+c.length+"."),s.b(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+l.rank),s.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),s.b(h===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`),s.b(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);const f={dy:l,filter:n},m={pad:u,strides:i,inputShape:c},b=r.a.runKernel(a.H,f,m);return d?Object(o.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74);const u=Object(o.b)({denseBincount_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,o=!1){const u=Object(s.a)(t,"x","denseBincount"),c=Object(s.a)(e,"weights","denseBincount");i.b("int32"===u.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+u.dtype),i.b(u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),i.b(n>=0,()=>`size must be non-negative, but got ${n}.`),i.b(c.size===u.size||0===c.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: `+c.shape+".");const l={x:u,weights:c},d={size:n,binaryOutput:o};return r.a.runKernel(a.M,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(82),u=n(74);const c=Object(u.b)({erf_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){let e=Object(s.a)(t,"x","erf");i.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(o.a)(e,"float32"));const n={x:e};return r.a.runKernel(a.Y,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({expm1_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","expm1")};return r.a.runKernel(a.bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({isFinite_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","isFinite")};return r.a.runKernel(a.sb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({isInf_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","isInf")};return r.a.runKernel(a.tb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({isNaN_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","isNaN")};return r.a.runKernel(a.ub,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(76),a=n(73);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return r.a.runKernel(a.Ab,{},s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(97),a=n(75),s=n(80),i=n(94),o=n(74),u=n(149),c=n(229);const l=Object(o.b)({logSigmoid_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)(t=>({value:Object(i.a)(Object(c.a)(Object(i.a)(t))),gradFunc:e=>Object(s.a)(e,Object(u.a)(Object(i.a)(t)))}))(e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(97),a=n(75),s=n(82),i=n(109),o=n(132),u=n(133),c=n(80),l=n(74),d=n(84),h=n(90);const p=Object(l.b)({logSoftmax_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=-1){const n=Object(a.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Object(r.a)((t,n)=>{const r=Object(u.a)(t,e,!0),a=Object(d.a)(t,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(o.a)(Object(h.a)(Object(i.a)(a),e,!0)));n([l]);return{value:l,gradFunc:(t,n)=>{const[r]=n,a=Object(i.a)(r);return Object(d.a)(t,Object(c.a)(Object(h.a)(t,e,!0),a))}}})(n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74),u=n(79);const c=Object(o.b)({maxPool3d_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=[1,1,1],n,o,c,l="NDHWC"){const d=Object(s.a)(t,"x","maxPool3d");let h=d,p=!1;4===d.rank&&(p=!0,h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),i.b(5===h.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`),i.b("NDHWC"===l,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+l),null!=c&&i.b(i.v(o),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`);const f={x:h},m={filterSize:e,strides:n,pad:o,dimRoundingMode:c,dataFormat:l},b=r.a.runKernel(a.Jb,f,m);return p?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({maxPoolWithArgmax_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i,o=!1){const u={x:Object(s.a)(t,"x","maxPoolWithArgmax")},c={filterSize:e,strides:n,pad:i,includeBatchInIndex:o},l=r.a.runKernel(a.Mb,u,c);return{result:l[0],indexes:l[1]}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(74),o=n(79);const u=Object(i.b)({multinomial_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i=!1){const u=Object(s.a)(t,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+c+".");if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+l);n=n||Math.random();const d={logits:1===l?Object(o.a)(u,[1,-1]):u},h={numSamples:e,seed:n,normalized:i},p=r.a.runKernel(a.Tb,d,h);return 1===l?Object(o.a)(p,[p.size]):p}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({onesLike_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","onesLike")};return r.a.runKernel(a.bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({reciprocal_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","reciprocal")};return r.a.runKernel(a.lc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({round_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","round")};return r.a.runKernel(a.vc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(77),a=n(75),s=n(169);const i=
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),i=Object(a.a)(e,"y","setdiff1d");s.b(n.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`),s.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),s.b(1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let t=0;t<o.length;t++)c.has(o[t])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let t=0,e=0;t<o.length;t++)c.has(o[t])||(d.values[e]=o[t],h.values[e]=t,e++);return[d.toTensor(),h.toTensor()]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({sign_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","sign")};return r.a.runKernel(a.Bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({softmax_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=-1){const n=Object(s.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const i={logits:n},o={dim:e};return r.a.runKernel(a.Fc,i,o)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({stridedSlice_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i,o=0,u=0,c=0,l=0,d=0){const h={x:Object(s.a)(t,"x","stridedSlice")},p={begin:e,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Oc,h,p)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({tan_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t){const e={x:Object(s.a)(t,"x","tan")};return r.a.runKernel(a.Rc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(110),a=n(74),s=n(191);const i=Object(a.b)({truncatedNormal_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(e,n,a,!0,i),u=Object(r.a)(t,a);for(let t=0;t<u.values.length;t++)u.values[t]=o.nextValue();return u.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(76),a=n(73),s=n(75),i=n(74),o=n(160);const u=Object(i.b)({scatterND_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n){const i=Object(s.a)(t,"indices","scatterND","int32"),u=Object(s.a)(e,"updates","scatterND");o.validateInput(u,i,n);const c={indices:i,updates:u},l={shape:n};return r.a.runKernel(a.xc,c,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(75),i=n(74);const o=Object(i.b)({gatherND_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e){const n=Object(s.a)(e,"indices","gatherND","int32"),i={params:Object(s.a)(t,"x","gatherND"),indices:n};return r.a.runKernel(a.lb,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74),u=n(79);const c=Object(o.b)({resizeNearestNeighbor_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=!1,o=!1){const c=Object(s.a)(t,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`),i.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."),i.b("float32"===c.dtype||"int32"===c.dtype,()=>"`images` must have `int32` or `float32` as dtype"),i.b(!1===o||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:e},f=r.a.runKernel(a.rc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(76),a=n(73),s=n(75),i=n(169),o=n(74),u=n(79);const c=Object(o.b)({resizeBilinear_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n=!1,o=!1){const c=Object(s.a)(t,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`),i.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."),i.b(!1===o||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:e},f=r.a.runKernel(a.pc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(74),i=n(79);const o=Object(s.b)({depthwiseConv2dNativeBackpropInput_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,s,o,u=[1,1],c){let l=e,d=!1;3===e.rank&&(d=!0,l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={dy:l,filter:n},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:t},f=r.a.runKernel(a.Q,h,p);return d?Object(i.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73),s=n(74),i=n(79);const o=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,s,o,u=[1,1],c){let l=t;3===t.rank&&(l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={x:l,dy:d},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n};return r.a.runKernel(a.P,h,p)}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return a}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==t?t:t=>t();function a(){return new Promise(t=>r(()=>t()))}}).call(this,n(364).setImmediate)},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return I})),n.d(e,"i",(function(){return j})),n.d(e,"c",(function(){return S})),n.d(e,"f",(function(){return C})),n.d(e,"e",(function(){return A})),n.d(e,"d",(function(){return $})),n.d(e,"k",(function(){return _})),n.d(e,"g",(function(){return D})),n.d(e,"h",(function(){return F})),n.d(e,"j",(function(){return M})),n.d(e,"b",(function(){return L}));var r=n(72),a=n(340),s=n(162),i=n(92),o=n(341),u=n(342),c=n(343),l=n(344),d=n(345),h=n(346),p=n(347),f=n(348),m=n(349),b=n(350),g=n(351),y=n(352),x=n(353),v=n(354),O=n(355),w=n(356),k=n(357);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[o,u,c,l,d,h,p,g,b,f,y,x,v,O,w,k,m].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t,e={}){const n=t.node,r=[],a=[],s=[],o=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t),{});let u=[];const c=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach(t=>{const e=o[t];e.inputNames.forEach(t=>{const[n]=Object(i.b)(t);e.inputs.push(o[n]),o[n].children.push(e)})}),0===Object.keys(d).length?h.forEach(t=>{const e=o[t];0===e.children.length&&c.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(i.b)(t),n=o[e];null!=n&&(n.signatureKey=d[t],c.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(i.b)(t),n=o[e];n&&(n.signatureKey=l[t],u.push(n))}):u=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:e,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(s.b)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=j(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=F(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=C(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=C(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=S(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=L(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=$(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=E(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],s=[];t.signature.inputArg.forEach(t=>{const[e]=Object(i.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:T(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(i.b)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const o=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(i.b)(o[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,s.push(a))});const u=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function N(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.env)().global;if(void 0!==n.atob)return n.atob(e);if(void 0!==t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function j(t,e,n,r=!1){const a=t[e];return null!=a?N(a.s,r):n}function S(t,e,n){const r=t[e];return r?r.b:n}function C(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function T(t){switch("string"==typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function E(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function A(t,e,n){const r=t[e];return r&&r.type?T(r.type):n}function $(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>T(t)):n}function R(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function _(t,e,n){const r=t[e];return r&&r.shape?R(r.shape):n}function D(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"==typeof t?t:parseInt(t,10)):n}function F(t,e,n,r=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>N(t,r)):n}function M(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>R(t)):n}function L(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(211).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(76),a=n(73);var s=n(75),i=n(74);const o=Object(i.b)({sparseToDense_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(t,e,n,i=0){const o=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(e,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c);const l={sparseIndices:o,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernel(a.Ic,l,d)}})},,,,,,function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(208),a=n(120);const s=new Map,i=t=>{(t=Math.round(100*t))%10==0&&console.info(`Model loading...${t}%`)},o=async t=>{if(s.has(t))return console.info("Model already loaded."),Promise.resolve(s.get(t));if(await(t=>{const e=indexedDB.open("tensorflowjs",1);return new Promise(n=>{e.onsuccess=()=>{try{const r=e.result.transaction("model_info_store","readwrite").objectStore("model_info_store").getAllKeys();r.onsuccess=()=>{n(r.result.includes(t))}}catch(t){indexedDB.deleteDatabase("tensorflowjs"),n(!1)}}})})(t)){console.info("Loading model from cache.");const e=await r.h("indexeddb://"+t,{onProgress:i});return s.set(t,e),console.info("Model loaded."),e}if(Object(a.checkPathExists)(t)){console.info("Loading model.");const e=await r.h(t,{onProgress:i});return e.save("indexeddb://"+t),s.set(t,e),console.info("Model loaded."),e}return console.warn("Unknow url",t),Promise.resolve(null)}},,function(t,e,n){"use strict";var r=n(2),a=n(253),s=n(321),i=n(167),o=n(208),u=n(120),c=n(318);class l{constructor(t){this.model=null,this.modelPath="box_model/model.json",this.modelPath=t||this.modelPath}async loadModel(t=this.modelPath){this.model=await Object(c.a)(t);const e=o.s([1,256,256,3]);(await this.model.predict(e)).dispose(),e.dispose()}async predict(t,e){if(!this.model)return Promise.resolve(new Float32Array((t[3]-t[1])*(t[2]-t[0])));const n=.5*(t[0]+t[2]),r=.5*(t[1]+t[3]),a=1.15*(t[2]-t[0]),s=1.15*(t[3]-t[1]),i=[n-.5*a,r-.5*s,n+.5*a,r+.5*s].map(Math.trunc),u=this.cropImage(e,i,256),c=o.q(()=>{const e=o.d(o.a.fromPixels(u)).div(o.l(255)),n=this.model.predict(e);return o.g.cropAndResize(n,[[.075,.075,.925,.925]],[0],[t[3]-t[1],t[2]-t[0]]).squeeze().add(.5).cast("int32")}),l=c.dataSync();return c.dispose(),l}async predictPolygon(t,e){const n=await this.predict(t,e);let r=[];const a=new u.BlobExtractor2d([...n],t[2]-t[0],t[3]-t[1]);a.extract(1),1===a.blobs.size&&a.blobs.get(0).contours.forEach(e=>{"external"===e.type&&(r=Object(u.simplify)(Object(u.convertIndexToDict)(e.points,t[2]-t[0]+1),2))});const s=r.map(n=>(n[0]+t[0])/e.width),i=r.map(n=>(n[1]+t[1])/e.height),o=new Array(2*s.length);for(let t=0;t<2*s.length;t++)o[t]=t%2?i[(t-1)/2]:s[t/2];return o}cropImage(t,e,n){const r=document.createElement("canvas");r.width=n||e[2]-e[0],r.height=n||e[3]-e[1];return r.getContext("2d").drawImage(t,e[0],e[1],e[2]-e[0],e[3]-e[1],0,0,r.width,r.height),r}}var d,h=n(100),p=n(114),f=n(207),m=n(113),b=n(259),g=n(266);!function(t){t.ADD_TO_INSTANCE="add_to_instance",t.REMOVE_FROM_INSTANCE="remove_from_instance",t.NEW_INSTANCE="new_instance"}(d||(d={}));class y extends p.a{constructor(t={}){super(t),this.segmentationCreator=new l,this.model="box_model/model.json",this.contours=new i.e,this.densePolygons=new Array,this.renderer=t.renderer||new f.a,this.densePolygons=t.densePolygons||new Array,this._targetClass=t._targetClass||{value:0},this.gmask=t.gmask||new m.d,this.segmentationCreator=new l(this.model),this._selectedId=t._selectedId||{value:null},this._editionMode=t._editionMode||{value:d.NEW_INSTANCE},this.renderer.stage.addChild(this.contours),this.onKeyDown=this.onKeyDown.bind(this)}async load(t){this.model=t||this.model,this.cross.visible=!1,this.renderer.renderer.plugins.interaction.cursorStyles.default="wait",await this.segmentationCreator.loadModel(this.model),this.renderer.renderer.plugins.interaction.cursorStyles.default="inherit",this.renderer.renderer.plugins.interaction.currentCursorMode="inherit",this.cross.visible=!0}activate(){super.activate(),this.contours.visible=!0,this._selectedId.value?(this.densePolygons=Object(g.f)(this.gmask,this._selectedId.value),Object(g.g)(this.contours,this.densePolygons)):(this.densePolygons=[],this.contours.clear()),window.addEventListener("keydown",this.onKeyDown,!1)}deactivate(){super.deactivate(),this.contours.clear(),this.contours.visible=!1,window.removeEventListener("keydown",this.onKeyDown,!1)}onKeyDown(t){"Escape"===t.key&&this.deselect()}deselect(){this._selectedId.value&&(this.densePolygons=[],Object(g.g)(this.contours,this.densePolygons),this._selectedId.value=null,this.dispatchEvent(new CustomEvent("selection",{detail:null})))}onRootDown(t){const e=t.data.originalEvent;if(2===e.buttons||4===e.buttons)return;this.isCreating=!0,this.mouse=this.renderer.getPosition(t.data);const n=this.renderer.normalize(this.mouse),r=Object(h.c)({id:"tmp",color:"red",geometry:{vertices:[n.x,n.y,n.x,n.y],type:"rectangle"}});this.tmpShape=new m.g(r),this.renderer.stage.addChild(this.tmpShape),this.tmpShape.scaleX=this.renderer.imageWidth,this.tmpShape.scaleY=this.renderer.imageHeight,this.tmpShape.draw()}onRootMove(t){super.onRootMove(t);const e=this.renderer.getPosition(t.data);if((e.x!==this.mouse.x||e.y!==this.mouse.y)&&(this.mouse=e,this.isCreating)){const t=this.tmpShape;if(t){const e=this.renderer.normalize(this.mouse);t.data.geometry.vertices[3]=e.y,t.data.geometry.vertices[2]=e.x}}}onRootUp(){if(this.isCreating){this.isCreating=!1;const t=this.tmpShape,e=t.data.geometry.vertices,n=Math.trunc(Math.min(e[0],e[2])*this.renderer.imageWidth),r=Math.trunc(Math.max(e[0],e[2])*this.renderer.imageWidth),a=Math.trunc(Math.min(e[1],e[3])*this.renderer.imageHeight),s=Math.trunc(Math.max(e[1],e[3])*this.renderer.imageHeight);this.renderer.stage.removeChild(t),t.destroy(),this.tmpShape=null,this.segmentationCreator.predict([n,a,r,s],this.renderer.htmlImageElement).then(t=>{const e=this._editionMode.value===d.REMOVE_FROM_INSTANCE?"remove":"add",i=this.getTargetValue();this.gmask.updateByMaskInRoi(t,[n,a,r,s],i,e),this.densePolygons=Object(g.f)(this.gmask,i),Object(g.g)(this.contours,this.densePolygons),this.gmask.fusedIds.add(Object(b.e)(i)),this.dispatchEvent(new CustomEvent("update",{detail:i}))})}}getTargetValue(){if(this._editionMode.value===d.NEW_INSTANCE){const t=this.gmask.clsMap.get(this._targetClass.value),e=t&&t[3]?this.gmask.getNextId():[0,0],n=[e[0],e[1],this._targetClass.value];return this._selectedId.value=n,n}return this._editionMode.value!==d.ADD_TO_INSTANCE&&this._editionMode.value!==d.REMOVE_FROM_INSTANCE||!this._selectedId.value?[0,0,0]:this._selectedId.value}}var x=function(t,e,n,r){var a,s=arguments.length,i=s<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var o=t.length-1;o>=0;o--)(a=t[o])&&(i=(s<3?a(i):s>3?a(e,n,i):a(e,n))||i);return s>3&&i&&Object.defineProperty(e,n,i),i};let v=class extends a.a{constructor(){super(),this.model="https://raw.githubusercontent.com/pixano/pixano.github.io/master/models/box_model/model.json",this.maskVisuMode=s.b.INSTANCE,this.modes["smart-create"]=new y(Object.assign({},this))}updated(t){super.updated(t),t.has("model")&&this.modes["smart-create"].load(this.model)}};x([Object(r.g)({type:String})],v.prototype,"model",void 0),v=x([Object(r.c)("pxn-smart-segmentation")],v)},,,function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},,function(t,e,n){"use strict";e.byteLength=function(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=c(t),i=r[0],o=r[1],u=new s(function(t,e,n){return 3*(e+n)/4-n}(0,i,o)),l=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)e=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],u[l++]=e>>16&255,u[l++]=e>>8&255,u[l++]=255&e;2===o&&(e=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,u[l++]=255&e);1===o&&(e=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,u[l++]=e>>8&255,u[l++]=255&e);return u},e.fromByteArray=function(t){for(var e,n=t.length,a=n%3,s=[],i=0,o=n-a;i<o;i+=16383)s.push(l(t,i,i+16383>o?o:i+16383));1===a?(e=t[n-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===a&&(e=(t[n-2]<<8)+t[n-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var a,s,i=[],o=e;o<n;o+=3)a=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]),i.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(t,e){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
e.read=function(t,e,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=t[e+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+t[e+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+t[e+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},e.write=function(t,e,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=l):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(e*u-1)*Math.pow(2,a),i+=d):(o=e*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;t[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;t[n+p]=255&i,p+=f,i/=256,c-=8);t[n+p-f]|=128*m}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";(function(t){var e=n(93);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=()=>n(323);let a;class s{constructor(){this.util=n(324),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got "+e);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new s)}).call(this,n(257))},function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(102)&&n(136)?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.alea=u}(0,t,n(102))}).call(this,n(144)(t))},function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(102)&&n(136)?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor128=u}(0,t,n(102))}).call(this,n(144)(t))},function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(102)&&n(136)?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorwow=u}(0,t,n(102))}).call(this,n(144)(t))},function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(102)&&n(136)?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorshift7=u}(0,t,n(102))}).call(this,n(144)(t))},function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,s=e.i;return e.w=r=r+1640531527|0,n=a[s+34&127],t=a[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,a,s,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),a=0,s=-32;s<u;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(e&&e.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;t.w=i,t.X=o,t.i=a}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(102)&&n(136)?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor4096=u}(0,t,n(102))}).call(this,n(144)(t))},function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(102)&&n(136)?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.tychei=u}(0,t,n(102))}).call(this,n(144)(t))},function(t,e,n){var r;!function(a,s){var i,o=this,u=s.pow(256,6),c=s.pow(2,52),l=2*c;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],s=typeof e;if(n&&"object"==s)for(r in e)try{a.push(t(e[r],n-1))}catch(t){}return a.length?a:"string"==s?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(a)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(256):(t=new Uint8Array(256),(o.crypto||o.msCrypto).getRandomValues(t)),m(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,m(a)]}}():t,3),r),b=new h(r),g=function(){for(var t=b.g(6),e=u,n=0;t<c;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&p(r,b),t.state=function(){return p(b,{})}),n?(s.random=t,e):t})(g,d,"global"in e?e.global:this==s,e.state)}function h(t){var e,n=t.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+t[a%n]+(e=i[a])],i[s]=e;(r.g=function(t){for(var e,n=0,a=r.i,s=r.j,i=r.S;t--;)e=i[a=255&a+1],n=256*n+i[255&(i[a]=i[s=255&s+e])+(i[s]=e)];return r.i=a,r.j=s,n})(256)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(s.seedrandom=d,f(s.random(),a),t.exports){t.exports=d;try{i=n(325)}catch(t){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},function(t,e,n){"use strict";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n(72),a=n(142),s=n(359);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(t){if(super(),this.upstream=t,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(326);this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n(211).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(142);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class a extends r.a{split(t){return new s(this,t)}}class s extends a{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const t of e.slice(0,-1))this.outputQueue.push(t);return this.carryover=e[e.length-1],!0}}},,,,,,,function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}));var r=n(2);
/**
 * @copyright CEA-LIST/DIASI/SIALV/LVA (2019)
 * @author CEA-LIST/DIASI/SIALV/LVA <pixano@cea.fr>
 * @license CECILL-C
*/r.e`<svg width="24" height="24" viewBox="0 0 24 24"><path d="M24 9h-9v-9h-6v9h-9v6h9v9h6v-9h9z"/></svg>`,r.e`<svg width="18" height="18" viewBox="0 0 18 18"><path d="M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z"/></svg>`;const a=r.e`<svg slot="icon" width="24" height="24" viewBox="0 0 24 24"><g><path d="M 8.46875 3.816406 C 7.988281 3.988281 7.871094 4.128906 7.199219 5.34375 C 6.351562 6.871094 6.652344 6.71875 4.359375 6.75 C 2.179688 6.777344 2.003906 6.832031 1.632812 7.585938 L 1.523438 7.804688 L 1.523438 19.195312 L 1.636719 19.425781 C 1.777344 19.710938 2.042969 19.976562 2.335938 20.117188 L 2.554688 20.226562 L 21.445312 20.226562 L 21.664062 20.117188 C 21.945312 19.980469 22.230469 19.695312 22.367188 19.414062 L 22.476562 19.195312 L 22.476562 7.804688 L 22.367188 7.585938 C 21.996094 6.828125 21.828125 6.777344 19.640625 6.75 C 17.417969 6.722656 17.601562 6.785156 17.074219 5.835938 C 15.800781 3.523438 16.351562 3.75 11.988281 3.753906 C 9.300781 3.753906 8.613281 3.765625 8.46875 3.816406 M 13.148438 7.636719 C 14.902344 8.027344 16.933594 9.773438 16.6875 10.683594 C 16.496094 11.402344 15.738281 11.390625 15.226562 10.65625 C 13.804688 8.636719 10.949219 8.402344 9.308594 10.175781 C 8.988281 10.523438 8.972656 10.503906 9.703125 10.640625 C 10.46875 10.78125 10.652344 10.917969 10.492188 11.21875 C 10.414062 11.371094 7.699219 13.261719 7.5625 13.265625 C 7.375 13.265625 7.234375 13.066406 6.539062 11.789062 C 6.15625 11.09375 5.828125 10.5 5.804688 10.46875 C 5.71875 10.363281 5.78125 10.117188 5.917969 10.015625 L 6.050781 9.917969 L 6.769531 10.058594 L 7.488281 10.203125 L 7.734375 9.828125 C 8.871094 8.109375 11.140625 7.191406 13.148438 7.636719 M 16.628906 12.316406 C 16.703125 12.390625 18.050781 14.796875 18.1875 15.097656 C 18.257812 15.253906 18.144531 15.5 17.984375 15.542969 C 17.925781 15.554688 17.558594 15.507812 17.171875 15.433594 L 16.472656 15.300781 L 16.261719 15.625 C 14.523438 18.347656 10.625 18.761719 8.253906 16.476562 C 7.21875 15.480469 7 14.742188 7.628906 14.378906 C 8 14.160156 8.375 14.296875 8.6875 14.765625 C 10.105469 16.878906 13.296875 17.113281 14.78125 15.210938 C 14.953125 14.988281 14.945312 14.984375 14.25 14.855469 C 13.125 14.648438 13.132812 14.441406 14.296875 13.636719 C 14.644531 13.398438 15.242188 12.984375 15.625 12.71875 C 16.34375 12.222656 16.480469 12.167969 16.628906 12.316406 "/></g></svg>`,s=(r.e`<svg slot="icon" width="24" height="24" viewBox="0 0 24 24"><g><path style=" stroke:none;fill-rule:evenodd;" d="M 10.621094 3.5625 C 6.527344 3.929688 5.429688 4.527344 4.761719 6.746094 C 4.640625 7.140625 4.394531 7.855469 4.214844 8.332031 C 3.71875 9.640625 3.710938 9.65625 3.214844 9.65625 C 2.441406 9.65625 1.792969 10.339844 1.742188 11.207031 L 1.726562 11.515625 L 2.257812 11.652344 L 2.789062 11.792969 L 2.773438 15.1875 C 2.746094 20.039062 2.660156 19.777344 4.3125 19.816406 C 5.3125 19.84375 6.285156 19.773438 6.453125 19.664062 C 6.574219 19.585938 6.648438 19.339844 6.820312 18.472656 C 6.886719 18.125 6.953125 17.824219 6.964844 17.804688 C 6.980469 17.78125 8.121094 17.765625 9.5 17.765625 C 11.871094 17.765625 12.007812 17.761719 11.984375 17.683594 C 11.972656 17.636719 11.886719 17.429688 11.792969 17.222656 C 10.800781 14.984375 11.523438 12.34375 13.5625 10.757812 L 13.746094 10.617188 L 11.710938 10.617188 C 10.09375 10.617188 9.515625 10.597656 8.882812 10.53125 C 7.203125 10.355469 5.179688 10.015625 5.21875 9.917969 C 5.230469 9.890625 5.445312 9.285156 5.695312 8.578125 C 6.726562 5.660156 6.640625 5.792969 7.664062 5.5625 C 8.660156 5.335938 8.789062 5.328125 10.796875 5.359375 C 16.675781 5.445312 16.777344 5.472656 17.234375 7.070312 C 17.296875 7.292969 17.527344 8.015625 17.746094 8.675781 L 18.144531 9.875 L 18.410156 9.957031 C 19.183594 10.199219 19.925781 10.648438 20.570312 11.269531 L 21.023438 11.703125 L 21.328125 11.613281 C 21.699219 11.5 21.710938 11.484375 21.691406 11.128906 C 21.648438 10.320312 21.046875 9.707031 20.261719 9.664062 C 19.664062 9.632812 19.613281 9.542969 18.488281 6.351562 C 17.867188 4.585938 17.699219 4.46875 15.101562 3.9375 C 13.28125 3.5625 11.902344 3.449219 10.621094 3.5625 M 17.015625 10.21875 C 16.933594 10.300781 16.921875 10.375 16.921875 10.800781 C 16.921875 11.328125 16.914062 11.34375 16.644531 11.34375 C 15.078125 11.34375 13.175781 13.304688 13.171875 14.917969 L 13.171875 15.09375 L 12.660156 15.09375 C 12.121094 15.09375 12 15.136719 12 15.320312 C 12 15.484375 12.097656 15.515625 12.640625 15.515625 L 13.171875 15.515625 L 13.171875 15.695312 C 13.171875 17.304688 14.855469 19.0625 16.578125 19.253906 L 16.898438 19.289062 L 16.921875 19.808594 C 16.945312 20.347656 16.992188 20.484375 17.15625 20.484375 C 17.320312 20.484375 17.367188 20.347656 17.390625 19.808594 L 17.414062 19.289062 L 17.554688 19.277344 C 19.382812 19.109375 20.882812 17.632812 21.117188 15.761719 L 21.148438 15.515625 L 21.652344 15.515625 C 22.179688 15.515625 22.265625 15.484375 22.265625 15.304688 C 22.265625 15.125 22.179688 15.09375 21.648438 15.09375 L 21.148438 15.09375 L 21.113281 14.824219 C 20.90625 13.121094 19.550781 11.65625 17.925781 11.390625 C 17.746094 11.359375 17.554688 11.328125 17.496094 11.316406 C 17.394531 11.296875 17.390625 11.277344 17.390625 10.804688 C 17.390625 10.308594 17.328125 10.125 17.15625 10.125 C 17.128906 10.125 17.066406 10.167969 17.015625 10.21875 M 17.34375 12.015625 L 17.34375 12.6875 L 17.636719 12.742188 C 18.730469 12.941406 19.503906 13.773438 19.757812 15.011719 L 19.78125 15.140625 L 21.09375 15.140625 L 21.09375 15.46875 L 19.785156 15.46875 L 19.753906 15.644531 C 19.558594 16.78125 18.738281 17.660156 17.671875 17.875 L 17.367188 17.9375 L 17.355469 18.601562 L 17.339844 19.265625 L 16.96875 19.265625 L 16.96875 18.609375 C 16.96875 18.121094 16.953125 17.945312 16.910156 17.933594 C 16.878906 17.925781 16.730469 17.894531 16.582031 17.867188 C 15.628906 17.6875 14.75 16.785156 14.566406 15.785156 L 14.511719 15.46875 L 13.21875 15.46875 L 13.21875 15.140625 L 14.519531 15.140625 L 14.550781 14.941406 C 14.71875 13.847656 15.582031 12.945312 16.652344 12.742188 L 16.96875 12.683594 L 16.96875 11.34375 L 17.34375 11.34375 L 17.34375 12.015625 M 4.976562 12.683594 C 5.421875 12.824219 6.671875 13.324219 7.136719 13.542969 C 8.066406 13.984375 7.742188 14.636719 6.542969 14.746094 C 6.160156 14.78125 5.0625 14.699219 4.570312 14.597656 C 3.917969 14.464844 3.683594 14.09375 3.796875 13.371094 C 3.917969 12.605469 4.203125 12.441406 4.976562 12.683594 M 16.542969 13.097656 C 15.769531 13.3125 15.136719 13.960938 14.929688 14.75 C 14.820312 15.164062 14.796875 15.140625 15.347656 15.140625 L 15.835938 15.140625 L 15.917969 14.894531 C 15.972656 14.726562 16.074219 14.578125 16.238281 14.410156 C 16.40625 14.246094 16.554688 14.144531 16.722656 14.089844 L 16.96875 14.007812 L 16.96875 13.519531 C 16.96875 12.964844 16.980469 12.976562 16.542969 13.097656 M 17.34375 13.507812 L 17.347656 13.992188 L 17.683594 14.15625 C 18.066406 14.34375 18.296875 14.597656 18.386719 14.9375 L 18.441406 15.140625 L 19.417969 15.140625 L 19.390625 14.898438 C 19.289062 14.03125 18.460938 13.207031 17.542969 13.054688 L 17.34375 13.023438 L 17.34375 13.507812 M 16.757812 14.429688 C 15.808594 14.882812 16.089844 16.265625 17.132812 16.265625 C 18.367188 16.265625 18.453125 14.457031 17.222656 14.363281 C 17.011719 14.34375 16.898438 14.363281 16.757812 14.429688 M 14.882812 15.691406 C 15.019531 16.617188 15.851562 17.457031 16.726562 17.5625 L 16.96875 17.589844 L 16.96875 16.609375 L 16.769531 16.550781 C 16.371094 16.429688 15.996094 16.046875 15.886719 15.648438 L 15.839844 15.46875 L 14.847656 15.46875 L 14.882812 15.691406 M 18.421875 15.550781 C 18.417969 15.878906 17.984375 16.386719 17.582031 16.53125 L 17.34375 16.617188 L 17.34375 17.097656 C 17.34375 17.652344 17.335938 17.644531 17.816406 17.503906 C 18.636719 17.265625 19.40625 16.355469 19.40625 15.625 L 19.40625 15.46875 L 18.914062 15.46875 C 18.476562 15.46875 18.421875 15.476562 18.421875 15.550781 "/></g></svg>`,r.e`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M0 16V8h11v5h5v11H0zm17-1v-2h3v3h-3zm4 0v-2h3v3h-3zm0-5V8h3v3h-3zM8 5V4h2v3H8zm13 0V4h3v3h-3zM8 1V0h2v3H8zm4 0V0h3v3h-3zm5 0V0h2v3h-2zm4 0V0h3v3h-3zm0 0"/></svg>`),i=r.e`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M0 16V8h8V0h16v16h-8v8H0zm0 0"/></svg>`},,,,,,,,,,,function(t,e,n){"use strict";n.r(e),n.d(e,"PluginSegmentation",(function(){return h}));var r=n(2),a=(n(253),n(163),n(119),n(164),n(168),n(120)),s=n(12),i=n(366),o=n(13),u=n(166);
/**
 * @copyright CEA-LIST/DIASI/SIALV/LVA (2019)
 * @author CEA-LIST/DIASI/SIALV/LVA <pixano@cea.fr>
 * @license CECILL-C
*/
const c="add_to_instance",l="remove_from_instance",d="new_instance";class h extends u.a{static get properties(){return{...super.properties,maskVisuMode:{type:String},currentEditionMode:{type:String}}}constructor(){super(),this.mode="create",this.maskVisuMode="SEMANTIC",this.currentEditionMode=d}get toolDrawer(){return r.e`
        <mwc-icon-button ?selected=${"edit"===this.mode}
                         title="Select/Edit instance"
                         icon="navigation"
                         @click="${()=>this.mode="edit"}">
                         </mwc-icon-button>
        <mwc-icon-button ?selected=${"create"===this.mode}
                         icon="add_circle_outline"
                         title="Add instance (Polygon)"
                         @click="${()=>this.mode="create"}">
                         </mwc-icon-button>
        <mwc-icon-button ?selected=${"create-brush"===this.mode}
                         icon="brush"
                         title="Add instance (Brush)"
                         @click="${()=>this.mode="create-brush"}">
                         </mwc-icon-button>
        <mwc-icon-button ?selected=${this.getEditionMode()===c}
                         title="Add to instance (Shift)"
                         @click="${()=>this.setEditionMode(c)}">
                         ${i.c}
                         </mwc-icon-button>
        <mwc-icon-button ?selected=${this.getEditionMode()===l}
                         title="Remove from instance (Ctrl)"
                         @click="${()=>this.setEditionMode(l)}">
                         ${i.b}
                         </mwc-icon-button>
        <mwc-icon-button ?selected=${"lock"===this.mode}
                         icon="lock"
                         title="Lock instances on click"
                         @click="${()=>this.mode="lock"}">
                         </mwc-icon-button>
        <mwc-icon-button icon="tonality"
                         title="Switch opacity"
                         @click="${()=>this.element.toggleMask()}">
                         </mwc-icon-button>
        <mwc-icon-button icon="filter_center_focus"
                         title="Filter isolated"
                         @click="${()=>this.element.filterLittle()}">
                         </mwc-icon-button>
        <mwc-icon-button icon="face"
                         ?selected=${"INSTANCE"===this.maskVisuMode}
                         title="Switch instance/semantic"
                         @click="${()=>this.maskVisuMode="INSTANCE"===this.maskVisuMode?"SEMANTIC":"INSTANCE"}">
                         </mwc-icon-button>
    `}initDisplay(){super.initDisplay();const t=Object(s.b)("application").taskName,e=Object(s.b)("application").tasks.find(e=>e.name===t).spec.label_schema;this.element.clsMap=new Map(e.category.map(t=>{const e=Object(a.colorToRGBA)(t.color);return[t.idx,[e[0],e[1],e[2],t.instance?1:0]]})),e.default||(e.default=e.category[0].name),this.element.targetClass=e.category.find(t=>t.name===e.default).idx}onSelection(t){if(this.selectedIds=t.detail,this.selectedIds){const t=this.annotations.filter(t=>JSON.stringify(this.selectedIds)===t.id),e=Object(a.commonJson)(t);this.attributePicker.setAttributes(e)}else this.selectedIds=[]}onUpdate(t){const e=t.detail;let n=this.annotations,r=n.find(t=>0===t.id);r?r.mask=this.element.getMask():(r={id:0,mask:this.element.getMask()},n.push(r));let a=n.find(t=>t.id===JSON.stringify(e));if(a);else{a={...this.attributePicker.defaultValue};const t=this.attributePicker.value;Object.keys(a).forEach(e=>{a[e]=JSON.parse(JSON.stringify(t[e]))}),a.id=JSON.stringify(e),n.push(a)}s.c.dispatch(Object(o.g)({annotations:n})),this.selectedIds=e}onAttributeChanged(){if(!this.selectedIds.length){const t=this.attributePicker.selectedCategory;return void(this.element.targetClass=t.idx)}let t=this.annotations;const e=this.attributePicker.selectedCategory;this.element.targetClass=e.idx,this.element.fillSelectionWithClass(e.idx),t.find(t=>0===t.id).mask=this.element.getMask();const n=this.attributePicker.value;let r=t.find(t=>t.id===JSON.stringify(this.selectedIds));Object.keys(n).forEach(t=>{r[t]=JSON.parse(JSON.stringify(n[t]))});const a=this.element.selectedId;r.id=JSON.stringify(a),this.selectedIds=a,s.c.dispatch(Object(o.g)({annotations:t}))}onDelete(t){const e=t.detail;let n=this.annotations;n.find(t=>0===t.id).mask=this.element.getMask(),n=n.filter(t=>t.id!==JSON.stringify(e)),s.c.dispatch(Object(o.g)({annotations:n}))}refresh(){if(!this.element)return;let t=this.annotations.find(t=>0===t.id);t?this.element.setMask(t.mask):this.element.setEmpty()}getEditionMode(){return this.element?this.element.editionMode:void 0}setEditionMode(t){this.element&&(this.element.editionMode=t),this.currentEditionMode=t}get editor(){return r.e`<pxn-segmentation id="main"
                            mode=${this.mode}
                            maskVisuMode=${this.maskVisuMode}
                            @update=${this.onUpdate}
                            @selection=${this.onSelection}
                            @delete=${this.onDelete}
                            @mode=${this.onModeChange}></pxn-segmentation>`}collect(){console.log("should not be called")}}customElements.define("plugin-segmentation",h)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,n){"use strict";n.r(e),n.d(e,"PluginSmartSegmentation",(function(){return i}));var r=n(2),a=(n(320),n(119),n(164),n(168),n(377)),s=n(12);
/**
 * @copyright CEA-LIST/DIASI/SIALV/LVA (2019)
 * @author CEA-LIST/DIASI/SIALV/LVA <pixano@cea.fr>
 * @license CECILL-C
*/
class i extends a.PluginSegmentation{initDisplay(){super.initDisplay();const t=Object(s.b)("application").taskName,e=Object(s.b)("application").tasks.find(e=>e.name===t);e.spec.settings&&e.spec.settings.model&&(this.element.model=e.spec.settings.model)}get toolDrawer(){return r.e`
        ${super.toolDrawer}
        <mwc-icon-button ?selected=${"smart-create"===this.mode}
                         icon="add_circle_outline"
                         title="Smart create"
                         @click="${()=>this.mode="smart-create"}">
                         </mwc-icon-button>
    `}get editor(){return r.e`<pxn-smart-segmentation id="main"
                            mode=${this.mode}
                            maskVisuMode=${this.maskVisuMode}
                            @update=${this.onUpdate}
                            @selection=${this.onSelection}
                            @delete=${this.onDelete}
                            @mode=${this.onModeChange}></pxn-smart-segmentation>`}}customElements.define("plugin-smart-segmentation",i)}])]);